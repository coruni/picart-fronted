// This file is auto-generated by @hey-api/openapi-ts

export type CreateRoleDto = {
  /**
   * 角色名称
   */
  name: string;
  /**
   * 角色描述
   */
  description: string;
  /**
   * 权限ID列表
   */
  permissionIds?: Array<string>;
};

export type CreatePermissionDto = {
  /**
   * 权限名称
   */
  name: string;
  /**
   * 权限描述
   */
  description: string;
};

export type UpdateRoleDto = {
  /**
   * 角色名称
   */
  name?: string;
  /**
   * 角色描述
   */
  description?: string;
  /**
   * 权限ID列表
   */
  permissionIds?: Array<number>;
};

export type Permission = {
  [key: string]: unknown;
};

export type CreateConfigDto = {
  [key: string]: unknown;
};

export type UpdatePermissionDto = {
  /**
   * 权限名称
   */
  name?: string;
  /**
   * 权限描述
   */
  description?: string;
};

export type UpdateConfigDto = {
  [key: string]: unknown;
};

export type LoginDto = {
  /**
   * 用户名
   */
  username: string;
  /**
   * 密码
   */
  password: string;
};

export type Role = {
  [key: string]: unknown;
};

export type CreateUserDto = {
  /**
   * 用户名
   */
  username: string;
  /**
   * 密码
   */
  password: string;
  /**
   * 昵称
   */
  nickname?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 邮箱
   */
  email?: string;
  /**
   * 手机号
   */
  phone?: string;
  /**
   * 角色ID列表（仅超级管理员可指定）
   */
  roleIds?: Array<number>;
  /**
   * 钱包余额
   */
  wallet?: number;
  /**
   * 邀请码
   */
  inviteCode?: string;
  /**
   * 邮箱验证码
   */
  verificationCode?: string;
};

export type UpdateUserDto = {
  [key: string]: unknown;
};

export type CreateArticleDto = {
  /**
   * 文章标题
   */
  title: string;
  /**
   * 文章内容
   */
  content: string;
  /**
   * 文章摘要
   */
  summary?: string;
  /**
   * 文章图片
   */
  images?: string;
  /**
   * 封面图片
   */
  cover?: string;
  /**
   * 分类ID
   */
  categoryId: number;
  /**
   * 标签名称数组（不存在的标签会自动创建）
   */
  tagNames?: Array<string>;
  /**
   * 标签ID数组（与tagNames二选一）
   */
  tagIds?: Array<number>;
  /**
   * 文章状态
   */
  status?: 'DRAFT' | 'PUBLISHED';
  /**
   * 是否需要登录后才能查看
   */
  requireLogin: boolean;
  /**
   * 是否仅关注后可查看
   */
  requireFollow: boolean;
  /**
   * 是否需要支付后才能查看
   */
  requirePayment: boolean;
  /**
   * 查看所需支付金额
   */
  viewPrice: number;
  /**
   * 文章类型
   */
  type: 'image' | 'mixed';
};

export type UpdateArticleDto = {
  /**
   * 文章标题
   */
  title?: string;
  /**
   * 文章内容
   */
  content?: string;
  /**
   * 文章摘要
   */
  summary?: string;
  /**
   * 文章图片
   */
  images?: string;
  /**
   * 封面图片
   */
  cover?: string;
  /**
   * 分类ID
   */
  categoryId?: number;
  /**
   * 标签名称数组（不存在的标签会自动创建）
   */
  tagNames?: Array<string>;
  /**
   * 标签ID数组（与tagNames二选一）
   */
  tagIds?: Array<string>;
  /**
   * 文章状态
   */
  status?: 'DRAFT' | 'PUBLISHED';
  /**
   * 是否需要登录后才能查看
   */
  requireLogin?: boolean;
  /**
   * 是否仅关注后可查看
   */
  requireFollow?: boolean;
  /**
   * 是否需要支付后才能查看
   */
  requirePayment?: boolean;
  /**
   * 查看所需支付金额
   */
  viewPrice?: number;
  /**
   * 文章类型
   */
  type?: 'image' | 'mixed';
};

export type CreateCommentDto = {
  /**
   * 评论内容
   */
  content: string;
  /**
   * 文章ID
   */
  articleId: number;
  /**
   * 父评论ID
   */
  parentId?: number;
};

export type UpdateCommentDto = {
  /**
   * 评论内容
   */
  content?: string;
  /**
   * 文章ID
   */
  articleId?: number;
  /**
   * 父评论ID
   */
  parentId?: number;
};

export type UserCommissionConfigDto = {
  /**
   * 文章抽成比例（0-1之间）
   */
  articleCommissionRate: number;
  /**
   * 会员抽成比例（0-1之间）
   */
  membershipCommissionRate: number;
  /**
   * 商品抽成比例（0-1之间）
   */
  productCommissionRate: number;
  /**
   * 服务抽成比例（0-1之间）
   */
  serviceCommissionRate: number;
  /**
   * 是否启用自定义抽成
   */
  enableCustomCommission: boolean;
  /**
   * 备注
   */
  remark: string;
};

export type CreateTagDto = {
  /**
   * 标签名称
   */
  name: string;
  /**
   * 标签描述
   */
  description?: string;
  /**
   * 标签头像
   */
  avatar?: string;
  /**
   * 标签背景
   */
  background?: string;
  /**
   * 标签封面
   */
  cover?: string;
  /**
   * 排序
   */
  sort?: number;
};

export type CalculateCommissionDto = {
  /**
   * 金额
   */
  amount: number;
  /**
   * 抽成类型
   */
  type: 'article' | 'membership' | 'product' | 'service';
};

export type UpdateTagDto = {
  /**
   * 标签名称
   */
  name?: string;
  /**
   * 标签描述
   */
  description?: string;
  /**
   * 标签头像
   */
  avatar?: string;
  /**
   * 标签背景
   */
  background?: string;
  /**
   * 标签封面
   */
  cover?: string;
  /**
   * 排序
   */
  sort?: number;
};

export type SendMailDto = {
  /**
   * 邮箱
   */
  email: string;
};

export type CreateCategoryDto = {
  /**
   * 分类名称
   */
  name: string;
  /**
   * 分类描述
   */
  description?: string;
  /**
   * 排序
   */
  sort: number;
  /**
   * 父分类ID
   */
  parentId?: number;
  /**
   * 分类头像
   */
  avatar?: string;
  /**
   * 分类背景
   */
  background?: string;
  /**
   * 分类封面
   */
  cover?: string;
  /**
   * 分类状态
   */
  status: string;
};

export type UpdateCategoryDto = {
  /**
   * 分类名称
   */
  name?: string;
  /**
   * 分类描述
   */
  description?: string;
  /**
   * 排序
   */
  sort?: number;
  /**
   * 父分类ID
   */
  parentId?: number;
  /**
   * 分类头像
   */
  avatar?: string;
  /**
   * 分类背景
   */
  background?: string;
  /**
   * 分类封面
   */
  cover?: string;
  /**
   * 分类状态
   */
  status?: string;
};

export type ArticleLikeDto = {
  /**
   * 表情类型
   */
  reactionType: 'like' | 'love' | 'haha' | 'wow' | 'sad' | 'angry' | 'dislike';
};

export type BaseResponseDto = {
  /**
   * 业务状态码
   */
  code: number;
  /**
   * 提示信息
   */
  message: string;
  /**
   * 数据体
   */
  data?: {
    [key: string]: unknown;
  };
  /**
   * 时间戳
   */
  timestamp: number;
  /**
   * 路径
   */
  path: string;
};

export type PaginatedResponseDto = {
  /**
   * 业务状态码
   */
  code: number;
  /**
   * 提示信息
   */
  message: string;
  /**
   * 数据列表
   */
  data: {
    [key: string]: unknown;
  };
};

export type CreateInviteDto = {
  /**
   * 邀请类型
   */
  type: 'GENERAL' | 'VIP';
  /**
   * 邀请分成比例（0-1之间）
   */
  commissionRate?: number;
  /**
   * 过期时间
   */
  expiredAt?: string;
  /**
   * 备注
   */
  remark?: string;
};

export type UseInviteDto = {
  /**
   * 邀请码
   */
  inviteCode: string;
};

export type ListResponseDto = {
  /**
   * 业务状态码
   */
  code: number;
  /**
   * 提示信息
   */
  message: string;
  /**
   * 数据列表
   */
  data: Array<{
    [key: string]: unknown;
  }>;
  /**
   * 时间戳
   */
  timestamp: number;
};

export type CreateUploadDto = {
  [key: string]: unknown;
};

export type Upload = {
  [key: string]: unknown;
};

export type UpdateUploadDto = {
  [key: string]: unknown;
};

export type CreateMessageDto = {
  [key: string]: unknown;
};

export type UpdateMessageDto = {
  [key: string]: unknown;
};

export type AppControllerGetHelloData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/';
};

export type AppControllerGetHelloResponses = {
  200: unknown;
};

export type RoleControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/role';
};

export type RoleControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: Array<Role>;
};

export type RoleControllerFindAllResponse =
  RoleControllerFindAllResponses[keyof RoleControllerFindAllResponses];

export type RoleControllerCreateData = {
  body?: CreateRoleDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/role';
};

export type RoleControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: Role;
};

export type RoleControllerCreateResponse =
  RoleControllerCreateResponses[keyof RoleControllerCreateResponses];

export type RoleControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/role/{id}';
};

export type RoleControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type RoleControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/role/{id}';
};

export type RoleControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: Role;
};

export type RoleControllerFindOneResponse =
  RoleControllerFindOneResponses[keyof RoleControllerFindOneResponses];

export type RoleControllerUpdateData = {
  body?: UpdateRoleDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/role/{id}';
};

export type RoleControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: Role;
};

export type RoleControllerUpdateResponse =
  RoleControllerUpdateResponses[keyof RoleControllerUpdateResponses];

export type ConfigControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/config';
};

export type ConfigControllerFindAllErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type ConfigControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ConfigControllerUpdateAllData = {
  body?: Array<string>;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/config';
};

export type ConfigControllerUpdateAllErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type ConfigControllerUpdateAllResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type ConfigControllerCreateData = {
  body?: CreateConfigDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/config';
};

export type ConfigControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type ConfigControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: unknown;
};

export type ConfigControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置ID
     */
    id: number;
  };
  query?: never;
  url: '/config/{id}';
};

export type ConfigControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 配置不存在
   */
  404: unknown;
};

export type ConfigControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type ConfigControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置ID
     */
    id: number;
  };
  query?: never;
  url: '/config/{id}';
};

export type ConfigControllerFindOneErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 配置不存在
   */
  404: unknown;
};

export type ConfigControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ConfigControllerUpdateData = {
  body?: UpdateConfigDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置ID
     */
    id: number;
  };
  query?: never;
  url: '/config/{id}';
};

export type ConfigControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 配置不存在
   */
  404: unknown;
};

export type ConfigControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type ConfigControllerFindByGroupData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置分组
     */
    group: string;
  };
  query?: never;
  url: '/config/group/{group}';
};

export type ConfigControllerFindByGroupErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type ConfigControllerFindByGroupResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ConfigControllerUpdateGroupData = {
  body?: Array<string>;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置分组
     */
    group: string;
  };
  query?: never;
  url: '/config/group/{group}';
};

export type ConfigControllerUpdateGroupErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type ConfigControllerUpdateGroupResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type ConfigControllerFindByKeyData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置键
     */
    key: string;
  };
  query?: never;
  url: '/config/key/{key}';
};

export type ConfigControllerFindByKeyErrors = {
  /**
   * 配置不存在
   */
  404: unknown;
};

export type ConfigControllerFindByKeyResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ConfigControllerUpdateByKeyData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 配置键
     */
    key: string;
  };
  query?: never;
  url: '/config/key/{key}';
};

export type ConfigControllerUpdateByKeyErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 配置不存在
   */
  404: unknown;
};

export type ConfigControllerUpdateByKeyResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type ConfigControllerGetSystemInfoData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/config/system/info';
};

export type ConfigControllerGetSystemInfoResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ConfigControllerGetPublicData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/config/public';
};

export type ConfigControllerGetPublicResponses = {
  200: {
    code: number;
    message: string;
    data: {
      site_name: string;
      site_description: string;
      site_keywords: string;
      site_logo: string;
      site_favicon: string;
      user_registration_enabled: boolean;
      user_email_verification: boolean;
      comment_approval_required: boolean;
      article_approval_required: boolean;
      maintenance_mode: boolean;
      maintenance_message: string;
      invite_code_required: boolean;
      invite_code_enabled: boolean;
      site_subname: string;
    };
  };
};

export type ConfigControllerGetPublicResponse =
  ConfigControllerGetPublicResponses[keyof ConfigControllerGetPublicResponses];

export type UserControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
    username?: string;
  };
  url: '/user';
};

export type UserControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id?: number;
        username?: string;
        nickname?: string;
        status?: string;
        avatar?: string;
        description?: unknown;
        roles?: Array<{
          id?: number;
          name?: string;
          displayName?: unknown;
          description?: string;
          permissions?: Array<{
            id: number;
            name: string;
            description: string;
          }>;
          createdAt?: string;
          updatedAt?: string;
        }>;
        config?: unknown;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type UserControllerFindAllResponse =
  UserControllerFindAllResponses[keyof UserControllerFindAllResponses];

export type UserControllerCreateData = {
  body?: CreateUserDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user';
};

export type UserControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type UserControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: unknown;
};

export type UserControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}';
};

export type UserControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 用户不存在
   */
  404: unknown;
};

export type UserControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type UserControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}';
};

export type UserControllerFindOneResponses = {
  200: unknown;
};

export type UserControllerUpdateData = {
  body?: UpdateUserDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}';
};

export type UserControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 用户不存在
   */
  404: unknown;
};

export type UserControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type UserControllerGetProfileData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/profile';
};

export type UserControllerGetProfileErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerGetProfileResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      id: number;
      username: string;
      nickname: string;
      email: string;
      phone: string;
      status: string;
      banned: unknown;
      banReason: unknown;
      avatar: string;
      description: unknown;
      address: unknown;
      gender: string;
      birthDate: unknown;
      articleCount: number;
      followerCount: number;
      followingCount: number;
      level: number;
      experience: number;
      score: number;
      wallet: number;
      membershipLevel: number;
      membershipLevelName: string;
      membershipStatus: string;
      membershipStartDate: unknown;
      membershipEndDate: unknown;
      lastLoginAt: string;
      lastActiveAt: unknown;
      refreshToken: unknown;
      inviterId: unknown;
      inviteCode: string;
      inviteEarnings: string;
      inviteCount: number;
      roles: Array<{
        id?: number;
        name?: string;
        displayName?: unknown;
        description?: string;
        permissions?: Array<{
          id: number;
          name: string;
          description: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      config: unknown;
      createdAt: string;
      updatedAt: string;
    };
  };
};

export type UserControllerGetProfileResponse =
  UserControllerGetProfileResponses[keyof UserControllerGetProfileResponses];

export type UserControllerGetFollowerCountData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}/followers/count';
};

export type UserControllerGetFollowerCountResponses = {
  200: unknown;
};

export type UserControllerGetFollowingCountData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}/followings/count';
};

export type UserControllerGetFollowingCountResponses = {
  200: unknown;
};

export type UserControllerGetFollowersData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/user/{id}/followers';
};

export type UserControllerGetFollowersResponses = {
  200: unknown;
};

export type UserControllerGetFollowingsData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/user/{id}/followings';
};

export type UserControllerGetFollowingsResponses = {
  200: unknown;
};

export type UserControllerGetUserCommissionConfigData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/commission/config';
};

export type UserControllerGetUserCommissionConfigErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerGetUserCommissionConfigResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type UserControllerSetUserCommissionConfigData = {
  body?: UserCommissionConfigDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/commission/config';
};

export type UserControllerSetUserCommissionConfigErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerSetUserCommissionConfigResponses = {
  /**
   * 设置成功
   */
  201: unknown;
};

export type UserControllerGetWalletData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/wallet';
};

export type UserControllerGetWalletErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerGetWalletResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type UserControllerLoginData = {
  body?: LoginDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/login';
};

export type UserControllerLoginErrors = {
  /**
   * 用户名或密码错误
   */
  401: unknown;
};

export type UserControllerLoginResponses = {
  /**
   * 登录成功，返回JWT token
   */
  201: {
    code: number;
    message: string;
    data: {
      id: number;
      username: string;
      nickname: string;
      email: string;
      phone: string;
      status: string;
      banned: unknown;
      banReason: unknown;
      avatar: string;
      description: unknown;
      address: unknown;
      gender: string;
      birthDate: unknown;
      articleCount: number;
      followerCount: number;
      followingCount: number;
      level: number;
      experience: number;
      score: number;
      wallet: number;
      membershipLevel: number;
      membershipLevelName: string;
      membershipStatus: string;
      membershipStartDate: unknown;
      membershipEndDate: unknown;
      lastLoginAt: string;
      lastActiveAt: unknown;
      refreshToken: string;
      inviterId: unknown;
      inviteCode: string;
      inviteEarnings: string;
      inviteCount: number;
      roles: Array<{
        id?: number;
        name?: string;
        displayName?: unknown;
        description?: string;
        permissions?: Array<{
          id: number;
          name: string;
          description: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      createdAt: string;
      updatedAt: string;
      token: string;
    };
  };
};

export type UserControllerLoginResponse =
  UserControllerLoginResponses[keyof UserControllerLoginResponses];

export type UserControllerRegisterUserData = {
  body?: CreateUserDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/register';
};

export type UserControllerRegisterUserErrors = {
  /**
   * 请求参数不合法
   */
  400: unknown;
  /**
   * 用户不存在
   */
  404: unknown;
  /**
   * 用户名已存在
   */
  409: unknown;
};

export type UserControllerRegisterUserResponses = {
  /**
   * 注册成功，返回用户信息
   */
  201: {
    code: number;
    message: string;
    data: {
      id: number;
      username: string;
      nickname: string;
      email: string;
      phone: unknown;
      status: string;
      banned: unknown;
      banReason: unknown;
      avatar: string;
      description: unknown;
      address: unknown;
      gender: string;
      birthDate: unknown;
      articleCount: number;
      followerCount: number;
      followingCount: number;
      level: number;
      experience: number;
      score: number;
      wallet: number;
      membershipLevel: number;
      membershipLevelName: string;
      membershipStatus: string;
      membershipStartDate: unknown;
      membershipEndDate: unknown;
      lastLoginAt: unknown;
      lastActiveAt: unknown;
      refreshToken: string;
      inviterId: unknown;
      inviteCode: unknown;
      inviteEarnings: string;
      inviteCount: number;
      roles: Array<{
        id?: number;
        name?: string;
        displayName?: unknown;
        description?: string;
        permissions?: Array<{
          id: number;
          name: string;
          description: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      createdAt: string;
      updatedAt: string;
      token: string;
    };
  };
};

export type UserControllerRegisterUserResponse =
  UserControllerRegisterUserResponses[keyof UserControllerRegisterUserResponses];

export type UserControllerRefreshTokenData = {
  body?: {
    refreshToken?: string;
  };
  headers?: {
    'Device-Id'?: string;
    Authorization?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/refresh-token';
};

export type UserControllerRefreshTokenResponses = {
  201: unknown;
};

export type UserControllerLogoutData = {
  body?: never;
  headers?: {
    'Device-Id'?: string;
    Authorization?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/logout';
};

export type UserControllerLogoutResponses = {
  201: unknown;
};

export type UserControllerFollowData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}/follow';
};

export type UserControllerFollowResponses = {
  201: unknown;
};

export type UserControllerUnfollowData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/user/{id}/unfollow';
};

export type UserControllerUnfollowResponses = {
  201: unknown;
};

export type UserControllerCalculateCommissionData = {
  body?: CalculateCommissionDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/commission/calculate';
};

export type UserControllerCalculateCommissionErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerCalculateCommissionResponses = {
  /**
   * 计算成功
   */
  200: unknown;
};

export type UserControllerRechargeWalletData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/wallet/recharge';
};

export type UserControllerRechargeWalletErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerRechargeWalletResponses = {
  /**
   * 充值成功
   */
  200: unknown;
};

export type UserControllerWithdrawWalletData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/wallet/withdraw';
};

export type UserControllerWithdrawWalletErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type UserControllerWithdrawWalletResponses = {
  /**
   * 提现成功
   */
  200: unknown;
};

export type UserControllerSendVerificationCodeData = {
  body?: SendMailDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/user/email/verification';
};

export type UserControllerSendVerificationCodeErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 请求过多
   */
  429: unknown;
};

export type UserControllerSendVerificationCodeResponses = {
  /**
   * 发送成功
   */
  200: unknown;
};

export type ArticleControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
    title?: string;
    /**
     * 分类
     */
    categoryId?: number;
    type?: 'all' | 'latest' | 'following' | 'popular';
  };
  url: '/article';
};

export type ArticleControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id: number;
        title: string;
        requireLogin?: boolean;
        requireFollow?: boolean;
        requirePayment?: boolean;
        viewPrice?: string;
        type?: string;
        content?: string;
        images?: string;
        summary?: string;
        views?: number;
        likes?: number;
        status?: string;
        cover?: string;
        authorId?: number;
        author?: {
          id: number;
          username: string;
          nickname: string;
          avatar: string;
          status: string;
          createdAt: string;
          updatedAt: string;
          description: unknown;
          followerCount: number;
          followingCount: number;
        };
        category?: {
          id: number;
          name: string;
          description: string;
          parentId: number;
          parent: {
            id: number;
            name: string;
            description: string;
            parentId: unknown;
            avatar: string;
            background: string;
            cover: string;
            sort: number;
            status: string;
            articleCount: number;
            followCount: number;
            createdAt: string;
            updatedAt: string;
          };
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          status: string;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        };
        tags?: Array<{
          id: number;
          name: string;
          description: string;
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type ArticleControllerFindAllResponse =
  ArticleControllerFindAllResponses[keyof ArticleControllerFindAllResponses];

export type ArticleControllerCreateData = {
  body?: CreateArticleDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/article';
};

export type ArticleControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: unknown;
};

export type ArticleControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}';
};

export type ArticleControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type ArticleControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}';
};

export type ArticleControllerFindOneErrors = {
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      id: number;
      title: string;
      requireLogin: boolean;
      requireFollow: boolean;
      requirePayment: boolean;
      viewPrice: string;
      type: string;
      content: string;
      images: string;
      summary: unknown;
      views: number;
      likes: number;
      status: string;
      cover: unknown;
      authorId: number;
      author: {
        id: number;
        username: string;
        nickname: string;
        avatar: string;
        status: string;
        createdAt: string;
        updatedAt: string;
        description: unknown;
        followerCount: number;
        followingCount: number;
      };
      category: {
        id: number;
        name: string;
        description: string;
        parentId: number;
        parent: {
          id: number;
          name: string;
          description: string;
          parentId: unknown;
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          status: string;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        };
        avatar: string;
        background: string;
        cover: string;
        sort: number;
        status: string;
        articleCount: number;
        followCount: number;
        createdAt: string;
        updatedAt: string;
      };
      tags: Array<{
        id: number;
        name: string;
        description: string;
        avatar: string;
        background: string;
        cover: string;
        sort: number;
        articleCount: number;
        followCount: number;
        createdAt: string;
        updatedAt: string;
      }>;
      createdAt: string;
      updatedAt: string;
    };
  };
};

export type ArticleControllerFindOneResponse =
  ArticleControllerFindOneResponses[keyof ArticleControllerFindOneResponses];

export type ArticleControllerUpdateData = {
  body?: UpdateArticleDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}';
};

export type ArticleControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type ArticleControllerGetLikeStatusData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}/like/status';
};

export type ArticleControllerGetLikeStatusErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerGetLikeStatusResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ArticleControllerGetLikeCountData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}/like/count';
};

export type ArticleControllerGetLikeCountErrors = {
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerGetLikeCountResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type ArticleControllerArticleSearchData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query: {
    /**
     * 分页
     */
    page?: number;
    /**
     * 限制
     */
    limit?: number;
    keyword: string;
    categoryId?: number;
  };
  url: '/article/search';
};

export type ArticleControllerArticleSearchResponses = {
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id?: number;
        title?: string;
        requireLogin?: boolean;
        requireFollow?: boolean;
        requirePayment?: boolean;
        viewPrice?: string;
        type?: string;
        content?: string;
        images?: Array<string>;
        summary?: unknown;
        views?: number;
        likes?: number;
        status?: string;
        cover?: string;
        authorId?: number;
        author?: {
          id: number;
          username: string;
          nickname: string;
          avatar: string;
          status: string;
          createdAt: string;
          updatedAt: string;
          description: unknown;
          followerCount: number;
          followingCount: number;
        };
        category?: {
          id: number;
          name: string;
          description: string;
          parentId: number;
          parent: {
            id: number;
            name: string;
            description: string;
            parentId: unknown;
            avatar: string;
            background: string;
            cover: string;
            sort: number;
            status: string;
            articleCount: number;
            followCount: number;
            createdAt: string;
            updatedAt: string;
          };
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          status: string;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        };
        tags?: Array<{
          id: number;
          name: string;
          description: string;
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type ArticleControllerArticleSearchResponse =
  ArticleControllerArticleSearchResponses[keyof ArticleControllerArticleSearchResponses];

export type ArticleControllerFindRecommendData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 文章id
     */
    id: string;
  };
  query?: never;
  url: '/article/recommend/{id}';
};

export type ArticleControllerFindRecommendResponses = {
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id?: number;
        title?: string;
        requireLogin?: boolean;
        requireFollow?: boolean;
        requirePayment?: boolean;
        viewPrice?: string;
        type?: string;
        content?: string;
        images?: Array<string>;
        summary?: unknown;
        views?: number;
        likes?: number;
        status?: string;
        cover?: string;
        authorId?: number;
        author?: {
          id: number;
          username: string;
          nickname: string;
          avatar: string;
          status: string;
          createdAt: string;
          updatedAt: string;
          description: unknown;
          followerCount: number;
          followingCount: number;
        };
        category?: {
          id: number;
          name: string;
          description: string;
          parentId: number;
          parent: {
            id: number;
            name: string;
            description: string;
            parentId: unknown;
            avatar: string;
            background: string;
            cover: string;
            sort: number;
            status: string;
            articleCount: number;
            followCount: number;
            createdAt: string;
            updatedAt: string;
          };
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          status: string;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        };
        tags?: Array<{
          id?: number;
          name?: string;
          description?: string;
          avatar?: string;
          background?: string;
          cover?: string;
          sort?: number;
          articleCount?: number;
          followCount?: number;
          createdAt?: string;
          updatedAt?: string;
        }>;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type ArticleControllerFindRecommendResponse =
  ArticleControllerFindRecommendResponses[keyof ArticleControllerFindRecommendResponses];

export type ArticleControllerFindArticleByAuthorData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 用户id
     */
    id: string;
  };
  query?: {
    /**
     * 分页
     */
    page?: number;
    /**
     * 限制
     */
    limit?: number;
    type?: 'all' | 'popular' | 'latest';
  };
  url: '/article/author/{id}';
};

export type ArticleControllerFindArticleByAuthorResponses = {
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id: number;
        title: string;
        requireLogin: boolean;
        requireFollow: boolean;
        requirePayment: boolean;
        viewPrice: string;
        type: string;
        content: string;
        images: Array<string>;
        summary: unknown;
        views: number;
        likes: number;
        status: string;
        cover: string;
        authorId: number;
        author: {
          id: number;
          username: string;
          nickname: string;
          avatar: string;
          status: string;
          createdAt: string;
          updatedAt: string;
          description: unknown;
          followerCount: number;
          followingCount: number;
        };
        category: {
          id: number;
          name: string;
          description: string;
          parentId: number;
          parent: {
            id: number;
            name: string;
            description: string;
            parentId: unknown;
            avatar: string;
            background: string;
            cover: string;
            sort: number;
            status: string;
            articleCount: number;
            followCount: number;
            createdAt: string;
            updatedAt: string;
          };
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          status: string;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        };
        tags: Array<{
          id: number;
          name: string;
          description: string;
          avatar: string;
          background: string;
          cover: string;
          sort: number;
          articleCount: number;
          followCount: number;
          createdAt: string;
          updatedAt: string;
        }>;
        createdAt: string;
        updatedAt: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type ArticleControllerFindArticleByAuthorResponse =
  ArticleControllerFindArticleByAuthorResponses[keyof ArticleControllerFindArticleByAuthorResponses];

export type ArticleControllerLikeData = {
  body?: ArticleLikeDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/article/{id}/like';
};

export type ArticleControllerLikeErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 文章不存在
   */
  404: unknown;
};

export type ArticleControllerLikeResponses = {
  /**
   * 操作成功
   */
  200: unknown;
};

export type CommentControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 文章ID
     */
    id: number;
  };
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/comments/article/{id}';
};

export type CommentControllerFindAllErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 文章不存在
   */
  404: unknown;
};

export type CommentControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type CommentControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 评论ID
     */
    id: number;
  };
  query?: never;
  url: '/comments/{id}';
};

export type CommentControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 评论不存在
   */
  404: unknown;
};

export type CommentControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: BaseResponseDto;
};

export type CommentControllerRemoveResponse =
  CommentControllerRemoveResponses[keyof CommentControllerRemoveResponses];

export type CommentControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 评论ID
     */
    id: number;
  };
  query?: {
    /**
     * 子评论页码
     */
    repliesPage?: number;
    /**
     * 每页子评论数量
     */
    repliesLimit?: number;
  };
  url: '/comments/{id}';
};

export type CommentControllerFindOneErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 评论不存在
   */
  404: unknown;
};

export type CommentControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type CommentControllerUpdateData = {
  body?: UpdateCommentDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 评论ID
     */
    id: number;
  };
  query?: never;
  url: '/comments/{id}';
};

export type CommentControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 评论不存在
   */
  404: unknown;
};

export type CommentControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type CommentControllerGetRepliesData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 父评论ID
     */
    id: number;
  };
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/comments/{id}/replies';
};

export type CommentControllerGetRepliesErrors = {
  /**
   * 父评论不存在
   */
  404: unknown;
};

export type CommentControllerGetRepliesResponses = {
  /**
   * 获取成功
   */
  200: PaginatedResponseDto;
};

export type CommentControllerGetRepliesResponse =
  CommentControllerGetRepliesResponses[keyof CommentControllerGetRepliesResponses];

export type CommentControllerGetUserCommentsData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 用户ID
     */
    userId: number;
  };
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/comments/user/{userId}';
};

export type CommentControllerGetUserCommentsResponses = {
  /**
   * 获取成功
   */
  200: PaginatedResponseDto;
};

export type CommentControllerGetUserCommentsResponse =
  CommentControllerGetUserCommentsResponses[keyof CommentControllerGetUserCommentsResponses];

export type CommentControllerGetCommentCountData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 文章ID
     */
    id: number;
  };
  query?: never;
  url: '/comments/article/{id}/count';
};

export type CommentControllerGetCommentCountResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type CommentControllerLikeData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 评论ID
     */
    id: number;
  };
  query?: never;
  url: '/comments/{id}/like';
};

export type CommentControllerLikeErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 评论不存在
   */
  404: unknown;
};

export type CommentControllerLikeResponses = {
  /**
   * 点赞成功
   */
  200: unknown;
};

export type CommentControllerCreateData = {
  body?: CreateCommentDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/comments';
};

export type CommentControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 文章或父评论不存在
   */
  404: unknown;
};

export type CommentControllerCreateResponses = {
  /**
   * 评论创建成功
   */
  201: unknown;
};

export type TagControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/tag';
};

export type TagControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id?: number;
        name?: string;
        description?: string;
        avatar?: string;
        background?: string;
        cover?: string;
        sort?: number;
        articleCount?: number;
        followCount?: number;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type TagControllerFindAllResponse =
  TagControllerFindAllResponses[keyof TagControllerFindAllResponses];

export type TagControllerCreateData = {
  body?: CreateTagDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/tag';
};

export type TagControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type TagControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: {
    code: number;
    message: string;
    data: {
      id: number;
      name: string;
      description: string;
      avatar: string;
      background: string;
      cover: string;
      sort: number;
      articleCount: number;
      followCount: number;
      createdAt: string;
      updatedAt: string;
    };
  };
};

export type TagControllerCreateResponse =
  TagControllerCreateResponses[keyof TagControllerCreateResponses];

export type TagControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/tag/{id}';
};

export type TagControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 标签不存在
   */
  404: unknown;
};

export type TagControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type TagControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/tag/{id}';
};

export type TagControllerFindOneErrors = {
  /**
   * 标签不存在
   */
  404: unknown;
};

export type TagControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      id: number;
      name: string;
      description: string;
      avatar: string;
      background: string;
      cover: string;
      sort: number;
      articleCount: number;
      followCount: number;
      createdAt: string;
      updatedAt: string;
    };
  };
};

export type TagControllerFindOneResponse =
  TagControllerFindOneResponses[keyof TagControllerFindOneResponses];

export type TagControllerUpdateData = {
  body?: UpdateTagDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/tag/{id}';
};

export type TagControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 标签不存在
   */
  404: unknown;
};

export type TagControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type TagControllerUnfollowData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/tag/{id}/follow';
};

export type TagControllerUnfollowErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 标签不存在
   */
  404: unknown;
};

export type TagControllerUnfollowResponses = {
  /**
   * 取消关注成功
   */
  200: unknown;
};

export type TagControllerFollowData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/tag/{id}/follow';
};

export type TagControllerFollowErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 标签不存在
   */
  404: unknown;
};

export type TagControllerFollowResponses = {
  /**
   * 关注成功
   */
  200: unknown;
};

export type CategoryControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
    /**
     * 分类名
     */
    name?: string;
    /**
     * 状态
     */
    status?: string;
    /**
     * 主分类ID
     */
    parentId?: number;
  };
  url: '/category';
};

export type CategoryControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      data: Array<{
        id?: number;
        name?: string;
        description?: string;
        parentId?: number;
        children?: Array<{
          id?: number;
          name?: string;
          description?: string;
          parentId?: number;
          avatar?: string;
          background?: string;
          cover?: string;
          sort?: number;
          status?: string;
          articleCount?: number;
          followCount?: number;
          createdAt?: string;
          updatedAt?: string;
        }>;
        avatar?: string;
        background?: string;
        cover?: string;
        sort?: number;
        status?: string;
        articleCount?: number;
        followCount?: number;
        createdAt?: string;
        updatedAt?: string;
      }>;
      meta: {
        total: number;
        page: number;
        limit: number;
        totalPages: number;
      };
    };
  };
};

export type CategoryControllerFindAllResponse =
  CategoryControllerFindAllResponses[keyof CategoryControllerFindAllResponses];

export type CategoryControllerCreateData = {
  body?: CreateCategoryDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/category';
};

export type CategoryControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type CategoryControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: unknown;
};

export type CategoryControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/category/{id}';
};

export type CategoryControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 分类不存在
   */
  404: unknown;
};

export type CategoryControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type CategoryControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/category/{id}';
};

export type CategoryControllerFindOneErrors = {
  /**
   * 分类不存在
   */
  404: unknown;
};

export type CategoryControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: {
    code: number;
    message: string;
    data: {
      id: number;
      name: string;
      description: string;
      parentId: number;
      children: Array<{
        id?: number;
        name?: string;
        description?: string;
        parentId?: number;
        avatar?: string;
        background?: string;
        cover?: string;
        sort?: number;
        status?: string;
        articleCount?: number;
        followCount?: number;
        createdAt?: string;
        updatedAt?: string;
      }>;
      avatar: string;
      background: string;
      cover: string;
      sort: number;
      status: string;
      articleCount: number;
      followCount: number;
      createdAt: string;
      updatedAt: string;
    };
  };
};

export type CategoryControllerFindOneResponse =
  CategoryControllerFindOneResponses[keyof CategoryControllerFindOneResponses];

export type CategoryControllerUpdateData = {
  body?: UpdateCategoryDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/category/{id}';
};

export type CategoryControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 分类不存在
   */
  404: unknown;
};

export type CategoryControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: unknown;
};

export type PermissionControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/permission';
};

export type PermissionControllerFindAllErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type PermissionControllerFindAllResponses = {
  /**
   * 获取成功
   */
  200: Array<Permission>;
};

export type PermissionControllerFindAllResponse =
  PermissionControllerFindAllResponses[keyof PermissionControllerFindAllResponses];

export type PermissionControllerCreateData = {
  body?: CreatePermissionDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/permission';
};

export type PermissionControllerCreateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
};

export type PermissionControllerCreateResponses = {
  /**
   * 创建成功
   */
  201: Permission;
};

export type PermissionControllerCreateResponse =
  PermissionControllerCreateResponses[keyof PermissionControllerCreateResponses];

export type PermissionControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/permission/{id}';
};

export type PermissionControllerRemoveErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 权限不存在
   */
  404: unknown;
};

export type PermissionControllerRemoveResponses = {
  /**
   * 删除成功
   */
  200: unknown;
};

export type PermissionControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/permission/{id}';
};

export type PermissionControllerFindOneErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 权限不存在
   */
  404: unknown;
};

export type PermissionControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: Permission;
};

export type PermissionControllerFindOneResponse =
  PermissionControllerFindOneResponses[keyof PermissionControllerFindOneResponses];

export type PermissionControllerUpdateData = {
  body?: UpdatePermissionDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/permission/{id}';
};

export type PermissionControllerUpdateErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 权限不存在
   */
  404: unknown;
};

export type PermissionControllerUpdateResponses = {
  /**
   * 更新成功
   */
  200: Permission;
};

export type PermissionControllerUpdateResponse =
  PermissionControllerUpdateResponses[keyof PermissionControllerUpdateResponses];

export type OrderControllerGetUserOrdersData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query: {
    page: string;
    limit: string;
  };
  url: '/order/list';
};

export type OrderControllerGetUserOrdersResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type OrderControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/order/{id}';
};

export type OrderControllerFindOneErrors = {
  /**
   * 订单不存在
   */
  404: unknown;
};

export type OrderControllerFindOneResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type OrderControllerFindByOrderNoData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    orderNo: string;
  };
  query?: never;
  url: '/order/no/{orderNo}';
};

export type OrderControllerFindByOrderNoErrors = {
  /**
   * 订单不存在
   */
  404: unknown;
};

export type OrderControllerFindByOrderNoResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type OrderControllerGetWalletBalanceData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/order/wallet/balance';
};

export type OrderControllerGetWalletBalanceErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type OrderControllerGetWalletBalanceResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type OrderControllerCreateOrderData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/order';
};

export type OrderControllerCreateOrderErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type OrderControllerCreateOrderResponses = {
  /**
   * 创建成功
   */
  201: {
    code: number;
    message: string;
    data: {
      order: {
        id: number;
        userId: number;
        authorId: string;
        orderNo: string;
        type: string;
        title: string;
        amount: string;
        paymentMethod: string;
        paymentOrderNo: unknown;
        status: string;
        paidAt: unknown;
        remark: unknown;
        createdAt: string;
        updatedAt: string;
      };
      commission: {
        authorAmount: number;
        inviterAmount: number;
        platformAmount: number;
        authorRate: number;
        inviterRate: number;
        platformRate: number;
        customCommission: {
          author: boolean;
          inviter: boolean;
        };
      };
    };
  };
};

export type OrderControllerCreateOrderResponse =
  OrderControllerCreateOrderResponses[keyof OrderControllerCreateOrderResponses];

export type InviteControllerGetMyInvitesData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/invite/my';
};

export type InviteControllerGetMyInvitesErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type InviteControllerGetMyInvitesResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type InviteControllerGetInviteStatsData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/invite/stats';
};

export type InviteControllerGetInviteStatsErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type InviteControllerGetInviteStatsResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type InviteControllerGetMyInviteEarningsData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/invite/earnings';
};

export type InviteControllerGetMyInviteEarningsErrors = {
  /**
   * 未授权
   */
  401: unknown;
};

export type InviteControllerGetMyInviteEarningsResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type InviteControllerGetInviteDetailData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    id: string;
  };
  query?: never;
  url: '/invite/{id}';
};

export type InviteControllerGetInviteDetailErrors = {
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 邀请记录不存在
   */
  404: unknown;
};

export type InviteControllerGetInviteDetailResponses = {
  /**
   * 获取成功
   */
  200: unknown;
};

export type InviteControllerUseInviteData = {
  body?: UseInviteDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/invite/use';
};

export type InviteControllerUseInviteErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
  /**
   * 邀请码不存在
   */
  404: unknown;
  /**
   * 邀请码已使用
   */
  409: unknown;
};

export type InviteControllerUseInviteResponses = {
  /**
   * 邀请码使用成功
   */
  200: unknown;
};

export type InviteControllerCreateInviteData = {
  body?: CreateInviteDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/invite';
};

export type InviteControllerCreateInviteErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 未授权
   */
  401: unknown;
};

export type InviteControllerCreateInviteResponses = {
  /**
   * 邀请码创建成功
   */
  201: unknown;
};

export type UploadControllerGetFileInfoData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 文件ID
     */
    id: string;
  };
  query?: never;
  url: '/upload/info/{id}';
};

export type UploadControllerGetFileInfoErrors = {
  /**
   * 文件不存在
   */
  404: unknown;
};

export type UploadControllerGetFileInfoResponses = {
  /**
   * 获取文件信息成功
   */
  200: Upload;
};

export type UploadControllerGetFileInfoResponse =
  UploadControllerGetFileInfoResponses[keyof UploadControllerGetFileInfoResponses];

export type UploadControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/upload';
};

export type UploadControllerFindAllResponses = {
  /**
   * 获取所有上传文件成功
   */
  200: Array<Upload>;
};

export type UploadControllerFindAllResponse =
  UploadControllerFindAllResponses[keyof UploadControllerFindAllResponses];

export type UploadControllerUploadFileData = {
  body?: Array<string>;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/upload/file';
};

export type UploadControllerUploadFileErrors = {
  /**
   * 请求参数错误
   */
  400: unknown;
  /**
   * 权限不足
   */
  403: unknown;
  /**
   * 服务器错误
   */
  500: unknown;
};

export type UploadControllerUploadFileResponses = {
  /**
   * 上传文件成功
   */
  200: Array<Upload>;
};

export type UploadControllerUploadFileResponse =
  UploadControllerUploadFileResponses[keyof UploadControllerUploadFileResponses];

export type UploadControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 文件ID
     */
    id: string;
  };
  query?: never;
  url: '/upload/{id}';
};

export type UploadControllerRemoveErrors = {
  /**
   * 删除文件失败
   */
  400: unknown;
  /**
   * 未授权
   */
  403: unknown;
  /**
   * 文件不存在
   */
  404: unknown;
  /**
   * 服务器错误
   */
  500: unknown;
};

export type UploadControllerRemoveResponses = {
  /**
   * 删除文件成功
   */
  200: unknown;
};

export type MessageControllerFindAllData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: {
    /**
     * 页码
     */
    page?: number;
    /**
     * 每页数量
     */
    limit?: number;
  };
  url: '/message';
};

export type MessageControllerFindAllResponses = {
  200: unknown;
};

export type MessageControllerCreateData = {
  body?: CreateMessageDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/message';
};

export type MessageControllerCreateResponses = {
  201: unknown;
};

export type MessageControllerRemoveData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 消息ID
     */
    id: string;
  };
  query?: never;
  url: '/message/{id}';
};

export type MessageControllerRemoveResponses = {
  200: unknown;
};

export type MessageControllerFindOneData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 消息ID
     */
    id: string;
  };
  query?: never;
  url: '/message/{id}';
};

export type MessageControllerFindOneResponses = {
  200: unknown;
};

export type MessageControllerUpdateData = {
  body?: UpdateMessageDto;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 消息ID
     */
    id: string;
  };
  query?: never;
  url: '/message/{id}';
};

export type MessageControllerUpdateResponses = {
  200: unknown;
};

export type MessageControllerMarkAsReadData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    /**
     * 消息ID
     */
    id: string;
  };
  query?: never;
  url: '/message/{id}/read';
};

export type MessageControllerMarkAsReadResponses = {
  201: unknown;
};

export type PostPayCreateData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/pay/create';
};

export type PostPayCreateResponses = {
  200: {
    [key: string]: unknown;
  };
};

export type PostPayCreateResponse = PostPayCreateResponses[keyof PostPayCreateResponses];

export type GetPayOrderStatusData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path?: never;
  query?: never;
  url: '/pay/orderStatus';
};

export type GetPayOrderStatusResponses = {
  200: {
    [key: string]: unknown;
  };
};

export type GetPayOrderStatusResponse =
  GetPayOrderStatusResponses[keyof GetPayOrderStatusResponses];

export type PostPayNotifyByPaywayData = {
  body?: never;
  headers?: {
    Authorization?: string;
    'Device-Id'?: string;
    'Device-Name'?: string;
    'Device-Type'?: string;
  };
  path: {
    payway: string;
  };
  query?: never;
  url: '/pay/notify/{payway}';
};

export type PostPayNotifyByPaywayResponses = {
  200: {
    [key: string]: unknown;
  };
};

export type PostPayNotifyByPaywayResponse =
  PostPayNotifyByPaywayResponses[keyof PostPayNotifyByPaywayResponses];

export type ClientOptions = {
  baseURL: string;
};
