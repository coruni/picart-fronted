{
  "openapi": "3.0.1",
  "info": {
    "title": "picart",
    "description": "",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "App"
    },
    {
      "name": "角色管理"
    },
    {
      "name": "系统配置"
    },
    {
      "name": "用户管理"
    },
    {
      "name": "文章管理"
    },
    {
      "name": "评论管理"
    },
    {
      "name": "标签管理"
    },
    {
      "name": "分类管理"
    },
    {
      "name": "权限管理"
    },
    {
      "name": "订单管理"
    },
    {
      "name": "邀请管理"
    },
    {
      "name": "上传管理"
    },
    {
      "name": "信息管理"
    },
    {
      "name": "轮播管理"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "AppController_getHello",
        "deprecated": false,
        "description": "",
        "operationId": "AppController_getHello",
        "tags": [
          "App"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role": {
      "get": {
        "summary": "获取所有角色",
        "deprecated": false,
        "description": "",
        "operationId": "RoleController_findAll",
        "tags": [
          "角色管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建角色",
        "deprecated": false,
        "description": "",
        "operationId": "RoleController_create",
        "tags": [
          "角色管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/role/{id}": {
      "get": {
        "summary": "根据ID获取角色",
        "deprecated": false,
        "description": "",
        "operationId": "RoleController_findOne",
        "tags": [
          "角色管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新角色",
        "deprecated": false,
        "description": "",
        "operationId": "RoleController_update",
        "tags": [
          "角色管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除角色",
        "deprecated": false,
        "description": "",
        "operationId": "RoleController_remove",
        "tags": [
          "角色管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config": {
      "get": {
        "summary": "获取所有配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_findAll",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "public": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "key",
                              "value",
                              "description",
                              "type",
                              "group",
                              "public",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "required": [
                        "data"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_create",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConfigDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新所有配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_updateAll",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config/{id}": {
      "get": {
        "summary": "获取配置详情",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_findOne",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "配置ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "配置不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_update",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "配置ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "配置不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_remove",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "配置ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "配置不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config/group/{group}": {
      "get": {
        "summary": "根据分组获取配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_findByGroup",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "description": "配置分组",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新分组配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_updateGroup",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "description": "配置分组",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config/key/{key}": {
      "get": {
        "summary": "根据键获取配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_findByKey",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "配置键",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "404": {
            "description": "配置不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "根据键更新配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_updateByKey",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "配置键",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "配置不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config/system/info": {
      "get": {
        "summary": "获取系统信息",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_getSystemInfo",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/config/public": {
      "get": {
        "summary": "获取公共配置",
        "deprecated": false,
        "description": "",
        "operationId": "ConfigController_getPublic",
        "tags": [
          "系统配置"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "site_name": {
                          "type": "string"
                        },
                        "site_description": {
                          "type": "string"
                        },
                        "site_keywords": {
                          "type": "string"
                        },
                        "site_logo": {
                          "type": "string"
                        },
                        "site_favicon": {
                          "type": "string"
                        },
                        "user_registration_enabled": {
                          "type": "boolean"
                        },
                        "user_email_verification": {
                          "type": "boolean"
                        },
                        "comment_approval_required": {
                          "type": "boolean"
                        },
                        "article_approval_required": {
                          "type": "boolean"
                        },
                        "maintenance_mode": {
                          "type": "boolean"
                        },
                        "maintenance_message": {
                          "type": "string"
                        },
                        "invite_code_required": {
                          "type": "boolean"
                        },
                        "invite_code_enabled": {
                          "type": "boolean"
                        },
                        "site_subname": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "site_name",
                        "site_description",
                        "site_keywords",
                        "site_logo",
                        "site_favicon",
                        "user_registration_enabled",
                        "user_email_verification",
                        "comment_approval_required",
                        "article_approval_required",
                        "maintenance_mode",
                        "maintenance_message",
                        "invite_code_required",
                        "invite_code_enabled",
                        "site_subname"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user": {
      "get": {
        "summary": "获取用户列表",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_findAll",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "username",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "username": {
                                "type": "string"
                              },
                              "nickname": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "description": {
                                "type": "null"
                              },
                              "roles": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "displayName": {
                                      "type": "null"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "permissions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "description"
                                        ]
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "config": {
                                "type": "null"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建用户",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_create",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "获取用户详情",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_findOne",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新用户",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_update",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "用户不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除用户",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_remove",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "用户不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/profile": {
      "get": {
        "summary": "获取当前用户信息",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getProfile",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "banned": {
                          "type": "null"
                        },
                        "banReason": {
                          "type": "null"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "description": {
                          "type": "null"
                        },
                        "address": {
                          "type": "null"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "birthDate": {
                          "type": "null"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followerCount": {
                          "type": "integer"
                        },
                        "followingCount": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "integer"
                        },
                        "experience": {
                          "type": "integer"
                        },
                        "score": {
                          "type": "integer"
                        },
                        "wallet": {
                          "type": "integer"
                        },
                        "membershipLevel": {
                          "type": "integer"
                        },
                        "membershipLevelName": {
                          "type": "string"
                        },
                        "membershipStatus": {
                          "type": "string"
                        },
                        "membershipStartDate": {
                          "type": "null"
                        },
                        "membershipEndDate": {
                          "type": "null"
                        },
                        "lastLoginAt": {
                          "type": "string"
                        },
                        "lastActiveAt": {
                          "type": "null"
                        },
                        "refreshToken": {
                          "type": "null"
                        },
                        "inviterId": {
                          "type": "null"
                        },
                        "inviteCode": {
                          "type": "string"
                        },
                        "inviteEarnings": {
                          "type": "string"
                        },
                        "inviteCount": {
                          "type": "integer"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "null"
                              },
                              "description": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "config": {
                          "type": "null"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "nickname",
                        "email",
                        "phone",
                        "status",
                        "banned",
                        "banReason",
                        "avatar",
                        "description",
                        "address",
                        "gender",
                        "birthDate",
                        "articleCount",
                        "followerCount",
                        "followingCount",
                        "level",
                        "experience",
                        "score",
                        "wallet",
                        "membershipLevel",
                        "membershipLevelName",
                        "membershipStatus",
                        "membershipStartDate",
                        "membershipEndDate",
                        "lastLoginAt",
                        "lastActiveAt",
                        "refreshToken",
                        "inviterId",
                        "inviteCode",
                        "inviteEarnings",
                        "inviteCount",
                        "roles",
                        "config",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/followers/count": {
      "get": {
        "summary": "获取粉丝数量",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getFollowerCount",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/followings/count": {
      "get": {
        "summary": "获取关注数量",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getFollowingCount",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/followers": {
      "get": {
        "summary": "获取粉丝列表",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getFollowers",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/followings": {
      "get": {
        "summary": "获取关注列表",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getFollowings",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/commission/config": {
      "get": {
        "summary": "获取当前用户抽成配置",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getUserCommissionConfig",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "设置用户抽成配置",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_setUserCommissionConfig",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCommissionConfigDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "设置成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/wallet": {
      "get": {
        "summary": "获取用户钱包信息",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_getWallet",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/login": {
      "post": {
        "summary": "用户登录",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_login",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "登录成功，返回JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "banned": {
                          "type": "null"
                        },
                        "banReason": {
                          "type": "null"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "description": {
                          "type": "null"
                        },
                        "address": {
                          "type": "null"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "birthDate": {
                          "type": "null"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followerCount": {
                          "type": "integer"
                        },
                        "followingCount": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "integer"
                        },
                        "experience": {
                          "type": "integer"
                        },
                        "score": {
                          "type": "integer"
                        },
                        "wallet": {
                          "type": "integer"
                        },
                        "membershipLevel": {
                          "type": "integer"
                        },
                        "membershipLevelName": {
                          "type": "string"
                        },
                        "membershipStatus": {
                          "type": "string"
                        },
                        "membershipStartDate": {
                          "type": "null"
                        },
                        "membershipEndDate": {
                          "type": "null"
                        },
                        "lastLoginAt": {
                          "type": "string"
                        },
                        "lastActiveAt": {
                          "type": "null"
                        },
                        "refreshToken": {
                          "type": "string"
                        },
                        "inviterId": {
                          "type": "null"
                        },
                        "inviteCode": {
                          "type": "string"
                        },
                        "inviteEarnings": {
                          "type": "string"
                        },
                        "inviteCount": {
                          "type": "integer"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "null"
                              },
                              "description": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "nickname",
                        "email",
                        "phone",
                        "status",
                        "banned",
                        "banReason",
                        "avatar",
                        "description",
                        "address",
                        "gender",
                        "birthDate",
                        "articleCount",
                        "followerCount",
                        "followingCount",
                        "level",
                        "experience",
                        "score",
                        "wallet",
                        "membershipLevel",
                        "membershipLevelName",
                        "membershipStatus",
                        "membershipStartDate",
                        "membershipEndDate",
                        "lastLoginAt",
                        "lastActiveAt",
                        "refreshToken",
                        "inviterId",
                        "inviteCode",
                        "inviteEarnings",
                        "inviteCount",
                        "roles",
                        "createdAt",
                        "updatedAt",
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "用户名或密码错误",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/register": {
      "post": {
        "summary": "用户注册",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_registerUser",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "注册成功，返回用户信息",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "username": {
                          "type": "string"
                        },
                        "nickname": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "null"
                        },
                        "status": {
                          "type": "string"
                        },
                        "banned": {
                          "type": "null"
                        },
                        "banReason": {
                          "type": "null"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "description": {
                          "type": "null"
                        },
                        "address": {
                          "type": "null"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "birthDate": {
                          "type": "null"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followerCount": {
                          "type": "integer"
                        },
                        "followingCount": {
                          "type": "integer"
                        },
                        "level": {
                          "type": "integer"
                        },
                        "experience": {
                          "type": "integer"
                        },
                        "score": {
                          "type": "integer"
                        },
                        "wallet": {
                          "type": "integer"
                        },
                        "membershipLevel": {
                          "type": "integer"
                        },
                        "membershipLevelName": {
                          "type": "string"
                        },
                        "membershipStatus": {
                          "type": "string"
                        },
                        "membershipStartDate": {
                          "type": "null"
                        },
                        "membershipEndDate": {
                          "type": "null"
                        },
                        "lastLoginAt": {
                          "type": "null"
                        },
                        "lastActiveAt": {
                          "type": "null"
                        },
                        "refreshToken": {
                          "type": "string"
                        },
                        "inviterId": {
                          "type": "null"
                        },
                        "inviteCode": {
                          "type": "null"
                        },
                        "inviteEarnings": {
                          "type": "string"
                        },
                        "inviteCount": {
                          "type": "integer"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "null"
                              },
                              "description": {
                                "type": "string"
                              },
                              "permissions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "token": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "nickname",
                        "email",
                        "phone",
                        "status",
                        "banned",
                        "banReason",
                        "avatar",
                        "description",
                        "address",
                        "gender",
                        "birthDate",
                        "articleCount",
                        "followerCount",
                        "followingCount",
                        "level",
                        "experience",
                        "score",
                        "wallet",
                        "membershipLevel",
                        "membershipLevelName",
                        "membershipStatus",
                        "membershipStartDate",
                        "membershipEndDate",
                        "lastLoginAt",
                        "lastActiveAt",
                        "refreshToken",
                        "inviterId",
                        "inviteCode",
                        "inviteEarnings",
                        "inviteCount",
                        "roles",
                        "createdAt",
                        "updatedAt",
                        "token"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数不合法",
            "headers": {}
          },
          "404": {
            "description": "用户不存在",
            "headers": {}
          },
          "409": {
            "description": "用户名已存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/refresh-token": {
      "post": {
        "summary": "刷新 access token",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_refreshToken",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "device-id",
            "in": "header",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/logout": {
      "post": {
        "summary": "退出登录（单设备）",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_logout",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "device-id",
            "in": "header",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/follow": {
      "post": {
        "summary": "关注用户",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_follow",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/{id}/unfollow": {
      "post": {
        "summary": "取关用户",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_unfollow",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/commission/calculate": {
      "post": {
        "summary": "计算抽成金额",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_calculateCommission",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateCommissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "计算成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/wallet/recharge": {
      "post": {
        "summary": "钱包充值",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_rechargeWallet",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "充值成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/wallet/withdraw": {
      "post": {
        "summary": "钱包提现",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_withdrawWallet",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "提现成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/user/email/verification": {
      "post": {
        "summary": "发送邮箱验证码",
        "deprecated": false,
        "description": "",
        "operationId": "UserController_sendVerificationCode",
        "tags": [
          "用户管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "发送成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "429": {
            "description": "请求过多",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article": {
      "get": {
        "summary": "获取文章列表",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_findAll",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "title",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "分类",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "latest",
                "following",
                "popular"
              ],
              "default": "all",
              "nullable": true
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "requireLogin": {
                                "type": "boolean"
                              },
                              "requireFollow": {
                                "type": "boolean"
                              },
                              "requirePayment": {
                                "type": "boolean"
                              },
                              "viewPrice": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "images": {
                                "type": "string"
                              },
                              "summary": {
                                "type": "string"
                              },
                              "views": {
                                "type": "integer"
                              },
                              "likes": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "integer"
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "null"
                                  },
                                  "followerCount": {
                                    "type": "integer"
                                  },
                                  "followingCount": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "username",
                                  "nickname",
                                  "avatar",
                                  "status",
                                  "createdAt",
                                  "updatedAt",
                                  "description",
                                  "followerCount",
                                  "followingCount"
                                ]
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "parentId": {
                                    "type": "integer"
                                  },
                                  "parent": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "parentId": {
                                        "type": "null"
                                      },
                                      "avatar": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "cover": {
                                        "type": "string"
                                      },
                                      "sort": {
                                        "type": "integer"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "articleCount": {
                                        "type": "integer"
                                      },
                                      "followCount": {
                                        "type": "integer"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "description",
                                      "parentId",
                                      "avatar",
                                      "background",
                                      "cover",
                                      "sort",
                                      "status",
                                      "articleCount",
                                      "followCount",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "cover": {
                                    "type": "string"
                                  },
                                  "sort": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "articleCount": {
                                    "type": "integer"
                                  },
                                  "followCount": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "parentId",
                                  "parent",
                                  "avatar",
                                  "background",
                                  "cover",
                                  "sort",
                                  "status",
                                  "articleCount",
                                  "followCount",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "avatar": {
                                      "type": "string"
                                    },
                                    "background": {
                                      "type": "string"
                                    },
                                    "cover": {
                                      "type": "string"
                                    },
                                    "sort": {
                                      "type": "integer"
                                    },
                                    "articleCount": {
                                      "type": "integer"
                                    },
                                    "followCount": {
                                      "type": "integer"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "avatar",
                                    "background",
                                    "cover",
                                    "sort",
                                    "articleCount",
                                    "followCount",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "title"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建文章",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_create",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/{id}": {
      "get": {
        "summary": "获取文章详情",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_findOne",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "requireLogin": {
                          "type": "boolean"
                        },
                        "requireFollow": {
                          "type": "boolean"
                        },
                        "requirePayment": {
                          "type": "boolean"
                        },
                        "viewPrice": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "content": {
                          "type": "string"
                        },
                        "images": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "null"
                        },
                        "views": {
                          "type": "integer"
                        },
                        "likes": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "cover": {
                          "type": "null"
                        },
                        "authorId": {
                          "type": "integer"
                        },
                        "author": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "username": {
                              "type": "string"
                            },
                            "nickname": {
                              "type": "string"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "description": {
                              "type": "null"
                            },
                            "followerCount": {
                              "type": "integer"
                            },
                            "followingCount": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "id",
                            "username",
                            "nickname",
                            "avatar",
                            "status",
                            "createdAt",
                            "updatedAt",
                            "description",
                            "followerCount",
                            "followingCount"
                          ]
                        },
                        "category": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "parentId": {
                              "type": "integer"
                            },
                            "parent": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "parentId": {
                                  "type": "null"
                                },
                                "avatar": {
                                  "type": "string"
                                },
                                "background": {
                                  "type": "string"
                                },
                                "cover": {
                                  "type": "string"
                                },
                                "sort": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "articleCount": {
                                  "type": "integer"
                                },
                                "followCount": {
                                  "type": "integer"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "description",
                                "parentId",
                                "avatar",
                                "background",
                                "cover",
                                "sort",
                                "status",
                                "articleCount",
                                "followCount",
                                "createdAt",
                                "updatedAt"
                              ]
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "background": {
                              "type": "string"
                            },
                            "cover": {
                              "type": "string"
                            },
                            "sort": {
                              "type": "integer"
                            },
                            "status": {
                              "type": "string"
                            },
                            "articleCount": {
                              "type": "integer"
                            },
                            "followCount": {
                              "type": "integer"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "description",
                            "parentId",
                            "parent",
                            "avatar",
                            "background",
                            "cover",
                            "sort",
                            "status",
                            "articleCount",
                            "followCount",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "sort": {
                                "type": "integer"
                              },
                              "articleCount": {
                                "type": "integer"
                              },
                              "followCount": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "description",
                              "avatar",
                              "background",
                              "cover",
                              "sort",
                              "articleCount",
                              "followCount",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "requireLogin",
                        "requireFollow",
                        "requirePayment",
                        "viewPrice",
                        "type",
                        "content",
                        "images",
                        "summary",
                        "views",
                        "likes",
                        "status",
                        "cover",
                        "authorId",
                        "author",
                        "category",
                        "tags",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新文章",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_update",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArticleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除文章",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_remove",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/{id}/like/status": {
      "get": {
        "summary": "获取文章点赞状态",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_getLikeStatus",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/{id}/like/count": {
      "get": {
        "summary": "获取文章点赞数量",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_getLikeCount",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/search": {
      "get": {
        "summary": "搜索文章列表",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_articleSearch",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "分页",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "限制",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "requireLogin": {
                                "type": "boolean"
                              },
                              "requireFollow": {
                                "type": "boolean"
                              },
                              "requirePayment": {
                                "type": "boolean"
                              },
                              "viewPrice": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "summary": {
                                "type": "null"
                              },
                              "views": {
                                "type": "integer"
                              },
                              "likes": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "integer"
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "null"
                                  },
                                  "followerCount": {
                                    "type": "integer"
                                  },
                                  "followingCount": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "username",
                                  "nickname",
                                  "avatar",
                                  "status",
                                  "createdAt",
                                  "updatedAt",
                                  "description",
                                  "followerCount",
                                  "followingCount"
                                ]
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "parentId": {
                                    "type": "integer"
                                  },
                                  "parent": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "parentId": {
                                        "type": "null"
                                      },
                                      "avatar": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "cover": {
                                        "type": "string"
                                      },
                                      "sort": {
                                        "type": "integer"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "articleCount": {
                                        "type": "integer"
                                      },
                                      "followCount": {
                                        "type": "integer"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "description",
                                      "parentId",
                                      "avatar",
                                      "background",
                                      "cover",
                                      "sort",
                                      "status",
                                      "articleCount",
                                      "followCount",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "cover": {
                                    "type": "string"
                                  },
                                  "sort": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "articleCount": {
                                    "type": "integer"
                                  },
                                  "followCount": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "parentId",
                                  "parent",
                                  "avatar",
                                  "background",
                                  "cover",
                                  "sort",
                                  "status",
                                  "articleCount",
                                  "followCount",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "avatar": {
                                      "type": "string"
                                    },
                                    "background": {
                                      "type": "string"
                                    },
                                    "cover": {
                                      "type": "string"
                                    },
                                    "sort": {
                                      "type": "integer"
                                    },
                                    "articleCount": {
                                      "type": "integer"
                                    },
                                    "followCount": {
                                      "type": "integer"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "avatar",
                                    "background",
                                    "cover",
                                    "sort",
                                    "articleCount",
                                    "followCount",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/recommend/{id}": {
      "get": {
        "summary": "获取相关推荐",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_findRecommend",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "文章id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "requireLogin": {
                                "type": "boolean"
                              },
                              "requireFollow": {
                                "type": "boolean"
                              },
                              "requirePayment": {
                                "type": "boolean"
                              },
                              "viewPrice": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "summary": {
                                "type": "null"
                              },
                              "views": {
                                "type": "integer"
                              },
                              "likes": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "integer"
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "null"
                                  },
                                  "followerCount": {
                                    "type": "integer"
                                  },
                                  "followingCount": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "username",
                                  "nickname",
                                  "avatar",
                                  "status",
                                  "createdAt",
                                  "updatedAt",
                                  "description",
                                  "followerCount",
                                  "followingCount"
                                ]
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "parentId": {
                                    "type": "integer"
                                  },
                                  "parent": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "parentId": {
                                        "type": "null"
                                      },
                                      "avatar": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "cover": {
                                        "type": "string"
                                      },
                                      "sort": {
                                        "type": "integer"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "articleCount": {
                                        "type": "integer"
                                      },
                                      "followCount": {
                                        "type": "integer"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "description",
                                      "parentId",
                                      "avatar",
                                      "background",
                                      "cover",
                                      "sort",
                                      "status",
                                      "articleCount",
                                      "followCount",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "cover": {
                                    "type": "string"
                                  },
                                  "sort": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "articleCount": {
                                    "type": "integer"
                                  },
                                  "followCount": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "parentId",
                                  "parent",
                                  "avatar",
                                  "background",
                                  "cover",
                                  "sort",
                                  "status",
                                  "articleCount",
                                  "followCount",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "avatar": {
                                      "type": "string"
                                    },
                                    "background": {
                                      "type": "string"
                                    },
                                    "cover": {
                                      "type": "string"
                                    },
                                    "sort": {
                                      "type": "integer"
                                    },
                                    "articleCount": {
                                      "type": "integer"
                                    },
                                    "followCount": {
                                      "type": "integer"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/author/{id}": {
      "get": {
        "summary": "获取用户文章",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_findArticleByAuthor",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "用户id",
            "required": true,
            "example": "1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "分页",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "限制",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "popular",
                "latest"
              ],
              "nullable": true
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "requireLogin": {
                                "type": "boolean"
                              },
                              "requireFollow": {
                                "type": "boolean"
                              },
                              "requirePayment": {
                                "type": "boolean"
                              },
                              "viewPrice": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "content": {
                                "type": "string"
                              },
                              "images": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "summary": {
                                "type": "null"
                              },
                              "views": {
                                "type": "integer"
                              },
                              "likes": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "authorId": {
                                "type": "integer"
                              },
                              "author": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "nickname": {
                                    "type": "string"
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "null"
                                  },
                                  "followerCount": {
                                    "type": "integer"
                                  },
                                  "followingCount": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "id",
                                  "username",
                                  "nickname",
                                  "avatar",
                                  "status",
                                  "createdAt",
                                  "updatedAt",
                                  "description",
                                  "followerCount",
                                  "followingCount"
                                ]
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "parentId": {
                                    "type": "integer"
                                  },
                                  "parent": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "parentId": {
                                        "type": "null"
                                      },
                                      "avatar": {
                                        "type": "string"
                                      },
                                      "background": {
                                        "type": "string"
                                      },
                                      "cover": {
                                        "type": "string"
                                      },
                                      "sort": {
                                        "type": "integer"
                                      },
                                      "status": {
                                        "type": "string"
                                      },
                                      "articleCount": {
                                        "type": "integer"
                                      },
                                      "followCount": {
                                        "type": "integer"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "description",
                                      "parentId",
                                      "avatar",
                                      "background",
                                      "cover",
                                      "sort",
                                      "status",
                                      "articleCount",
                                      "followCount",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  },
                                  "avatar": {
                                    "type": "string"
                                  },
                                  "background": {
                                    "type": "string"
                                  },
                                  "cover": {
                                    "type": "string"
                                  },
                                  "sort": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "articleCount": {
                                    "type": "integer"
                                  },
                                  "followCount": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "description",
                                  "parentId",
                                  "parent",
                                  "avatar",
                                  "background",
                                  "cover",
                                  "sort",
                                  "status",
                                  "articleCount",
                                  "followCount",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "avatar": {
                                      "type": "string"
                                    },
                                    "background": {
                                      "type": "string"
                                    },
                                    "cover": {
                                      "type": "string"
                                    },
                                    "sort": {
                                      "type": "integer"
                                    },
                                    "articleCount": {
                                      "type": "integer"
                                    },
                                    "followCount": {
                                      "type": "integer"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "name",
                                    "description",
                                    "avatar",
                                    "background",
                                    "cover",
                                    "sort",
                                    "articleCount",
                                    "followCount",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                }
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "requireLogin",
                              "requireFollow",
                              "requirePayment",
                              "viewPrice",
                              "type",
                              "content",
                              "images",
                              "summary",
                              "views",
                              "likes",
                              "status",
                              "cover",
                              "authorId",
                              "author",
                              "category",
                              "tags",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/article/{id}/like": {
      "post": {
        "summary": "点赞/表情回复文章",
        "deprecated": false,
        "description": "",
        "operationId": "ArticleController_like",
        "tags": [
          "文章管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleLikeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "操作成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/article/{id}": {
      "get": {
        "summary": "获取文章评论列表",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_findAll",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "文章ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "文章不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/{id}": {
      "get": {
        "summary": "获取评论详情",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_findOne",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "repliesPage",
            "in": "query",
            "description": "子评论页码",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "repliesLimit",
            "in": "query",
            "description": "每页子评论数量",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "评论不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新评论",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_update",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "评论不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除评论",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_remove",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDto"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "评论不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/{id}/replies": {
      "get": {
        "summary": "获取评论回复列表",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_getReplies",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "父评论ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseDto"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "父评论不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/user/{userId}": {
      "get": {
        "summary": "获取用户评论列表",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_getUserComments",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "用户ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResponseDto"
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/article/{id}/count": {
      "get": {
        "summary": "获取文章评论数量",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_getCommentCount",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "文章ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments/{id}/like": {
      "post": {
        "summary": "点赞评论",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_like",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "评论ID",
            "required": true,
            "example": 0,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "点赞成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "评论不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/comments": {
      "post": {
        "summary": "创建评论",
        "deprecated": false,
        "description": "",
        "operationId": "CommentController_create",
        "tags": [
          "评论管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "评论创建成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "文章或父评论不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/tag": {
      "get": {
        "summary": "获取所有标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_findAll",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "sort": {
                                "type": "integer"
                              },
                              "articleCount": {
                                "type": "integer"
                              },
                              "followCount": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_create",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTagDto"
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "cover": {
                          "type": "string"
                        },
                        "sort": {
                          "type": "integer"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followCount": {
                          "type": "integer"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "avatar",
                        "background",
                        "cover",
                        "sort",
                        "articleCount",
                        "followCount",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/tag/{id}": {
      "get": {
        "summary": "获取标签详情",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_findOne",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "cover": {
                          "type": "string"
                        },
                        "sort": {
                          "type": "integer"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followCount": {
                          "type": "integer"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "avatar",
                        "background",
                        "cover",
                        "sort",
                        "articleCount",
                        "followCount",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "标签不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_update",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "标签不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_remove",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "标签不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/tag/{id}/follow": {
      "post": {
        "summary": "关注标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_follow",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "关注成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "标签不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "取消关注标签",
        "deprecated": false,
        "description": "",
        "operationId": "TagController_unfollow",
        "tags": [
          "标签管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "取消关注成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "标签不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/category": {
      "get": {
        "summary": "获取所有分类",
        "deprecated": false,
        "description": "",
        "operationId": "CategoryController_findAll",
        "tags": [
          "分类管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "分类名",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "in": "query",
            "description": "主分类ID",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "parentId": {
                                "type": "integer"
                              },
                              "children": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "parentId": {
                                      "type": "integer"
                                    },
                                    "avatar": {
                                      "type": "string"
                                    },
                                    "background": {
                                      "type": "string"
                                    },
                                    "cover": {
                                      "type": "string"
                                    },
                                    "sort": {
                                      "type": "integer"
                                    },
                                    "status": {
                                      "type": "string"
                                    },
                                    "articleCount": {
                                      "type": "integer"
                                    },
                                    "followCount": {
                                      "type": "integer"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "sort": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "articleCount": {
                                "type": "integer"
                              },
                              "followCount": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建分类",
        "deprecated": false,
        "description": "",
        "operationId": "CategoryController_create",
        "tags": [
          "分类管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/category/{id}": {
      "get": {
        "summary": "获取分类详情",
        "deprecated": false,
        "description": "",
        "operationId": "CategoryController_findOne",
        "tags": [
          "分类管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "parentId": {
                          "type": "integer"
                        },
                        "children": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "parentId": {
                                "type": "integer"
                              },
                              "avatar": {
                                "type": "string"
                              },
                              "background": {
                                "type": "string"
                              },
                              "cover": {
                                "type": "string"
                              },
                              "sort": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "articleCount": {
                                "type": "integer"
                              },
                              "followCount": {
                                "type": "integer"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "background": {
                          "type": "string"
                        },
                        "cover": {
                          "type": "string"
                        },
                        "sort": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "articleCount": {
                          "type": "integer"
                        },
                        "followCount": {
                          "type": "integer"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "parentId",
                        "children",
                        "avatar",
                        "background",
                        "cover",
                        "sort",
                        "status",
                        "articleCount",
                        "followCount",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "分类不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新分类",
        "deprecated": false,
        "description": "",
        "operationId": "CategoryController_update",
        "tags": [
          "分类管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "分类不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除分类",
        "deprecated": false,
        "description": "",
        "operationId": "CategoryController_remove",
        "tags": [
          "分类管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "分类不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/permission": {
      "get": {
        "summary": "获取所有权限",
        "deprecated": false,
        "description": "",
        "operationId": "PermissionController_findAll",
        "tags": [
          "权限管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建权限",
        "deprecated": false,
        "description": "",
        "operationId": "PermissionController_create",
        "tags": [
          "权限管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/permission/{id}": {
      "get": {
        "summary": "根据ID获取权限",
        "deprecated": false,
        "description": "",
        "operationId": "PermissionController_findOne",
        "tags": [
          "权限管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "权限不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新权限",
        "deprecated": false,
        "description": "",
        "operationId": "PermissionController_update",
        "tags": [
          "权限管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "更新成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "权限不存在",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除权限",
        "deprecated": false,
        "description": "",
        "operationId": "PermissionController_remove",
        "tags": [
          "权限管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "404": {
            "description": "权限不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/order/list": {
      "get": {
        "summary": "获取用户订单列表",
        "deprecated": false,
        "description": "",
        "operationId": "OrderController_getUserOrders",
        "tags": [
          "订单管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/order/{id}": {
      "get": {
        "summary": "获取订单详情",
        "deprecated": false,
        "description": "",
        "operationId": "OrderController_findOne",
        "tags": [
          "订单管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "404": {
            "description": "订单不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/order/no/{orderNo}": {
      "get": {
        "summary": "根据订单号获取订单",
        "deprecated": false,
        "description": "",
        "operationId": "OrderController_findByOrderNo",
        "tags": [
          "订单管理"
        ],
        "parameters": [
          {
            "name": "orderNo",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "404": {
            "description": "订单不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/order/wallet/balance": {
      "get": {
        "summary": "获取钱包余额",
        "deprecated": false,
        "description": "",
        "operationId": "OrderController_getWalletBalance",
        "tags": [
          "订单管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/order": {
      "post": {
        "summary": "创建订单（包含抽成计算）",
        "deprecated": false,
        "description": "",
        "operationId": "OrderController_createOrder",
        "tags": [
          "订单管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "创建成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "order": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "userId": {
                              "type": "integer"
                            },
                            "authorId": {
                              "type": "string"
                            },
                            "orderNo": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "string"
                            },
                            "paymentMethod": {
                              "type": "string"
                            },
                            "paymentOrderNo": {
                              "type": "null"
                            },
                            "status": {
                              "type": "string"
                            },
                            "paidAt": {
                              "type": "null"
                            },
                            "remark": {
                              "type": "null"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "userId",
                            "authorId",
                            "orderNo",
                            "type",
                            "title",
                            "amount",
                            "paymentMethod",
                            "paymentOrderNo",
                            "status",
                            "paidAt",
                            "remark",
                            "createdAt",
                            "updatedAt"
                          ]
                        },
                        "commission": {
                          "type": "object",
                          "properties": {
                            "authorAmount": {
                              "type": "integer"
                            },
                            "inviterAmount": {
                              "type": "integer"
                            },
                            "platformAmount": {
                              "type": "integer"
                            },
                            "authorRate": {
                              "type": "number"
                            },
                            "inviterRate": {
                              "type": "integer"
                            },
                            "platformRate": {
                              "type": "number"
                            },
                            "customCommission": {
                              "type": "object",
                              "properties": {
                                "author": {
                                  "type": "boolean"
                                },
                                "inviter": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "author",
                                "inviter"
                              ]
                            }
                          },
                          "required": [
                            "authorAmount",
                            "inviterAmount",
                            "platformAmount",
                            "authorRate",
                            "inviterRate",
                            "platformRate",
                            "customCommission"
                          ]
                        }
                      },
                      "required": [
                        "order",
                        "commission"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                },
                "example": {
                  "code": 200,
                  "message": "操作成功",
                  "data": {
                    "order": {
                      "id": 4,
                      "userId": 1,
                      "authorId": "1",
                      "orderNo": "ORDER1753961695512847",
                      "type": "MEMBERSHIP",
                      "title": "测试",
                      "amount": "15",
                      "paymentMethod": "wechat",
                      "paymentOrderNo": null,
                      "status": "PENDING",
                      "paidAt": null,
                      "remark": null,
                      "createdAt": "2025-07-31T11:34:55.518Z",
                      "updatedAt": "2025-07-31T11:34:55.518Z"
                    },
                    "commission": {
                      "authorAmount": 2,
                      "inviterAmount": 0,
                      "platformAmount": 13,
                      "authorRate": 0.1,
                      "inviterRate": 0,
                      "platformRate": 0.9,
                      "customCommission": {
                        "author": false,
                        "inviter": false
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite/my": {
      "get": {
        "summary": "获取我的邀请列表",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_getMyInvites",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite/stats": {
      "get": {
        "summary": "获取邀请统计信息",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_getInviteStats",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite/earnings": {
      "get": {
        "summary": "获取邀请收益记录",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_getMyInviteEarnings",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite/{id}": {
      "get": {
        "summary": "获取邀请详情",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_getInviteDetail",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取成功",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "邀请记录不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite/use": {
      "post": {
        "summary": "使用邀请码",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_useInvite",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UseInviteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "邀请码使用成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "邀请码不存在",
            "headers": {}
          },
          "409": {
            "description": "邀请码已使用",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/invite": {
      "post": {
        "summary": "创建邀请码",
        "deprecated": false,
        "description": "",
        "operationId": "InviteController_createInvite",
        "tags": [
          "邀请管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInviteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "邀请码创建成功",
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "401": {
            "description": "未授权",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/upload/info/{id}": {
      "get": {
        "summary": "获取文件信息",
        "deprecated": false,
        "description": "",
        "operationId": "UploadController_getFileInfo",
        "tags": [
          "上传管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "文件ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取文件信息成功",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Upload"
                }
              }
            },
            "headers": {}
          },
          "404": {
            "description": "文件不存在",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/upload": {
      "get": {
        "summary": "获取所有上传文件",
        "deprecated": false,
        "description": "",
        "operationId": "UploadController_findAll",
        "tags": [
          "上传管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "获取所有上传文件成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Upload"
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/upload/file": {
      "post": {
        "summary": "上传文件",
        "deprecated": false,
        "description": "",
        "operationId": "UploadController_uploadFile",
        "tags": [
          "上传管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "format": "binary",
                    "type": "string",
                    "example": ""
                  }
                }
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "201": {
            "description": "上传文件成功",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "hash": {
                            "type": "string"
                          },
                          "originalName": {
                            "type": "string"
                          },
                          "storage": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "mimeType": {
                            "type": "string"
                          },
                          "referenceCount": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          },
          "400": {
            "description": "请求参数错误",
            "headers": {}
          },
          "403": {
            "description": "权限不足",
            "headers": {}
          },
          "500": {
            "description": "服务器错误",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/upload/{id}": {
      "delete": {
        "summary": "删除文件",
        "deprecated": false,
        "description": "",
        "operationId": "UploadController_remove",
        "tags": [
          "上传管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "文件ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "删除文件成功",
            "headers": {}
          },
          "400": {
            "description": "删除文件失败",
            "headers": {}
          },
          "403": {
            "description": "未授权",
            "headers": {}
          },
          "404": {
            "description": "文件不存在",
            "headers": {}
          },
          "500": {
            "description": "服务器错误",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/message": {
      "post": {
        "summary": "创建消息（支持全员、部分、个人通知）",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_create",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "get": {
        "summary": "获取当前用户所有消息（含全员通知）",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_findAll",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "页码",
            "required": false,
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "每页数量",
            "required": false,
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/message/{id}": {
      "get": {
        "summary": "获取单条消息",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_findOne",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新消息内容",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_update",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除消息",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_remove",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/message/{id}/read": {
      "post": {
        "summary": "标记消息为已读",
        "deprecated": false,
        "description": "",
        "operationId": "MessageController_markAsRead",
        "tags": [
          "信息管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "消息ID",
            "required": true,
            "example": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/banners": {
      "get": {
        "summary": "轮播列表",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_findAll",
        "tags": [
          "轮播管理"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "分页",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "限制",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "linkUrl": {
                                "type": "string"
                              },
                              "sortOrder": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer"
                            },
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          },
                          "required": [
                            "total",
                            "page",
                            "limit",
                            "totalPages"
                          ]
                        }
                      },
                      "required": [
                        "data",
                        "meta"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "post": {
        "summary": "创建轮播",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_create",
        "tags": [
          "轮播管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "",
                    "type": "string"
                  },
                  "description": {
                    "example": "",
                    "type": "string"
                  },
                  "imageUrl": {
                    "example": "",
                    "type": "string"
                  },
                  "linkUrl": {
                    "example": "",
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "number",
                    "example": 0
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive"
                    ],
                    "example": ""
                  }
                },
                "required": [
                  "title",
                  "imageUrl"
                ]
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/banners/active": {
      "get": {
        "summary": "轮播活动列表",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_findActive",
        "tags": [
          "轮播管理"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "imageUrl": {
                            "type": "string"
                          },
                          "linkUrl": {
                            "type": "string"
                          },
                          "sortOrder": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/banners/{id}": {
      "get": {
        "summary": "轮播详情",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_detail",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "imageUrl": {
                          "type": "string"
                        },
                        "linkUrl": {
                          "type": "string"
                        },
                        "sortOrder": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "title",
                        "description",
                        "imageUrl",
                        "linkUrl",
                        "sortOrder",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message",
                    "data"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "delete": {
        "summary": "删除轮播",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_deleteById",
        "tags": [
          "轮播管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      },
      "patch": {
        "summary": "更新轮播",
        "deprecated": false,
        "description": "",
        "operationId": "BannersController_update",
        "tags": [
          "轮播管理"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "example": "",
                    "type": "string"
                  },
                  "description": {
                    "example": "",
                    "type": "string"
                  },
                  "imageUrl": {
                    "example": "",
                    "type": "string"
                  },
                  "linkUrl": {
                    "example": "",
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "number",
                    "example": 0
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "inactive",
                      "active"
                    ],
                    "description": "状态",
                    "example": "",
                    "nullable": true
                  }
                },
                "required": [
                  "title",
                  "imageUrl"
                ]
              },
              "examples": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pay/create": {
      "post": {
        "summary": "创建支付订单",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pay/orderStatus": {
      "get": {
        "summary": "查询订单状态",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    },
    "/pay/notify/{payway}": {
      "post": {
        "summary": "订单异步通知",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [
          {
            "name": "payway",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "",
            "example": "Bearer {{token}}",
            "schema": {
              "type": "string",
              "default": "Bearer {{token}}"
            }
          },
          {
            "name": "Device-Id",
            "in": "header",
            "description": "",
            "example": "{{deviceId}}",
            "schema": {
              "type": "string",
              "default": "{{deviceId}}"
            }
          },
          {
            "name": "Device-Name",
            "in": "header",
            "description": "",
            "example": "{{deviceName}}",
            "schema": {
              "type": "string",
              "default": "{{deviceName}}"
            }
          },
          {
            "name": "Device-Type",
            "in": "header",
            "description": "",
            "example": "{{deviceType}}",
            "schema": {
              "type": "string",
              "default": "{{deviceType}}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            },
            "headers": {}
          }
        },
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "角色名称",
            "example": "admin"
          },
          "description": {
            "type": "string",
            "description": "角色描述",
            "example": "系统管理员"
          },
          "permissionIds": {
            "description": "权限ID列表",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              1,
              2,
              3
            ]
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "权限名称",
            "example": "user:create"
          },
          "description": {
            "type": "string",
            "description": "权限描述",
            "example": "创建用户"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "角色名称"
          },
          "description": {
            "type": "string",
            "description": "角色描述"
          },
          "permissionIds": {
            "description": "权限ID列表",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {}
      },
      "customFormMetadataModel": {
        "description": "Contains the metadata for a custom table.",
        "type": "object",
        "properties": {
          "displayOrder": {
            "description": "The custom table's display order.",
            "format": "int64",
            "type": "integer"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/customFormField"
            },
            "type": "array"
          },
          "id": {
            "description": "The custom table id.",
            "type": "string"
          },
          "text": {
            "description": "The custom table name.",
            "type": "string"
          }
        }
      },
      "CreateConfigDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "权限名称",
            "example": "user:create"
          },
          "description": {
            "type": "string",
            "description": "权限描述",
            "example": "创建用户"
          }
        }
      },
      "customFormField": {
        "type": "object",
        "properties": {
          "displayOrder": {
            "description": "",
            "format": "int64",
            "type": "integer"
          },
          "drillDown": {
            "$ref": "#/components/schemas/aSITableDrill"
          },
          "fieldType": {
            "description": "The custom field data type.",
            "type": "string"
          },
          "id": {
            "description": "The custom field system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "isReadonly": {
            "description": "Indicates whether or not the custom field is read-only.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "isRequired": {
            "description": "Indicates whether or not the custom field is required.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "maxLength": {
            "description": "The custom field length",
            "format": "int64",
            "type": "integer"
          },
          "options": {
            "items": {
              "type": "object",
              "description": "A dropdown option value.",
              "properties": {
                "text": {
                  "description": "The localized display value.",
                  "type": "string"
                },
                "value": {
                  "description": "The data value.",
                  "type": "string"
                }
              }
            },
            "type": "array"
          },
          "text": {
            "description": "The custom field localized text.",
            "type": "string"
          },
          "value": {
            "description": "The custom field stored value.",
            "type": "string"
          }
        }
      },
      "UpdateConfigDto": {
        "type": "object",
        "properties": {}
      },
      "response_customFormSubgroupModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/customFormSubgroupModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "密码",
            "example": "123456"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {}
      },
      "customFormSubgroupModel": {
        "type": "object",
        "properties": {
          "displayOrder": {
            "description": "The custom form subgroup display order.",
            "format": "int64",
            "type": "integer"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/customFormField"
            },
            "type": "array"
          },
          "id": {
            "description": "The custom form subgroup system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "text": {
            "description": "The custom form subgroup name.",
            "type": "string"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "用户名",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "description": "密码",
            "example": "123456"
          },
          "nickname": {
            "type": "string",
            "description": "昵称",
            "example": "管理员"
          },
          "avatar": {
            "type": "string",
            "description": "头像",
            "example": "https://example.com/avatar.jpg"
          },
          "email": {
            "type": "string",
            "description": "邮箱",
            "example": "admin@example.com"
          },
          "phone": {
            "type": "string",
            "description": "手机号",
            "example": "13800138000"
          },
          "roleIds": {
            "description": "角色ID列表（仅超级管理员可指定）",
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              1,
              2
            ]
          },
          "wallet": {
            "type": "number",
            "description": "钱包余额",
            "example": 0
          },
          "inviteCode": {
            "type": "string",
            "description": "邀请码",
            "example": "INV123456789"
          },
          "verificationCode": {
            "type": "string",
            "description": "邮箱验证码",
            "example": "123456"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "aSITableDrill": {
        "type": "object",
        "properties": {
          "children": {
            "items": {
              "$ref": "#/components/schemas/childDrill"
            },
            "type": "array"
          },
          "isRoot": {
            "type": "boolean"
          }
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {}
      },
      "response_apo_customForms": {
        "description": "APO custom forms response. \n\nAdded in Civic Platform version: 9.2.0",
        "type": "object",
        "properties": {
          "apo_customForms": {
            "items": {
              "$ref": "#/components/schemas/apo_customForm"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The return status code."
          }
        }
      },
      "CreateArticleDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "文章标题",
            "example": "这是一篇文章"
          },
          "content": {
            "type": "string",
            "description": "文章内容",
            "example": "这是文章的内容..."
          },
          "summary": {
            "type": "string",
            "description": "文章摘要",
            "example": "这是文章的摘要..."
          },
          "images": {
            "type": "string",
            "description": "文章图片",
            "example": "https://example.com/image.jpg"
          },
          "cover": {
            "type": "string",
            "description": "封面图片",
            "example": "https://example.com/image.jpg"
          },
          "categoryId": {
            "type": "number",
            "description": "分类ID",
            "example": 1
          },
          "tagNames": {
            "description": "标签名称数组（不存在的标签会自动创建）",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "JavaScript",
              "Vue.js",
              "前端开发"
            ]
          },
          "tagIds": {
            "description": "标签ID数组（与tagNames二选一）",
            "type": "array",
            "items": {
              "type": "number"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "status": {
            "type": "string",
            "description": "文章状态",
            "enum": [
              "DRAFT",
              "PUBLISHED"
            ],
            "default": "DRAFT",
            "example": "DRAFT"
          },
          "requireLogin": {
            "type": "boolean",
            "description": "是否需要登录后才能查看",
            "default": false
          },
          "requireFollow": {
            "type": "boolean",
            "description": "是否仅关注后可查看",
            "default": false
          },
          "requirePayment": {
            "type": "boolean",
            "description": "是否需要支付后才能查看",
            "default": false
          },
          "viewPrice": {
            "type": "number",
            "description": "查看所需支付金额",
            "default": 0
          },
          "type": {
            "type": "string",
            "description": "文章类型",
            "enum": [
              "image",
              "mixed"
            ],
            "default": "mixed"
          }
        },
        "required": [
          "title",
          "content",
          "categoryId",
          "requireLogin",
          "requireFollow",
          "requirePayment",
          "viewPrice",
          "type"
        ]
      },
      "apo_customForm": {
        "description": "A set of custom field name-value pairs on a custom form. \n\nAdded in Civic Platform version: 9.2.0",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique string id of the custom form template for the custom data."
          },
          "aCustomFieldName": {
            "type": "string",
            "description": "A custom field name. Note that this is the custom attribute name (not the attribute label). To get the attribute display label, use [Get Record Address Custom Forms Metadata](#operation/v4.get.records.recordId.addresses.addressId.customForms.meta)."
          },
          "aCustomFieldValue": {
            "type": "string",
            "description": "A custom field value"
          }
        }
      },
      "UpdateArticleDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "文章标题",
            "example": "这是一篇文章"
          },
          "content": {
            "type": "string",
            "description": "文章内容",
            "example": "这是文章的内容..."
          },
          "summary": {
            "type": "string",
            "description": "文章摘要",
            "example": "这是文章的摘要..."
          },
          "images": {
            "type": "string",
            "description": "文章图片",
            "example": "https://example.com/image.jpg"
          },
          "cover": {
            "type": "string",
            "description": "封面图片",
            "example": "https://example.com/image.jpg"
          },
          "categoryId": {
            "type": "number",
            "description": "分类ID",
            "example": 1
          },
          "tagNames": {
            "description": "标签名称数组（不存在的标签会自动创建）",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "JavaScript",
              "Vue.js",
              "前端开发"
            ]
          },
          "tagIds": {
            "description": "标签ID数组（与tagNames二选一）",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              1,
              2,
              3
            ]
          },
          "status": {
            "type": "string",
            "description": "文章状态",
            "enum": [
              "DRAFT",
              "PUBLISHED"
            ],
            "default": "DRAFT",
            "example": "DRAFT"
          },
          "requireLogin": {
            "type": "boolean",
            "description": "是否需要登录后才能查看",
            "default": false
          },
          "requireFollow": {
            "type": "boolean",
            "description": "是否仅关注后可查看",
            "default": false
          },
          "requirePayment": {
            "type": "boolean",
            "description": "是否需要支付后才能查看",
            "default": false
          },
          "viewPrice": {
            "type": "number",
            "description": "查看所需支付金额",
            "default": 0
          },
          "type": {
            "type": "string",
            "description": "文章类型",
            "enum": [
              "image",
              "mixed"
            ],
            "default": "mixed"
          }
        }
      },
      "response_apo_customForms_metadata": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/apo_customForms_metadata"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The return status code."
          }
        }
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "评论内容",
            "example": "这是一条评论"
          },
          "articleId": {
            "type": "number",
            "description": "文章ID",
            "example": 1
          },
          "parentId": {
            "type": "number",
            "description": "父评论ID",
            "example": 1
          }
        },
        "required": [
          "content",
          "articleId"
        ]
      },
      "apo_customForms_metadata": {
        "description": "Contains metadata description of a custom form, including the custom fields metadata. \n\nAdded in Civic Platform version: 9.2.0",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom form"
          },
          "description": {
            "type": "string",
            "description": "Describes the usage or puporse of the custom form."
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/apo_customForms_metadata_fields"
            },
            "type": "array",
            "description": "Contains the field metadata."
          },
          "id": {
            "type": "string",
            "description": "The unique string identifier of the custom form."
          },
          "customFormType": {
            "type": "string",
            "enum": [
              "address",
              "parcel",
              "owner"
            ],
            "description": "Indicates whether the custom form is for an address, parcel, or owner."
          }
        }
      },
      "UpdateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "评论内容",
            "example": "这是一条评论"
          },
          "articleId": {
            "type": "number",
            "description": "文章ID",
            "example": 1
          },
          "parentId": {
            "type": "number",
            "description": "父评论ID",
            "example": 1
          }
        }
      },
      "UserCommissionConfigDto": {
        "type": "object",
        "properties": {
          "articleCommissionRate": {
            "type": "number",
            "description": "文章抽成比例（0-1之间）",
            "example": 0.1
          },
          "membershipCommissionRate": {
            "type": "number",
            "description": "会员抽成比例（0-1之间）",
            "example": 0.1
          },
          "productCommissionRate": {
            "type": "number",
            "description": "商品抽成比例（0-1之间）",
            "example": 0.1
          },
          "serviceCommissionRate": {
            "type": "number",
            "description": "服务抽成比例（0-1之间）",
            "example": 0.1
          },
          "enableCustomCommission": {
            "type": "boolean",
            "description": "是否启用自定义抽成",
            "example": false
          },
          "remark": {
            "type": "string",
            "description": "备注",
            "example": "个人抽成配置"
          }
        },
        "required": [
          "articleCommissionRate",
          "membershipCommissionRate",
          "productCommissionRate",
          "serviceCommissionRate",
          "enableCustomCommission",
          "remark"
        ]
      },
      "apo_customForms_metadata_fields": {
        "description": "Describes the metadata of a custom field. \n\nAdded in Civic Platform version: 9.2.0",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The unique custom field id."
          },
          "name": {
            "type": "string",
            "description": "The field name."
          },
          "description": {
            "type": "string",
            "description": "Describes the usage or purpose of the custom field."
          },
          "label": {
            "type": "object",
            "description": "The field label.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "dataType": {
            "type": "string",
            "enum": [
              "Number",
              "Text",
              "Date",
              "Radio",
              "DropdownList"
            ],
            "description": "The field data type. If the custom field is a DropdownList, the options[] array contains the list of possible values, or the sharedDropdownListName specifies the name of a shared dropdown list containing the possible values."
          },
          "defaultValue": {
            "type": "string",
            "description": "Any default value for the custom field."
          },
          "displayOrder": {
            "format": "int64",
            "type": "integer",
            "description": "The display order of the field on the custom form."
          },
          "unit": {
            "type": "string",
            "description": "The unit of measure of a numeric custom field."
          },
          "isRequired": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Indicates whether or not the field is required."
          },
          "isPublicVisible": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Indicates whether or not a citizen user can see this field."
          },
          "isRecordSearchable": {
            "type": "string",
            "enum": [
              "Y",
              "N"
            ],
            "description": "Indicates whether or not the field is searchable."
          },
          "maxLength": {
            "format": "int64",
            "type": "integer",
            "description": "The field maximum length."
          },
          "options": {
            "items": {
              "type": "object",
              "description": "A dropdown field value.",
              "properties": {
                "text": {
                  "description": "The localized display value.",
                  "type": "string"
                },
                "value": {
                  "description": "The data value.",
                  "type": "string"
                }
              }
            },
            "type": "array",
            "description": "Contains possible field values, if the field is a dropdown field type."
          },
          "sharedDropdownListName": {
            "type": "string",
            "description": "The name of the shared dropdown list, if the field is a dropdown field type."
          }
        }
      },
      "CreateTagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "标签名称",
            "example": "JavaScript"
          },
          "description": {
            "type": "string",
            "description": "标签描述",
            "example": "JavaScript相关文章"
          },
          "avatar": {
            "type": "string",
            "description": "标签头像",
            "example": "https://example.com/avatar.jpg"
          },
          "background": {
            "type": "string",
            "description": "标签背景",
            "example": "https://example.com/background.jpg"
          },
          "cover": {
            "type": "string",
            "description": "标签封面",
            "example": "https://example.com/cover.jpg"
          },
          "sort": {
            "type": "number",
            "description": "排序",
            "default": 0,
            "example": 0
          }
        },
        "required": [
          "name"
        ]
      },
      "CalculateCommissionDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "金额",
            "example": 100
          },
          "type": {
            "type": "string",
            "description": "抽成类型",
            "enum": [
              "article",
              "membership",
              "product",
              "service"
            ]
          }
        },
        "required": [
          "amount",
          "type"
        ]
      },
      "response_activityModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/activityModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "UpdateTagDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "标签名称",
            "example": "JavaScript"
          },
          "description": {
            "type": "string",
            "description": "标签描述",
            "example": "JavaScript相关文章"
          },
          "avatar": {
            "type": "string",
            "description": "标签头像",
            "example": "https://example.com/avatar.jpg"
          },
          "background": {
            "type": "string",
            "description": "标签背景",
            "example": "https://example.com/background.jpg"
          },
          "cover": {
            "type": "string",
            "description": "标签封面",
            "example": "https://example.com/cover.jpg"
          },
          "sort": {
            "type": "number",
            "description": "排序",
            "default": 0,
            "example": 0
          }
        }
      },
      "SendMailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱",
            "example": "test@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "activityModel": {
        "type": "object",
        "properties": {
          "activityStatus": {
            "type": "object",
            "description": "The status of the record activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedDepartment": {
            "type": "object",
            "description": "The department responsible for the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedUser": {
            "type": "object",
            "description": "The staff member responsible for the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "description": {
            "description": "The activity description",
            "type": "string"
          },
          "dueDate": {
            "description": "The desired completion date of the task.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The activity system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "The activity name.",
            "type": "string"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "startDate": {
            "description": "The activity start date.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The activity status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "type": {
            "type": "object",
            "description": "The activity type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "分类名称",
            "example": "技术"
          },
          "description": {
            "type": "string",
            "description": "分类描述",
            "example": "技术相关文章"
          },
          "sort": {
            "type": "number",
            "description": "排序",
            "default": 0,
            "example": 0
          },
          "parentId": {
            "type": "number",
            "description": "父分类ID",
            "example": 1
          },
          "avatar": {
            "type": "string",
            "description": "分类头像",
            "example": "https://example.com/avatar.jpg"
          },
          "background": {
            "type": "string",
            "description": "分类背景",
            "example": "https://example.com/background.jpg"
          },
          "cover": {
            "type": "string",
            "description": "分类封面",
            "example": "https://example.com/cover.jpg"
          },
          "status": {
            "type": "string",
            "description": "分类状态",
            "default": "ENABLED",
            "example": "ENABLED"
          }
        },
        "required": [
          "name",
          "sort",
          "status"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "分类名称",
            "example": "技术"
          },
          "description": {
            "type": "string",
            "description": "分类描述",
            "example": "技术相关文章"
          },
          "sort": {
            "type": "number",
            "description": "排序",
            "default": 0,
            "example": 0
          },
          "parentId": {
            "type": "number",
            "description": "父分类ID",
            "example": 1
          },
          "avatar": {
            "type": "string",
            "description": "分类头像",
            "example": "https://example.com/avatar.jpg"
          },
          "background": {
            "type": "string",
            "description": "分类背景",
            "example": "https://example.com/background.jpg"
          },
          "cover": {
            "type": "string",
            "description": "分类封面",
            "example": "https://example.com/cover.jpg"
          },
          "status": {
            "type": "string",
            "description": "分类状态",
            "default": "ENABLED",
            "example": "ENABLED"
          }
        }
      },
      "ArticleLikeDto": {
        "type": "object",
        "properties": {
          "reactionType": {
            "type": "string",
            "description": "表情类型",
            "enum": [
              "like",
              "love",
              "haha",
              "wow",
              "sad",
              "angry",
              "dislike"
            ],
            "default": "like",
            "example": "like"
          }
        },
        "required": [
          "reactionType"
        ]
      },
      "BaseResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "description": "业务状态码",
            "example": 0
          },
          "message": {
            "type": "string",
            "description": "提示信息",
            "example": "操作成功"
          },
          "data": {
            "type": "object",
            "description": "数据体",
            "properties": {}
          },
          "timestamp": {
            "type": "number",
            "description": "时间戳",
            "example": 1620000000000
          },
          "path": {
            "type": "string",
            "description": "路径",
            "example": "/api/v1/article"
          }
        },
        "required": [
          "code",
          "message",
          "timestamp",
          "path"
        ]
      },
      "request_activityUpdateModel": {
        "type": "object",
        "properties": {
          "activityStatus": {
            "type": "object",
            "description": "The status of the record activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedDepartment": {
            "type": "object",
            "description": "The department responsible for the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedUser": {
            "type": "object",
            "description": "The staff member responsible for the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "description": {
            "description": "The activity description",
            "type": "string"
          },
          "dueDate": {
            "description": "The desired completion date of the task.",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "The activity name.",
            "type": "string"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the activity.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "startDate": {
            "description": "The activity start date.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The activity status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "type": {
            "type": "object",
            "description": "The activity type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "PaginatedResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "description": "业务状态码",
            "example": 0
          },
          "message": {
            "type": "string",
            "description": "提示信息",
            "example": "操作成功"
          },
          "data": {
            "type": "object",
            "description": "数据列表",
            "properties": {}
          }
        },
        "required": [
          "code",
          "message",
          "data"
        ]
      },
      "addressModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressTypeFlag": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "county": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "direction": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "distance": {
            "format": "double",
            "type": "number"
          },
          "houseAlphaEnd": {
            "type": "string"
          },
          "houseAlphaStart": {
            "type": "string"
          },
          "houseFractionEnd": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "houseFractionStart": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "inspectionDistrict": {
            "type": "string"
          },
          "inspectionDistrictPrefix": {
            "type": "string"
          },
          "isPrimary": {
            "type": "string"
          },
          "levelEnd": {
            "type": "string"
          },
          "levelPrefix": {
            "type": "string"
          },
          "levelStart": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "neighborhoodPrefix": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/capIDModel"
          },
          "refAddressId": {
            "format": "int64",
            "type": "integer"
          },
          "secondaryStreet": {
            "type": "string"
          },
          "secondaryStreetNumber": {
            "type": "integer"
          },
          "serviceProviderCode": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "status": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "streetAddress": {
            "type": "string"
          },
          "streetEnd": {
            "type": "integer"
          },
          "streetEndFrom": {
            "type": "integer"
          },
          "streetEndTo": {
            "type": "integer"
          },
          "streetName": {
            "type": "string"
          },
          "streetPrefix": {
            "type": "string"
          },
          "streetStart": {
            "type": "integer"
          },
          "streetStartFrom": {
            "type": "integer"
          },
          "streetStartTo": {
            "type": "integer"
          },
          "streetSuffix": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "streetSuffixDirection": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "type": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "unitEnd": {
            "type": "string"
          },
          "unitStart": {
            "type": "string"
          },
          "unitType": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "xCoordinate": {
            "format": "double",
            "type": "number"
          },
          "yCoordinate": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "response_recordAddressModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordAddressModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "CreateInviteDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "邀请类型",
            "enum": [
              "GENERAL",
              "VIP"
            ],
            "default": "GENERAL"
          },
          "commissionRate": {
            "type": "number",
            "description": "邀请分成比例（0-1之间）",
            "example": 0.05
          },
          "expiredAt": {
            "type": "string",
            "description": "过期时间"
          },
          "remark": {
            "type": "string",
            "description": "备注"
          }
        },
        "required": [
          "type"
        ]
      },
      "recordAddressModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The second line of the address."
          },
          "addressTypeFlag": {
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            },
            "description": "A code name or an abbreviation of the address type."
          },
          "city": {
            "type": "string",
            "description": "The name of the city."
          },
          "country": {
            "type": "object",
            "description": "The name of the country. See [Get All Address Countries](./api-settings.html#operation/v4.get.settings.addresses.countries).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "crossStreetNameStart": {
            "type": "string",
            "description": "The beginning intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "crossStreetNameEnd": {
            "type": "string",
            "description": "The ending intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "county": {
            "type": "string",
            "description": "The name of the county."
          },
          "description": {
            "type": "string",
            "description": "A description of the address."
          },
          "direction": {
            "description": "The street direction of the primary address associated with the application.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "distance": {
            "type": "number",
            "format": "double",
            "description": "The distance from another landmark used to locate the address."
          },
          "houseAlphaStart": {
            "type": "string",
            "description": "The beginning alphabetic unit in street address."
          },
          "houseAlphaEnd": {
            "type": "string",
            "description": "The ending alphabetic unit in street address."
          },
          "houseFractionStart": {
            "type": "object",
            "description": "Beginning fraction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "houseFractionEnd": {
            "type": "object",
            "description": "Ending franction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "format": "int64",
            "type": "integer",
            "description": "The unique address id assigned by the Civic Platform server."
          },
          "inspectionDistrict": {
            "type": "string",
            "description": "The inspection district where the address is located."
          },
          "inspectionDistrictPrefix": {
            "type": "string",
            "description": "The prefix for the inspection district where the address is located."
          },
          "isPrimary": {
            "type": "string",
            "description": "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
          },
          "levelEnd": {
            "type": "string",
            "description": "The ending level number (floor number) that makes up the address within a complex."
          },
          "levelPrefix": {
            "type": "string",
            "description": "The prefix for the level numbers (floor numbers) that make up the address."
          },
          "levelStart": {
            "type": "string",
            "description": "The starting level number (floor number) that makes up the address within a complex."
          },
          "locationType": {
            "type": "string",
            "description": "The type of location used for Right of Way Management. The valid values are configured with the LOCATION_TYPE standard choice in Civic Platform Administration.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "neighborhood": {
            "type": "string",
            "description": "The neighborhood where the address is located."
          },
          "neighborhoodPrefix": {
            "type": "string",
            "description": "The prefix for neighborhood where the address is located."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal ZIP code for the address."
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "refAddressId": {
            "description": "The reference address id.",
            "format": "int64",
            "type": "integer"
          },
          "secondaryStreet": {
            "type": "string",
            "description": "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "secondaryStreetNumber": {
            "type": "number",
            "format": "long",
            "description": "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "state": {
            "type": "object",
            "description": "The name of the state.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "The address status indicating whether the address is active or inactive.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetAddress": {
            "type": "string",
            "description": "The street address."
          },
          "streetEnd": {
            "type": "number",
            "format": "long",
            "description": "The ending number of a street address range."
          },
          "streetEndFrom": {
            "description": "The beginning number of a street end address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetEndTo": {
            "description": "The ending number of a street end address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetName": {
            "type": "string",
            "description": "The name of the street."
          },
          "streetNameStart": {
            "type": "string",
            "description": "The beginning street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetNameEnd": {
            "type": "string",
            "description": "The ending street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetPrefix": {
            "type": "string",
            "description": "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
          },
          "streetStart": {
            "type": "number",
            "format": "long",
            "description": "The starting number of a street address range."
          },
          "streetStartFrom": {
            "description": "The beginning number of a street start address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetStartTo": {
            "description": "The ending number of a street start address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetSuffix": {
            "type": "object",
            "description": "The type of street such as \"Lane\" or \"Boulevard\".",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetSuffixDirection": {
            "type": "object",
            "description": "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "type": {
            "type": "object",
            "description": "The address type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitStart": {
            "type": "string",
            "description": "The starting value of a range of unit numbers."
          },
          "unitEnd": {
            "type": "string",
            "description": "The ending value of a range of unit numbers."
          },
          "unitType": {
            "type": "object",
            "description": "The unit type designation of the address.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The longitudinal coordinate for this address."
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The latitudinal coordinate for this address."
          }
        }
      },
      "UseInviteDto": {
        "type": "object",
        "properties": {
          "inviteCode": {
            "type": "string",
            "description": "邀请码",
            "example": "INV123456"
          }
        },
        "required": [
          "inviteCode"
        ]
      },
      "recordAddressCustomFormsModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The second line of the address."
          },
          "addressTypeFlag": {
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            },
            "description": "A code name or an abbreviation of the address type."
          },
          "city": {
            "type": "string",
            "description": "The name of the city."
          },
          "country": {
            "type": "object",
            "description": "The name of the country. See [Get All Address Countries](./api-settings.html#operation/v4.get.settings.addresses.countries).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "crossStreetNameStart": {
            "type": "string",
            "description": "The beginning intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "crossStreetNameEnd": {
            "type": "string",
            "description": "The ending intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "county": {
            "type": "string",
            "description": "The name of the county."
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "description": {
            "type": "string",
            "description": "A description of the address."
          },
          "direction": {
            "description": "The street direction of the primary address associated with the application.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "distance": {
            "type": "number",
            "format": "double",
            "description": "The distance from another landmark used to locate the address."
          },
          "houseAlphaStart": {
            "type": "string",
            "description": "The beginning alphabetic unit in street address."
          },
          "houseAlphaEnd": {
            "type": "string",
            "description": "The ending alphabetic unit in street address."
          },
          "houseFractionStart": {
            "type": "object",
            "description": "Beginning fraction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "houseFractionEnd": {
            "type": "object",
            "description": "Ending franction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "format": "int64",
            "type": "integer",
            "description": "The unique address id assigned by the Civic Platform server."
          },
          "inspectionDistrict": {
            "type": "string",
            "description": "The inspection district where the address is located."
          },
          "inspectionDistrictPrefix": {
            "type": "string",
            "description": "The prefix for the inspection district where the address is located."
          },
          "isPrimary": {
            "type": "string",
            "description": "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
          },
          "levelEnd": {
            "type": "string",
            "description": "The ending level number (floor number) that makes up the address within a complex."
          },
          "levelPrefix": {
            "type": "string",
            "description": "The prefix for the level numbers (floor numbers) that make up the address."
          },
          "levelStart": {
            "type": "string",
            "description": "The starting level number (floor number) that makes up the address within a complex."
          },
          "locationType": {
            "type": "string",
            "description": "The type of location used for Right of Way Management. The valid values are configured with the LOCATION_TYPE standard choice in Civic Platform Administration.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "neighborhood": {
            "type": "string",
            "description": "The neighborhood where the address is located."
          },
          "neighborhoodPrefix": {
            "type": "string",
            "description": "The prefix for neighborhood where the address is located."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal ZIP code for the address."
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "refAddressId": {
            "description": "The reference address id.",
            "format": "int64",
            "type": "integer"
          },
          "secondaryStreet": {
            "type": "string",
            "description": "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "secondaryStreetNumber": {
            "type": "number",
            "format": "long",
            "description": "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "state": {
            "type": "object",
            "description": "The name of the state.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "The address status indicating whether the address is active or inactive.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetAddress": {
            "type": "string",
            "description": "The street address."
          },
          "streetEnd": {
            "type": "number",
            "format": "long",
            "description": "The ending number of a street address range."
          },
          "streetEndFrom": {
            "description": "The beginning number of a street end address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetEndTo": {
            "description": "The ending number of a street end address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetName": {
            "type": "string",
            "description": "The name of the street."
          },
          "streetNameStart": {
            "type": "string",
            "description": "The beginning street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetNameEnd": {
            "type": "string",
            "description": "The ending street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetPrefix": {
            "type": "string",
            "description": "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
          },
          "streetStart": {
            "type": "number",
            "format": "long",
            "description": "The starting number of a street address range."
          },
          "streetStartFrom": {
            "description": "The beginning number of a street start address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetStartTo": {
            "description": "The ending number of a street start address range.",
            "format": "int64",
            "type": "integer"
          },
          "streetSuffix": {
            "type": "object",
            "description": "The type of street such as \"Lane\" or \"Boulevard\".",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetSuffixDirection": {
            "type": "object",
            "description": "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "type": {
            "type": "object",
            "description": "The address type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitStart": {
            "type": "string",
            "description": "The starting value of a range of unit numbers."
          },
          "unitEnd": {
            "type": "string",
            "description": "The ending value of a range of unit numbers."
          },
          "unitType": {
            "type": "object",
            "description": "The unit type designation of the address.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The longitudinal coordinate for this address."
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The latitudinal coordinate for this address."
          }
        }
      },
      "ListResponseDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "description": "业务状态码",
            "example": 0
          },
          "message": {
            "type": "string",
            "description": "提示信息",
            "example": "操作成功"
          },
          "data": {
            "description": "数据列表",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "timestamp": {
            "type": "number",
            "description": "时间戳",
            "example": 1620000000000
          }
        },
        "required": [
          "code",
          "message",
          "data",
          "timestamp"
        ]
      },
      "request_recordAddressModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The first line of the address."
          },
          "addressLine2": {
            "type": "string",
            "description": "The first line of the address."
          },
          "addressTypeFlag": {
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            },
            "description": "A code name or an abbreviation of the address type."
          },
          "city": {
            "type": "string",
            "description": "The name of the city."
          },
          "country": {
            "type": "object",
            "description": "The name of the country. See [Get All Address Countries](./api-settings.html#operation/v4.get.settings.addresses.countries).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "county": {
            "type": "string",
            "description": "The name of the county."
          },
          "crossStreetNameStart": {
            "type": "string",
            "description": "The beginning intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "crossStreetNameEnd": {
            "type": "string",
            "description": "The ending intersecting street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "description": {
            "type": "string",
            "description": "A description of the address."
          },
          "direction": {
            "description": "The street direction of the primary address associated with the application.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "distance": {
            "type": "number",
            "format": "double",
            "description": "The distance from another landmark used to locate the address."
          },
          "houseAlphaStart": {
            "type": "string",
            "description": "The beginning alphabetic unit in street address."
          },
          "houseAlphaEnd": {
            "type": "string",
            "description": "The ending alphabetic unit in street address."
          },
          "houseFractionStart": {
            "type": "object",
            "description": "Beginning fraction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "houseFractionEnd": {
            "type": "object",
            "description": "Ending franction value used in combination with the Street number fields.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "inspectionDistrict": {
            "type": "string",
            "description": "The inspection district where the address is located."
          },
          "inspectionDistrictPrefix": {
            "type": "string",
            "description": "The prefix for the inspection district where the address is located."
          },
          "isPrimary": {
            "type": "string",
            "description": "Indicates whether or not to designate the address as the primary address. Only one address can be primary at any given time."
          },
          "levelStart": {
            "type": "string",
            "description": "The starting level number (floor number) that makes up the address within a complex."
          },
          "levelEnd": {
            "type": "string",
            "description": "The ending level number (floor number) that makes up the address within a complex."
          },
          "levelPrefix": {
            "type": "string",
            "description": "The prefix for the level numbers (floor numbers) that make up the address."
          },
          "locationType": {
            "type": "string",
            "description": "The type of location used for Right of Way Management. The valid values are configured with the LOCATION_TYPE standard choice in Civic Platform Administration.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "neighborhood": {
            "type": "string",
            "description": "The neighborhood where the address is located."
          },
          "neighborhoodPrefix": {
            "type": "string",
            "description": "The prefix for neighborhood where the address is located."
          },
          "postalCode": {
            "type": "string",
            "description": "The postal ZIP code for the address."
          },
          "secondaryStreet": {
            "type": "string",
            "description": "This field (along with the Secondary Road Number field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "secondaryStreetNumber": {
            "type": "number",
            "format": "long",
            "description": "This field (along with the Secondary Road field) displays an extra description for the location when two roads that cross or a street with two names makes up the address of the location."
          },
          "state": {
            "type": "object",
            "description": "The name of the state.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "The address status indicating whether the address is active or inactive.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetAddress": {
            "type": "string",
            "description": "The street address."
          },
          "streetEnd": {
            "type": "number",
            "format": "long",
            "description": "The ending number of a street address range."
          },
          "streetName": {
            "type": "string",
            "description": "The name of the street."
          },
          "streetNameStart": {
            "type": "string",
            "description": "The beginning street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetNameEnd": {
            "type": "string",
            "description": "The ending street name for searching.\n\nAdded in Civic Platform version: 9.2.0\n"
          },
          "streetPrefix": {
            "type": "string",
            "description": "Any part of an address that appears before a street name or number. For example, if the address is 123 West Main, \"West\" is the street prefix."
          },
          "streetStart": {
            "type": "number",
            "format": "long",
            "description": "The starting number of a street address range."
          },
          "streetSuffix": {
            "type": "object",
            "description": "The type of street such as \"Lane\" or \"Boulevard\".",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "streetSuffixDirection": {
            "type": "object",
            "description": "The direction appended to the street suffix. For example, if the address is 500 56th Avenue NW, \"NW\" is the street suffix direction.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "type": {
            "type": "object",
            "description": "The address type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitStart": {
            "type": "string",
            "description": "The starting value of a range of unit numbers."
          },
          "unitEnd": {
            "type": "string",
            "description": "The ending value of a range of unit numbers."
          },
          "unitType": {
            "type": "object",
            "description": "The unit type designation of the address.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "xCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The longitudinal coordinate for this address."
          },
          "yCoordinate": {
            "type": "number",
            "format": "double",
            "description": "The latitudinal coordinate for this address."
          }
        }
      },
      "response_assetMasterModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/assetMasterModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "assetMasterModel": {
        "type": "object",
        "properties": {
          "assetId": {
            "description": "The unique alpha-numeric asset ID in an asset group. \n\n**Added in Civic Platform version**: 9.2.0\n\n",
            "type": "string"
          },
          "classType": {
            "description": "A Class Type is how Civic Platform groups objects that an agency owns or maintains. The five class types are component, linear, node-link linear, point, and polygon. Asset class types provide the ability to assign or group multiple asset types together.\t",
            "type": "string"
          },
          "comments": {
            "type": "object",
            "description": "General comments about the asset.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "currentValue": {
            "description": "The current value of the asset.",
            "format": "double",
            "type": "number"
          },
          "dateOfService": {
            "description": "The date the asset was initially placed into service.",
            "format": "date-time",
            "type": "string"
          },
          "dependentFlag": {
            "description": "Indicates whether or not the parent asset is dependent on this asset.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "depreciationAmount": {
            "description": "The decline in the asset value by the asset depreciation calculation.",
            "format": "double",
            "type": "number"
          },
          "depreciationEndDate": {
            "description": "The end date for the asset depreciation calculation. This field is used in the asset depreciation calculation.",
            "format": "date-time",
            "type": "string"
          },
          "depreciationStartDate": {
            "description": "The start date for the asset depreciation calculation. This field is used in the asset depreciation calculation.",
            "format": "date-time",
            "type": "string"
          },
          "depreciationValue": {
            "description": "The asset value after the asset depreciation calculation, which is based on the start value, depreciation start and end dates, useful life, and salvage value.",
            "format": "double",
            "type": "number"
          },
          "description": {
            "type": "object",
            "description": "The description of the asset.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "endID": {
            "description": "The ending point asset ID.",
            "type": "string"
          },
          "gisObjects": {
            "items": {
              "$ref": "#/components/schemas/gISObjectModel"
            },
            "type": "array"
          },
          "id": {
            "description": "The asset system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "object",
            "description": "The descriptive name of the asset.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "number": {
            "description": "The unique, alpha-numeric asset ID.",
            "type": "string"
          },
          "salvageValue": {
            "description": "The residual value of the asset at the end of itâ€™s useful life.",
            "format": "double",
            "type": "number"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "size": {
            "description": "A positive numeric value for the asset size.",
            "format": "double",
            "type": "number"
          },
          "sizeUnit": {
            "description": "The unit of measure corresponding to the asset size.",
            "type": "string"
          },
          "startID": {
            "description": "The starting point asset ID.",
            "type": "string"
          },
          "startValue": {
            "description": "The beginning value or purchase price of the asset.",
            "format": "double",
            "type": "number"
          },
          "status": {
            "type": "object",
            "description": "The status of the asset.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date the asset status changed.",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The type of asset.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "recordExpirationModel": {
        "type": "object",
        "properties": {
          "expirationDate": {
            "description": "The date when the condition expires.",
            "format": "date-time",
            "type": "string"
          },
          "expirationStatus": {
            "type": "object",
            "description": "Indicates whether the expiration is enabled or disabled. See [Get All Record Expiration Statuses](./api-settings.html#operation/v4.get.settings.records.expirationStatuses).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "CreateUploadDto": {
        "type": "object",
        "properties": {}
      },
      "Upload": {
        "type": "object",
        "properties": {}
      },
      "commentModel": {
        "type": "object",
        "properties": {
          "displayOnInspection": {
            "description": "Indicates whether or not the comment is displayed on inspection.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "text": {
            "description": "The comment text.",
            "type": "string"
          }
        }
      },
      "UpdateUploadDto": {
        "type": "object",
        "properties": {}
      },
      "response_recordCommentModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordCommentModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "CreateMessageDto": {
        "type": "object",
        "properties": {}
      },
      "response_recordCommentModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/recordCommentModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "UpdateMessageDto": {
        "type": "object",
        "properties": {}
      },
      "recordCommentModel": {
        "type": "object",
        "properties": {
          "createdBy": {
            "description": "The user who added the record comment.",
            "type": "string"
          },
          "createdDate": {
            "description": "The date when the record comment was added.",
            "format": "date-time",
            "type": "string"
          },
          "displayOnInspection": {
            "description": "Indicates whether or not the comment is displayed on inspection.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "id": {
            "description": "The comment system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "text": {
            "description": "The comment text.",
            "type": "string"
          }
        }
      },
      "response_recordConditionModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordConditionModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordConditionModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "activeStatus": {
            "type": "object",
            "description": "Indicates whether or not the condition is active.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "additionalInformation": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "additionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "appliedDate": {
            "description": "The date the standard condition was applied.",
            "format": "date-time",
            "type": "string"
          },
          "appliedbyDepartment": {
            "type": "object",
            "description": "The department responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "appliedbyUser": {
            "type": "object",
            "description": "The staff member responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "dispAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "displayNoticeInAgency": {
            "description": "Indicates whether or not to display the condition notice in Accela Automation when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizens": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizensFee": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access Fee Estimate page when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayOrder": {
            "description": "The display order of the condition in a list.",
            "format": "int64",
            "type": "integer"
          },
          "effectiveDate": {
            "description": "The date when you want the condition to become effective.",
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "description": "The date when the condition expires.",
            "format": "date-time",
            "type": "string"
          },
          "group": {
            "type": "object",
            "description": "The condition group is an attribute of a condition that organizes condition types. Your agency defines these groups.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The condition system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "inheritable": {
            "type": "object",
            "description": "This defines whether or not Accela Automation checks for inheritable conditions when a user associates a child record with a parent record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "isIncludeNameInNotice": {
            "description": "Indicates whether or not to display the condition name in the notice.",
            "type": "boolean"
          },
          "isIncludeShortCommentsInNotice": {
            "description": "Indicates whether or not to display the condition comments in the notice.",
            "type": "boolean"
          },
          "longComments": {
            "description": "Narrative comments to help identify the purpose or uses of the standard condition.",
            "type": "string"
          },
          "name": {
            "description": "The name of the standard condition.",
            "type": "string"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "publicDisplayMessage": {
            "description": "Text entered into this field displays in the condition notice or condition status bar for the Condition Name for the public user in Accela IVR (AIVR) and Accela Citizen Access (ACA).",
            "type": "string"
          },
          "resAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "resolutionAction": {
            "description": "he action performed in response to a condition.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "The severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortComments": {
            "description": "A brief description of the condition name. For example, the text may describe the situation that requires the system to apply the condition. You can set these short comments to display when a user accesses an application with this condition applied to it",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The condition status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "statusType": {
            "description": "The status type for a standard condition or an approval condition, applied or not applied for example.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The condition type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "request_recordConditionModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "activeStatus": {
            "type": "object",
            "description": "Indicates whether or not the condition is active.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "additionalInformation": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "additionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "appliedDate": {
            "description": "The date the standard condition was applied.",
            "format": "date-time",
            "type": "string"
          },
          "appliedbyDepartment": {
            "type": "object",
            "description": "The department responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "appliedbyUser": {
            "type": "object",
            "description": "The staff member responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "conditionNumber": {
            "description": "The condition sequence number.",
            "format": "int64",
            "type": "integer"
          },
          "dispAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "displayNoticeInAgency": {
            "description": "Indicates whether or not to display the condition notice in Accela Automation when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizens": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizensFee": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access Fee Estimate page when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayOrder": {
            "description": "The display order of the condition in a list.",
            "format": "int64",
            "type": "integer"
          },
          "effectiveDate": {
            "description": "The date when you want the condition to become effective.",
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "description": "The date when the condition expires.",
            "format": "date-time",
            "type": "string"
          },
          "group": {
            "type": "object",
            "description": "The condition group is an attribute of a condition that organizes condition types. Your agency defines these groups.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "inheritable": {
            "type": "object",
            "description": "This defines whether or not Accela Automation checks for inheritable conditions when a user associates a child record with a parent record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "isIncludeNameInNotice": {
            "description": "Indicates whether or not to display the condition name in the notice.",
            "type": "boolean"
          },
          "isIncludeShortCommentsInNotice": {
            "description": "Indicates whether or not to display the condition comments in the notice.",
            "type": "boolean"
          },
          "longComments": {
            "description": "Narrative comments to help identify the purpose or uses of the standard condition.",
            "type": "string"
          },
          "name": {
            "description": "The name of the standard condition.",
            "type": "string"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "publicDisplayMessage": {
            "description": "Text entered into this field displays in the condition notice or condition status bar for the Condition Name for the public user in Accela IVR (AIVR) and Accela Citizen Access (ACA).",
            "type": "string"
          },
          "resAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "resolutionAction": {
            "description": "he action performed in response to a condition.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "The severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortComments": {
            "description": "A brief description of the condition name. For example, the text may describe the situation that requires the system to apply the condition. You can set these short comments to display when a user accesses an application with this condition applied to it",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The condition status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "statusType": {
            "description": "The status type for a standard condition or an approval condition, applied or not applied for example.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The condition type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "capConditionModel_2": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "actionbyUser": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "activeStatus": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "additionalInformation": {
            "type": "string"
          },
          "additionalInformationPlainText": {
            "type": "string"
          },
          "agencyListSQL": {
            "type": "string"
          },
          "appliedDate": {
            "format": "date-time",
            "type": "string"
          },
          "appliedbyDepartment": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "appliedbyUser": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "dispAdditionalInformationPlainText": {
            "type": "string"
          },
          "displayNoticeInAgency": {
            "type": "boolean"
          },
          "displayNoticeInCitizens": {
            "type": "boolean"
          },
          "displayNoticeInCitizensFee": {
            "type": "boolean"
          },
          "displayOrder": {
            "format": "int64",
            "type": "integer"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "inheritable": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "isIncludeNameInNotice": {
            "type": "boolean"
          },
          "isIncludeShortCommentsInNotice": {
            "type": "boolean"
          },
          "longComments": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "publicDisplayMessage": {
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/capIDModel"
          },
          "resAdditionalInformationPlainText": {
            "type": "string"
          },
          "resolutionAction": {
            "type": "string"
          },
          "serviceProviderCode": {
            "type": "string"
          },
          "serviceProviderCodes": {
            "items": {},
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "shortComments": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "statusDate": {
            "format": "date-time",
            "type": "string"
          },
          "statusType": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/identifierModel"
          }
        }
      },
      "response_recordContactSimpleModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordContactSimpleModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordContactSimpleModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/compactAddressModel"
          },
          "birthCity": {
            "type": "object",
            "description": "The city of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthDate": {
            "description": "The birth date.",
            "format": "date-time",
            "type": "string"
          },
          "birthRegion": {
            "type": "object",
            "description": "The country of birth or region of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthState": {
            "type": "object",
            "description": "The state of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "businessName": {
            "description": "A secondary business name for the applicable individual.",
            "type": "string"
          },
          "comment": {
            "description": "A comment about the inspection contact.",
            "type": "string"
          },
          "deceasedDate": {
            "description": "The deceased date.",
            "format": "date-time",
            "type": "string"
          },
          "driverLicenseNumber": {
            "description": "The driver's license number of the contact. This field is active only when the Contact Type selected is Individual.",
            "type": "string"
          },
          "driverLicenseState": {
            "type": "object",
            "description": "The state that issued the driver's license.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "email": {
            "description": "The contact's email address.",
            "type": "string"
          },
          "endDate": {
            "description": "The date when the contact address ceases to be active.",
            "format": "date-time",
            "type": "string"
          },
          "fax": {
            "description": "The fax number for the contact.",
            "type": "string"
          },
          "faxCountryCode": {
            "description": "Fax Number Country Code",
            "type": "string"
          },
          "federalEmployerId": {
            "description": "The Federal Employer Identification Number. It is used to identify a business for tax purposes.",
            "type": "string"
          },
          "firstName": {
            "description": "The contact's first name.",
            "type": "string"
          },
          "fullName": {
            "description": "The contact's full name. ",
            "type": "string"
          },
          "gender": {
            "type": "object",
            "description": "The gender (male or female) of the individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The contact system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "individualOrOrganization": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the contact as the primary contact Only one address can be primary at any given time.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "lastName": {
            "description": "The last name (surname).",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name.\t",
            "type": "string"
          },
          "organizationName": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "passportNumber": {
            "description": "The contact's passport number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "phone1": {
            "description": "The primary telephone number of the contact.",
            "type": "string"
          },
          "phone1CountryCode": {
            "description": "Phone Number 1 Country Code",
            "type": "string"
          },
          "phone2": {
            "description": "The secondary telephone number of the contact.",
            "type": "string"
          },
          "phone2CountryCode": {
            "description": "Phone Number 2 Country Code",
            "type": "string"
          },
          "phone3": {
            "description": "The tertiary telephone number for the contact.",
            "type": "string"
          },
          "phone3CountryCode": {
            "description": "Phone Number 3 Country Code",
            "type": "string"
          },
          "postOfficeBox": {
            "description": "The post office box number.",
            "type": "string"
          },
          "preferredChannel": {
            "type": "object",
            "description": "The method by which the contact prefers to be notified, by phone for example. See [Get All Contact Preferred Channels](./api-settings.html#operation/v4.get.settings.contacts.preferredChannels).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "race": {
            "type": "object",
            "description": "The contact's race or ethnicity. See [Get All Contact Races](./api-settings.html#operation/v4.get.settings.contacts.races).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "referenceContactId": {
            "description": "The unique Id generated for a contact stored in the sytem.",
            "type": "string"
          },
          "relation": {
            "type": "object",
            "description": "The contact's relationship to the application or service request.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "salutation": {
            "type": "object",
            "description": "The salutation to be used when addressing the contact; for example Mr. oar Ms. This field is active only when Contact Type = Individual. See [Get All Contact Salutations](./api-settings.html#operation/v4.get.settings.contacts.salutations).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "socialSecurityNumber": {
            "description": "The individual's social security number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "startDate": {
            "description": "The date the contact became active.",
            "format": "date-time",
            "type": "string"
          },
          "stateIdNumber": {
            "description": "The contact's state ID number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The contact status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "suffix": {
            "description": "The contact name suffix.",
            "type": "string"
          },
          "title": {
            "description": "The individual's business title.",
            "type": "string"
          },
          "tradeName": {
            "description": "The contact's preferred business or trade name. This field is active only when the Contact Type selected is Organization.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The contact type. See [Get All Contact Types](./api-settings.html#operation/v4.get.settings.contacts.types).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "recordContactModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/compactAddressModel"
          },
          "birthCity": {
            "type": "object",
            "description": "The city of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthDate": {
            "description": "The birth date.",
            "format": "date-time",
            "type": "string"
          },
          "birthRegion": {
            "type": "object",
            "description": "The country of birth or region of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthState": {
            "type": "object",
            "description": "The state of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "businessName": {
            "description": "A secondary business name for the applicable individual.",
            "type": "string"
          },
          "comment": {
            "description": "A comment about the inspection contact.",
            "type": "string"
          },
          "deceasedDate": {
            "description": "The deceased date.",
            "format": "date-time",
            "type": "string"
          },
          "driverLicenseNumber": {
            "description": "The driver's license number of the contact. This field is active only when the Contact Type selected is Individual.",
            "type": "string"
          },
          "driverLicenseState": {
            "type": "object",
            "description": "The state that issued the driver's license.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "email": {
            "description": "The contact's email address.",
            "type": "string"
          },
          "endDate": {
            "description": "The date when the contact address ceases to be active.",
            "format": "date-time",
            "type": "string"
          },
          "fax": {
            "description": "The fax number for the contact.",
            "type": "string"
          },
          "faxCountryCode": {
            "description": "Fax Number Country Code",
            "type": "string"
          },
          "federalEmployerId": {
            "description": "The Federal Employer Identification Number. It is used to identify a business for tax purposes.",
            "type": "string"
          },
          "firstName": {
            "description": "The contact's first name.",
            "type": "string"
          },
          "fullName": {
            "description": "The contact's full name. ",
            "type": "string"
          },
          "gender": {
            "type": "object",
            "description": "The gender (male or female) of the individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The contact system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "individualOrOrganization": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the contact as the primary contact Only one address can be primary at any given time.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "lastName": {
            "description": "The last name (surname).",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name.\t",
            "type": "string"
          },
          "organizationName": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "passportNumber": {
            "description": "The contact's passport number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "phone1": {
            "description": "The primary telephone number of the contact.",
            "type": "string"
          },
          "phone1CountryCode": {
            "description": "Phone Number 1 Country Code",
            "type": "string"
          },
          "phone2": {
            "description": "The secondary telephone number of the contact.",
            "type": "string"
          },
          "phone2CountryCode": {
            "description": "Phone Number 2 Country Code",
            "type": "string"
          },
          "phone3": {
            "description": "The tertiary telephone number for the contact.",
            "type": "string"
          },
          "phone3CountryCode": {
            "description": "Phone Number 3 Country Code",
            "type": "string"
          },
          "postOfficeBox": {
            "description": "The post office box number.",
            "type": "string"
          },
          "preferredChannel": {
            "type": "object",
            "description": "The method by which the contact prefers to be notified, by phone for example. See [Get All Contact Preferred Channels](./api-settings.html#operation/v4.get.settings.contacts.preferredChannels).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "race": {
            "type": "object",
            "description": "The contact's race or ethnicity. See [Get All Contact Races](./api-settings.html#operation/v4.get.settings.contacts.races).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "referenceContactId": {
            "description": "The unique Id generated for a contact stored in the sytem.",
            "type": "string"
          },
          "relation": {
            "type": "object",
            "description": "The contact's relationship to the application or service request.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "salutation": {
            "type": "object",
            "description": "The salutation to be used when addressing the contact; for example Mr. oar Ms. This field is active only when Contact Type = Individual. See [Get All Contact Salutations](./api-settings.html#operation/v4.get.settings.contacts.salutations).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "socialSecurityNumber": {
            "description": "The individual's social security number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "startDate": {
            "description": "The date the contact became active.",
            "format": "date-time",
            "type": "string"
          },
          "stateIdNumber": {
            "description": "The contact's state ID number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The contact status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "suffix": {
            "description": "The contact name suffix.",
            "type": "string"
          },
          "title": {
            "description": "The individual's business title.",
            "type": "string"
          },
          "tradeName": {
            "description": "The contact's preferred business or trade name. This field is active only when the Contact Type selected is Organization.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The contact type. See [Get All Contact Types](./api-settings.html#operation/v4.get.settings.contacts.types).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "recordIdModel": {
        "type": "object",
        "properties": {
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Accela Automation auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "The alphanumeric record id.",
            "type": "string"
          }
        }
      },
      "capIDModel": {
        "type": "object",
        "properties": {
          "customId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "serviceProviderCode": {
            "type": "string"
          },
          "trackingId": {
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "recordIdSimpleModel": {
        "type": "object",
        "properties": {
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Accela Automation auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "response_recordParcelModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordParcelModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordParcelModel": {
        "type": "object",
        "properties": {
          "block": {
            "description": "The block number associated with the parcel.",
            "type": "string"
          },
          "book": {
            "description": "A reference to the physical location of parcel information in the County Assessor's office.",
            "type": "string"
          },
          "censusTract": {
            "description": "The unique number assigned by the Census Bureau that identifies the tract to which this parcel belongs.",
            "type": "string"
          },
          "councilDistrict": {
            "description": "The council district to which the parcel belongs.",
            "type": "string"
          },
          "exemptionValue": {
            "description": "The total value of any tax exemptions that apply to the land within the parcel.",
            "format": "double",
            "type": "number"
          },
          "gisSequenceNumber": {
            "description": "The GIS object ID of the parcel.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The system id of the parcel assigned by the Civic Platform server.",
            "type": "string"
          },
          "improvedValue": {
            "description": "The total value of any improvements to the land within the parcel.",
            "format": "double",
            "type": "number"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the parcel as the primary parcel.",
            "type": "string"
          },
          "landValue": {
            "description": "The total value of the land within the parcel.",
            "format": "double",
            "type": "number"
          },
          "legalDescription": {
            "description": "The legal description of the parcel.",
            "type": "string"
          },
          "lot": {
            "description": "The lot name.",
            "type": "string"
          },
          "mapNumber": {
            "description": "The unique map number that identifies the map for this parcel.",
            "type": "string"
          },
          "mapReferenceInfo": {
            "description": "The map reference for this parcel.",
            "type": "string"
          },
          "owners": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "page": {
            "description": "A reference to the physical location of the parcel information in the records of the County Assessor (or other responsible department).",
            "type": "string"
          },
          "parcel": {
            "description": "The official parcel name or number, as determined by the county assessor or other responsible department.",
            "type": "string"
          },
          "parcelArea": {
            "description": "The total area of the parcel. Your agency determines the standard unit of measure.",
            "format": "double",
            "type": "number"
          },
          "parcelNumber": {
            "description": "The alpha-numeric parcel number.",
            "type": "string"
          },
          "planArea": {
            "description": "The total area of the parcel. Your agency determines the standard unit of measure.",
            "type": "string"
          },
          "range": {
            "description": "When land is surveyed using the rectangular-survey system, range represents the measure of units east and west of the base line.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "section": {
            "description": "A piece of a township measuring 640 acres, one square mile, numbered with reference to the base line and meridian line.",
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "type": "object",
            "description": "The parcel status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "subdivision": {
            "type": "object",
            "description": "The name of the subdivision.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "supervisorDistrict": {
            "description": "The supervisor district to which the parcel belongs.",
            "type": "string"
          },
          "township": {
            "description": "When land is surveyed using the rectangular-survey system, township represents the measure of units North or South of the base line. Townships typically measure 6 miles to a side, or 36 square miles.",
            "type": "string"
          },
          "tract": {
            "description": "The name of the tract associated with this application. A tract may contain one or more related parcels.",
            "type": "string"
          }
        }
      },
      "recordTypeNoAliasModel": {
        "type": "object",
        "properties": {
          "category": {
            "description": "The 4th level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "filterName": {
            "description": "The name of the record type filter which defines the record types to be displayed for the citizen user.",
            "type": "string"
          },
          "group": {
            "description": "The 1st level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "id": {
            "description": "The record type system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "module": {
            "description": "Use to filter by the module. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "subType": {
            "description": "The 3rd level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "text": {
            "description": "The record type display text",
            "type": "string"
          },
          "type": {
            "description": "The 2nd level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "value": {
            "description": "The record type value.",
            "type": "string"
          }
        }
      },
      "recordTypeModel": {
        "type": "object",
        "properties": {
          "alias": {
            "description": "The record type alias.",
            "type": "string"
          },
          "category": {
            "description": "The 4th level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "filterName": {
            "description": "The name of the record type filter which defines the record types to be displayed for the citizen user.",
            "type": "string"
          },
          "group": {
            "description": "The 1st level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "id": {
            "description": "The record type id.",
            "type": "string"
          },
          "module": {
            "description": "The module the record type belongs to.",
            "type": "string"
          },
          "subType": {
            "description": "The 3rd level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "text": {
            "description": "The localized display text.",
            "type": "string"
          },
          "type": {
            "description": "The 2nd level in a 4-level record type structure (Group-Type-Subtype-Category).",
            "type": "string"
          },
          "value": {
            "description": "The stored value.",
            "type": "string"
          }
        }
      },
      "childDrill": {
        "type": "object",
        "properties": {
          "drillId": {
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "compactAddressModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "type": "string"
          },
          "city": {
            "description": "The name of the city.",
            "type": "string"
          },
          "country": {
            "type": "object",
            "description": "The name of the country.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "postalCode": {
            "description": "The postal ZIP code for the address.",
            "type": "string"
          },
          "state": {
            "type": "object",
            "description": "The address state.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "conditionHistoryModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "activeStatus": {
            "type": "object",
            "description": "Indicates whether or not the condition is active.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "additionalInformation": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "additionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "appliedDate": {
            "description": "The date the standard condition was applied.",
            "format": "date-time",
            "type": "string"
          },
          "appliedbyDepartment": {
            "type": "object",
            "description": "The department responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "appliedbyUser": {
            "type": "object",
            "description": "The staff member responsible for applying a condition.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "dispAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "displayNoticeInAgency": {
            "description": "Indicates whether or not to display the condition notice in Accela Automation when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizens": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "displayNoticeInCitizensFee": {
            "description": "Indicates whether or not to display the condition notice in Accela Citizen Access Fee Estimate page when a condition to a record or parcel is applied.",
            "type": "boolean"
          },
          "effectiveDate": {
            "description": "The date when you want the condition to become effective.",
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "description": "The date when the condition expires.",
            "format": "date-time",
            "type": "string"
          },
          "group": {
            "type": "object",
            "description": "The condition group is an attribute of a condition that organizes condition types. Your agency defines these groups.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The condition system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "inheritable": {
            "type": "object",
            "description": "This defines whether or not Accela Automation checks for inheritable conditions when a user associates a child record with a parent record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "isIncludeNameInNotice": {
            "description": "Indicates whether or not to display the condition name in the notice.",
            "type": "boolean"
          },
          "isIncludeShortCommentsInNotice": {
            "description": "Indicates whether or not to display the condition comments in the notice.",
            "type": "boolean"
          },
          "longComments": {
            "description": "Narrative comments to help identify the purpose or uses of the standard condition.",
            "type": "string"
          },
          "name": {
            "description": "The name of the standard condition.",
            "type": "string"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "publicDisplayMessage": {
            "description": "Text entered into this field displays in the condition notice or condition status bar for the Condition Name for the public user in Accela IVR (AIVR) and Accela Citizen Access (ACA).",
            "type": "string"
          },
          "resAdditionalInformationPlainText": {
            "description": "An unlimited text field to use if other fields are filled.",
            "type": "string"
          },
          "resolutionAction": {
            "description": "he action performed in response to a condition.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "The severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortComments": {
            "description": "A brief description of the condition name. For example, the text may describe the situation that requires the system to apply the condition. You can set these short comments to display when a user accesses an application with this condition applied to it",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The condition status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "statusType": {
            "description": "The status type for a standard condition or an approval condition, applied or not applied for example.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The condition type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "response_contactAddressArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/contactAddress"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "contactAddress": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "direction": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "faxCountryCode": {
            "type": "string"
          },
          "houseAlphaEnd": {
            "type": "string"
          },
          "houseAlphaStart": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "isPrimary": {
            "type": "string"
          },
          "levelEnd": {
            "type": "string"
          },
          "levelPrefix": {
            "type": "string"
          },
          "levelStart": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phoneCountryCode": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "recipient": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "status": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "streetAddress": {
            "type": "string"
          },
          "streetEnd": {
            "format": "int64",
            "type": "integer"
          },
          "streetName": {
            "type": "string"
          },
          "streetPrefix": {
            "type": "string"
          },
          "streetStart": {
            "format": "int64",
            "type": "integer"
          },
          "streetSuffix": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "streetSuffixDirection": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "type": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "unitEnd": {
            "type": "string"
          },
          "unitStart": {
            "type": "string"
          },
          "unitType": {
            "$ref": "#/components/schemas/identifierModel"
          }
        }
      },
      "contactTypeModel": {
        "type": "object",
        "properties": {
          "maxOccurance": {
            "description": "The maximum number of times a contact type is used.",
            "format": "int64",
            "type": "integer"
          },
          "minOccurance": {
            "description": "The minimum number of times a contact type is used.",
            "format": "int64",
            "type": "integer"
          },
          "value": {
            "description": "The contact type value.",
            "type": "string"
          }
        }
      },
      "response_costingModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/costingModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "request_costingModelArray": {
        "type": "object",
        "properties": {
          "comments": {
            "description": "Comments about the cost.",
            "type": "string"
          },
          "costAccount": {
            "description": "The cost account name.",
            "type": "string"
          },
          "costDate": {
            "description": "The date when the cost applied.",
            "format": "date-time",
            "type": "string"
          },
          "costFactor": {
            "type": "object",
            "description": "The cost factor.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "costItem": {
            "description": "The cost item name.",
            "type": "string"
          },
          "dispCostingCostItem": {
            "description": "The cost item display name.",
            "type": "string"
          },
          "distributeFlag": {
            "description": "Indicates whether or not costing is distributed.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "endTime": {
            "description": "The end time associated to the cost item.",
            "type": "string"
          },
          "fixedRate": {
            "description": "The fixed rate associated to the cost item.",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "The cost item system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "description": "The cost item quantity.",
            "format": "double",
            "type": "number"
          },
          "quantityDetail": {
            "description": "Details about the cost item quantity.",
            "type": "string"
          },
          "quantityDetailList": {
            "$ref": "#/components/schemas/costingQuantityModel"
          },
          "relatedAsgnNbr": {
            "description": "Related cost item.",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "The start time associated to the cost item.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The cost item status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "totalCost": {
            "description": "The total cost.",
            "format": "double",
            "type": "number"
          },
          "type": {
            "type": "object",
            "description": "The cost item type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitOfMeasure": {
            "type": "object",
            "description": "The cost item's unit of measure.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitRate": {
            "description": "The cost unit rate.",
            "format": "double",
            "type": "number"
          },
          "workOrderTaskCode": {
            "description": "The work order task code associated to the cost item.",
            "type": "string"
          },
          "workOrderTaskCodeIndex": {
            "description": "The order of the work order task.",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "costingModel": {
        "type": "object",
        "properties": {
          "comments": {
            "description": "Comments about the cost.",
            "type": "string"
          },
          "costAccount": {
            "description": "The cost account name.",
            "type": "string"
          },
          "costDate": {
            "description": "The date when the cost applied.",
            "format": "date-time",
            "type": "string"
          },
          "costFactor": {
            "type": "object",
            "description": "The cost factor.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "costItem": {
            "description": "The cost item name.",
            "type": "string"
          },
          "dispCostingCostItem": {
            "description": "The cost item display name.",
            "type": "string"
          },
          "distributeFlag": {
            "description": "Indicates whether or not costing is distributed.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "endTime": {
            "description": "The end time associated to the cost item.",
            "type": "string"
          },
          "fixedRate": {
            "description": "The fixed rate associated to the cost item.",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "The cost item system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "description": "The cost item quantity.",
            "format": "double",
            "type": "number"
          },
          "quantityDetail": {
            "description": "Details about the cost item quantity.",
            "type": "string"
          },
          "quantityDetailList": {
            "$ref": "#/components/schemas/costingQuantityModel"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "relatedAsgnNbr": {
            "description": "Related cost item.",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "The start time associated to the cost item.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The cost item status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "totalCost": {
            "description": "The total cost.",
            "format": "double",
            "type": "number"
          },
          "type": {
            "type": "object",
            "description": "The cost item type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitOfMeasure": {
            "type": "object",
            "description": "The cost item's unit of measure.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitRate": {
            "description": "The cost unit rate.",
            "format": "double",
            "type": "number"
          },
          "workOrderTaskCode": {
            "description": "The work order task code associated to the cost item.",
            "type": "string"
          },
          "workOrderTaskCodeIndex": {
            "description": "The order of the work order task.",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "costingQuantityModel": {
        "type": "object",
        "properties": {
          "factor": {
            "description": "The cost factor.",
            "format": "double",
            "type": "number"
          },
          "minutes": {
            "description": "The number of minutes associated to the cost.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "response_customAttributeModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "customAttributeModel": {
        "description": "Contains a custom form consisting of the custom form id and custom field name and value pairs. For example in JSON, \"My Custom Field\": \"My Custom Value\". The custom field name and its data type are defined in Civic Platform custom forms or custom tables: <br/>**For a Text field**, the maximum length is 256.  <br/>**For a Number field**, any numeric form is allowed, including negative numbers.  <br/>**For a Date field**, the format is MM/dd/yyyy.  <br/>**For a Time field**, the format is hh:mm.  <br/>**For a TextArea field**, the maximum length is 4000 characters, and allows line return characters.  <br/>**For a DropdownList field**, the dropdown list values are in the options[] array.  <br/>**For a CheckBox field**, the (case-sensitive) valid values are \"UNCHECKED\" and \"CHECKED\".  <br/>**For a Radio(Y/N) field**, the (case-sensitive) valid values are \"Yes\" and \"No\".",
        "type": "object",
        "properties": {
          "id": {
            "description": "The custom form id.",
            "type": "string"
          },
          "<aCustomFieldName>": {
            "description": "The name of a custom field.",
            "type": "string"
          },
          "<aCustomFieldValue>": {
            "description": "The value of a custom field.",
            "type": "string"
          }
        }
      },
      "departmentModel": {
        "type": "object",
        "properties": {
          "agency": {
            "description": "The department agency",
            "type": "string"
          },
          "bureau": {
            "description": "The name of the bureau, which is an organization level within an agency.",
            "type": "string"
          },
          "division": {
            "description": "The name of the division, which is an organization level within a bureau.",
            "type": "string"
          },
          "group": {
            "description": "The department group.",
            "type": "string"
          },
          "id": {
            "description": "The department system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "office": {
            "description": "An organization level within a group. An office is the final level within an organization structure. Agency->Bureau->Division->Section->Group->Office.",
            "type": "string"
          },
          "section": {
            "description": "A piece of a township measuring 640 acres, one square mile, numbered with reference to the base line and meridian line.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "text": {
            "description": "The localized display text.",
            "type": "string"
          },
          "value": {
            "description": "The value for the specified parameter.",
            "type": "string"
          }
        }
      },
      "response_describeRecordModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/describeRecordModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "describeRecordModel": {
        "type": "object",
        "properties": {
          "elements": {
            "items": {
              "$ref": "#/components/schemas/elementModel"
            },
            "type": "array"
          },
          "fields": {
            "items": {
              "$ref": "#/components/schemas/fieldModel"
            },
            "type": "array"
          }
        }
      },
      "response_documentModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/documentModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "documentModel": {
        "type": "object",
        "properties": {
          "category": {
            "type": "object",
            "description": "The document category. The list of category options varies depending on the document group.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "deletable": {
            "$ref": "#/components/schemas/userRolePrivilegeModel"
          },
          "department": {
            "description": "The name of the department the document belongs to.",
            "type": "string"
          },
          "description": {
            "description": "The document description.",
            "type": "string"
          },
          "downloadable": {
            "$ref": "#/components/schemas/userRolePrivilegeModel"
          },
          "entityId": {
            "description": "The unique ID of the entity or record.",
            "type": "string"
          },
          "entityType": {
            "description": "The type of entity.",
            "type": "string"
          },
          "fileName": {
            "description": "The name of the file as it displays in the source location.",
            "type": "string"
          },
          "group": {
            "type": "object",
            "description": "The document group.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The document id.",
            "format": "int64",
            "type": "integer"
          },
          "modifiedBy": {
            "description": "The user account that last modified the document.",
            "type": "string"
          },
          "modifiedDate": {
            "description": "The date the document was last modified.",
            "format": "date-time",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "size": {
            "description": "The file size of the document.",
            "format": "double",
            "type": "number"
          },
          "source": {
            "description": "The name for your agency's electronic document management system.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The documet status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "titleViewable": {
            "$ref": "#/components/schemas/userRolePrivilegeModel"
          },
          "type": {
            "description": "The document type.",
            "type": "string"
          },
          "uploadedBy": {
            "description": "The user who uploaded the document to the record.",
            "type": "string"
          },
          "uploadedDate": {
            "description": "The date when the document was uploaded.",
            "format": "date-time",
            "type": "string"
          },
          "virtualFolders": {
            "description": "This is the virtual folder for storing the attachment. With virtual folders you can organize uploaded attachments in groups",
            "type": "string"
          }
        }
      },
      "response_documentTypeModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/documentTypeModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "documentTypeModel": {
        "type": "object",
        "properties": {
          "deletable": {
            "description": "Indicates whether or not the record can be deleted.",
            "type": "boolean"
          },
          "downloadable": {
            "description": "Indicates whether or not the document type can be downloaded.",
            "type": "boolean"
          },
          "group": {
            "type": "object",
            "description": "The document group for the document category.\t",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The document category system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "text": {
            "description": "The localized display text.",
            "type": "string"
          },
          "uploadable": {
            "description": "Indicates whether or not you can upload documents of the specified category.",
            "type": "boolean"
          },
          "value": {
            "description": "The document category value.",
            "type": "string"
          },
          "viewable": {
            "description": "Indicates whether or not you can view the document category associated with the record.",
            "type": "boolean"
          }
        }
      },
      "elementModel": {
        "type": "object",
        "properties": {
          "isReference": {
            "description": "Indicates whether or not the entity is a reference.",
            "type": "boolean"
          },
          "isRequired": {
            "description": "Indicates whether or not the entity is required.",
            "type": "boolean"
          },
          "name": {
            "description": "The entity name.",
            "type": "string"
          },
          "types": {
            "items": {
              "$ref": "#/components/schemas/contactTypeModel"
            },
            "type": "array"
          }
        }
      },
      "response_estimateFeeModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/estimateFeeModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "estimateFeeModel": {
        "type": "object",
        "properties": {
          "currencyCode": {
            "description": "The standard ISO 4217 currency code. For example, \"USD\" for US Dollars",
            "type": "string"
          },
          "feeTotal": {
            "description": "The total fee.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "feeItemBaseModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object",
            "description": "The fee item code.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "feeNotes": {
            "description": "Notes about the fee.",
            "type": "string"
          },
          "id": {
            "description": "The fee item system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "paymentPeriod": {
            "type": "object",
            "description": "The time interval for processing invoices.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "quantity": {
            "description": "The number of units for which the same fee applies.",
            "format": "double",
            "type": "number"
          },
          "schedule": {
            "type": "object",
            "description": "Contains parameters that define the fee schedule.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "version": {
            "type": "object",
            "description": "The fee schedule version.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "feeItemBaseModel_1": {
        "type": "object",
        "properties": {
          "code": {
            "type": "object",
            "description": "The fee item code.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The fee item system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "notes": {
            "description": "A note entered against a fee item.\t",
            "type": "string"
          },
          "paymentPeriod": {
            "type": "object",
            "description": "The time interval for processing invoices.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "quantity": {
            "description": "The number of units for which the fee applies.",
            "format": "double",
            "type": "number"
          },
          "schedule": {
            "type": "object",
            "description": "Contains parameters that define the fee schedule. See [Get All Fee Schedules for Record Type](./api-settings.html#operation/v4.get.settings.records.types.id.fees.schedules).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "version": {
            "type": "object",
            "description": "The fee item version.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "feeItemModel": {
        "type": "object",
        "properties": {
          "acaRequiredFlag": {
            "description": "Indicates whether or not the fee schedule is required in order to make it accessible to citizens.",
            "type": "string"
          },
          "accountCode1": {
            "description": "The code associated with the first fee",
            "type": "string"
          },
          "accountCode1Allocation": {
            "description": "Allocation proportion or amount of account code 1.",
            "format": "double",
            "type": "number"
          },
          "accountCode2": {
            "description": "The code associated with the second fee",
            "type": "string"
          },
          "accountCode2Allocation": {
            "description": "Allocation proportion or amount of account code 2.",
            "format": "double",
            "type": "number"
          },
          "accountCode3": {
            "description": "The code associated with the third fee",
            "type": "string"
          },
          "accountCode3Allocation": {
            "description": "Allocation proportion or amount of account code 3.",
            "format": "double",
            "type": "number"
          },
          "allocatedFee1": {
            "description": "The allocated fee for account code 1.",
            "format": "double",
            "type": "number"
          },
          "allocatedFee2": {
            "description": "The allocated fee for account code 2.",
            "format": "double",
            "type": "number"
          },
          "allocatedFee3": {
            "description": "The allocated fee for account code 3.",
            "format": "double",
            "type": "number"
          },
          "amount": {
            "description": "The amount of a payment transaction or account balance.",
            "format": "double",
            "type": "number"
          },
          "applyDate": {
            "description": "The date the fee is applied.",
            "format": "date-time",
            "type": "string"
          },
          "autoAssessFlag": {
            "description": "Indicates whether or not the fee item is automatically assessed.",
            "type": "string"
          },
          "autoInvoiceFlag": {
            "description": "Indicates whether or not the fee item is automatically invoiced.",
            "type": "string"
          },
          "balanceDue": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "calcFlag": {
            "description": "Indicates whether or not the fee amount is based on fee calculation.",
            "type": "string"
          },
          "calculatedFlag": {
            "description": "Indicates whether or not the fee amount is based on fee calculation.",
            "type": "string"
          },
          "code": {
            "type": "object",
            "description": "A code identifying an associated item",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "description": {
            "type": "object",
            "description": "The fee description.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "displayOrder": {
            "description": "The display order of the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "effectDate": {
            "description": "Fee item effective date.",
            "format": "date-time",
            "type": "string"
          },
          "expireDate": {
            "description": "The date when the item expires",
            "format": "date-time",
            "type": "string"
          },
          "feeAllocationType": {
            "description": "The fee allocation type to each account code.",
            "type": "string"
          },
          "feeNotes": {
            "description": "Notes about the fee.",
            "type": "string"
          },
          "id": {
            "description": "The fee system id.",
            "format": "int64",
            "type": "integer"
          },
          "invoiceId": {
            "description": "The invoice ID for the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "maxFee": {
            "description": "The maximum fee item.",
            "format": "double",
            "type": "number"
          },
          "minFee": {
            "description": "The minimum fee item.",
            "format": "double",
            "type": "number"
          },
          "paymentPeriod": {
            "type": "object",
            "description": "The time interval for processing invoices.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "priority": {
            "description": "The priority level assigned to the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "description": "The number of units for which the same fee applies.",
            "format": "double",
            "type": "number"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "schedule": {
            "type": "object",
            "description": "The payment schedule name.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "status": {
            "description": "The fee item status.",
            "type": "string"
          },
          "subGroup": {
            "type": "object",
            "description": "The subgroup the fee is associated with.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "udf1": {
            "description": "User defined field 1",
            "type": "string"
          },
          "udf2": {
            "description": "User defined field 2",
            "type": "string"
          },
          "udf3": {
            "description": "User defined field 3",
            "type": "string"
          },
          "unit": {
            "type": "object",
            "description": "The unit of measure used for the object.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "variable": {
            "description": "The variable associated with the fee item.",
            "type": "string"
          },
          "version": {
            "type": "object",
            "description": "The payment schedule version",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "response_feeItemModel_1Array": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/feeItemModel_1"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "feeItemModel_1": {
        "type": "object",
        "properties": {
          "accountCode1": {
            "description": "The code associated with the first fee",
            "type": "string"
          },
          "accountCode1Allocation": {
            "description": "Allocation proportion or amount of account code 1.",
            "format": "double",
            "type": "number"
          },
          "accountCode2": {
            "description": "The code associated with the second fee",
            "type": "string"
          },
          "accountCode2Allocation": {
            "description": "Allocation proportion or amount of account code 2.",
            "format": "double",
            "type": "number"
          },
          "accountCode3": {
            "description": "The code associated with the third fee",
            "type": "string"
          },
          "accountCode3Allocation": {
            "description": "Allocation proportion or amount of account code 3.",
            "format": "double",
            "type": "number"
          },
          "amount": {
            "description": "The amount of a payment transaction or account balance.",
            "format": "double",
            "type": "number"
          },
          "auditDate": {
            "description": "The date when the fee item was added or updated.",
            "format": "date-time",
            "type": "string"
          },
          "applyDate": {
            "description": "The date the fee is applied.",
            "format": "date-time",
            "type": "string"
          },
          "balanceDue": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "code": {
            "type": "object",
            "description": "A code identifying an associated item",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "displayOrder": {
            "description": "The display order of the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The fee system id.",
            "format": "int64",
            "type": "integer"
          },
          "invoiceId": {
            "description": "The invoice ID for the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "maxFee": {
            "description": "The maximum fee item.",
            "format": "double",
            "type": "number"
          },
          "minFee": {
            "description": "The minimum fee item.",
            "format": "double",
            "type": "number"
          },
          "notes": {
            "description": "Notes about the fee item.",
            "type": "string"
          },
          "paymentPeriod": {
            "type": "object",
            "description": "The time interval for processing invoices.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "priority": {
            "description": "The priority level assigned to the fee item.",
            "format": "int64",
            "type": "integer"
          },
          "quantity": {
            "description": "The number of units for which the same fee applies.",
            "format": "double",
            "type": "number"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "schedule": {
            "type": "object",
            "description": "The payment schedule name.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "status": {
            "description": "The fee item status.",
            "type": "string"
          },
          "subGroup": {
            "type": "object",
            "description": "The subgroup the fee is associated with.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "udf1": {
            "description": "User defined field 1",
            "type": "string"
          },
          "udf2": {
            "description": "User defined field 2",
            "type": "string"
          },
          "udf3": {
            "description": "User defined field 3",
            "type": "string"
          },
          "unit": {
            "type": "object",
            "description": "The unit of measure used for the object.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "variable": {
            "description": "The variable associated with the fee item.",
            "type": "string"
          },
          "version": {
            "type": "object",
            "description": "The payment schedule version",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "fieldModel": {
        "type": "object",
        "properties": {
          "isRequired": {
            "description": "Indicates whether or not the information is required.",
            "type": "boolean"
          },
          "name": {
            "description": "The field name.",
            "type": "string"
          }
        }
      },
      "gISObjectModel": {
        "type": "object",
        "properties": {
          "gisId": {
            "description": "The GIS object id.",
            "type": "string"
          },
          "layerId": {
            "description": "The map layer id.",
            "type": "string"
          },
          "serviceId": {
            "description": "The map service id.",
            "type": "string"
          }
        }
      },
      "response_identifierModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/identifierModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "identifierModel": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "inspectionBeforeScheduledTime": {
        "description": "Specifies the number of days or hours before the scheduled time on the inspection date.",
        "type": "object",
        "properties": {
          "days": {
            "description": "Inspections can only be cancelled within this number of days before the scheduled time on the inspection date.",
            "format": "int64",
            "type": "integer"
          },
          "hours": {
            "description": "Inspections can only be cancelled within this number of hours before the scheduled time on the inspection date.",
            "format": "int64",
            "type": "integer"
          },
          "time": {
            "description": "Inspections can only be cancelled within the number of specified days or hours before this time (\"hh:mm AM|PM\") on the inspection date.",
            "type": "string"
          }
        }
      },
      "response_inspectionModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/inspectionModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "inspectionModel": {
        "type": "object",
        "properties": {
          "teamName": {
            "description": "Inspection Team name.",
            "type": "string"
          },
          "floor": {
            "description": "Inspection Floor.",
            "type": "string"
          },
          "floorUnit": {
            "description": "Inspection Floor Unit.",
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/recordAddressModel"
          },
          "billable": {
            "description": "This defines whether or not the item is billable.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "category": {
            "description": "The inspection category, which is used to organize inspection types. An inspection type is assigned to one or more inspection categories.",
            "type": "string"
          },
          "commentDisplay": {
            "description": "Indicates whether or not Accela Citizen Access users can view the inspection results comments.",
            "type": "string"
          },
          "commentPublicVisible": {
            "description": "Specifies the type of user who can view the inspection result comments. \"All ACA Users\" - Both registered and anonymous Accela Citizen Access users can view the comments for inspection results. \"Record Creator Only\" - the user who created the record can see the comments for the inspection results. \"Record Creator and Licensed Professional\" - The user who created the record and the licensed professional associated with the record can see the comments for the inspection results.\t",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "completedAMPM": {
            "description": "Indicates whether completed time is \"AM\" or \"PM\".",
            "type": "string"
          },
          "completedDate": {
            "description": "The date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "completedTime": {
            "description": "The time of completion.",
            "type": "string"
          },
          "contact": {
            "$ref": "#/components/schemas/inspectionContactModel"
          },
          "contactFirstName": {
            "description": "The contact's first name. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "contactLastName": {
            "description": "The last name of the contact.",
            "type": "string"
          },
          "contactMiddleName": {
            "description": "The middle name of the contact.",
            "type": "string"
          },
          "desiredAMPM": {
            "description": "Indicates whether the desired inspection time is AM or PM.",
            "type": "string"
          },
          "desiredDate": {
            "description": "The desired inspection date.",
            "format": "date-time",
            "type": "string"
          },
          "desiredTime": {
            "description": "The desired inspection time.",
            "type": "string"
          },
          "endMileage": {
            "description": "The ending mileage for the inspection.",
            "format": "float",
            "type": "number"
          },
          "endTime": {
            "description": "The time the inspection was completed.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedEndTime": {
            "description": "inspection estimated end time.",
            "type": "string"
          },
          "estimatedStartTime": {
            "description": "The scheduled start time for the inspection.",
            "type": "string"
          },
          "gisAreaName": {
            "description": "The GIS Object ID of the parent application if the application that the inspection is scheduled for has a parent application that is a project application.",
            "type": "string"
          },
          "grade": {
            "description": "The name of the inspection grade.",
            "type": "string"
          },
          "id": {
            "description": "The inspection system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "inspectorFullName": {
            "description": "The name of the inspector performing the assessment.",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "isAutoAssign": {
            "description": "This defines whether or not you want to automatically reschedule the inspection when the previous inspection status attains Approved status.",
            "type": "string"
          },
          "latitude": {
            "description": "The angular distance of a place north or south of the earth's equator, usually expressed in degrees and minutes.",
            "format": "float",
            "type": "number"
          },
          "longitude": {
            "description": "The angular distance of a place east or west of the meridian at Greenwich, England, usually expressed in degrees and minutes.",
            "format": "float",
            "type": "number"
          },
          "majorViolation": {
            "description": "The number of major violations.",
            "format": "int64",
            "type": "integer"
          },
          "overtime": {
            "description": "A labor cost factor that indicates time worked beyond a worker's regular working hours.",
            "type": "string"
          },
          "priority": {
            "description": "The priority level assigned to the inspection.",
            "format": "double",
            "type": "number"
          },
          "publicVisible": {
            "description": "This defines whether or not Accela Citizen Access users can view comment about the inspection results.",
            "type": "string"
          },
          "record": {
            "$ref": "#/components/schemas/simpleRecordModel"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "recordType": {
            "$ref": "#/components/schemas/recordTypeNoAliasModel"
          },
          "requestAMPM": {
            "description": "The time segment, AM or PM, for the time specified in the requestTime field.",
            "type": "string"
          },
          "requestComment": {
            "description": "Comments about the new inspection. For example, you may identify who requested the inspection.",
            "type": "string"
          },
          "requestDate": {
            "description": "The date when an inspection request is submitted.",
            "format": "date-time",
            "type": "string"
          },
          "requestTime": {
            "description": "This time is automatically generated when a new inspection is scheduled and submitted.",
            "type": "string"
          },
          "requestorFirstName": {
            "description": "The first name of the person requesting an inspection-related operation.",
            "type": "string"
          },
          "requestorLastName": {
            "description": "The last name of the person requesting an inspection-related operation.",
            "type": "string"
          },
          "requestorMiddleName": {
            "description": "The middle name of the person requesting an inspection-related operation.",
            "type": "string"
          },
          "requestorPhone": {
            "description": "The telephone number for the person who processes the inspection request or schedules the inspection.",
            "type": "string"
          },
          "requestorPhoneIDD": {
            "description": "The telephone number for the person who processes the inspection request or schedules the inspection.",
            "type": "string"
          },
          "requestorUserId": {
            "description": "The user Id of the person requesting an inspection-related operation.",
            "type": "string"
          },
          "requiredInspection": {
            "description": "This defines whether the inspection is optional or required.",
            "type": "string"
          },
          "resultComment": {
            "description": "The inspection result comments.",
            "type": "string"
          },
          "resultType": {
            "description": "The type of result that can be ascibed to an inspection. There are three result types: Approved: Approves (passes) the checklist item. Denied: Denies (fails) the checklist item. Informational: Indicates that the checklist items do not need a status of app",
            "type": "string"
          },
          "scheduleDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "scheduleEndAMPM": {
            "description": "Indicates whether the scheduleEndTime is in the AM or PM.",
            "enum": [
              "AM",
              "PM"
            ],
            "type": "string"
          },
          "scheduleEndTime": {
            "description": "The scheduled end time for the inspection.",
            "type": "string"
          },
          "scheduleStartAMPM": {
            "description": "AM indicates the 12 hour period from midnight to noon. PM indicates the 12 hour period from noon to midnight.",
            "enum": [
              "AM",
              "PM"
            ],
            "type": "string"
          },
          "scheduleStartTime": {
            "description": "The scheduled start time for the inspection.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "startMileage": {
            "description": "The starting mileage for the inspection.",
            "format": "float",
            "type": "number"
          },
          "startTime": {
            "description": "The time when you started the inspection.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The inspection status. See [Get All Inspection Statuses](./api-settings.html#operation/v4.get.settings.inspections.statuses).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "submitAMPM": {
            "description": "The time block for the scheduled inspection.",
            "type": "string"
          },
          "submitDate": {
            "description": "The date that the inspection was submitted.",
            "format": "date-time",
            "type": "string"
          },
          "submitTime": {
            "description": "The time that a new inspection is submitted. Civic Platform generates this value.",
            "type": "string"
          },
          "totalMileage": {
            "description": "The total mileage for the inspection.",
            "format": "float",
            "type": "number"
          },
          "totalScore": {
            "description": "The overall score of the inspection that includes the inspection result, inspection grade, checklist total score and checklist major violation option.",
            "format": "int64",
            "type": "integer"
          },
          "totalTime": {
            "description": "The total amount of time used to do an inspection.",
            "format": "double",
            "type": "number"
          },
          "type": {
            "$ref": "#/components/schemas/inspectionTypeSimpleModel"
          },
          "unitNumber": {
            "description": "The number of time units (see timeUnitDuration) comprising an inspection.",
            "type": "string"
          },
          "units": {
            "description": "The amount of time comprising the smallest time unit for conducting an inspection.",
            "format": "double",
            "type": "number"
          },
          "vehicleId": {
            "description": "A number, such as the license plate number or VIN, that identifies the vehicle used to complete an inspection.",
            "type": "string"
          }
        }
      },
      "inspectionContactModel": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ownerAddressModel"
          },
          "birthCity": {
            "type": "object",
            "description": "The city of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthDate": {
            "description": "The birth date.",
            "format": "date-time",
            "type": "string"
          },
          "birthRegion": {
            "type": "object",
            "description": "The country of birth or region of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "birthState": {
            "type": "object",
            "description": "The state of birth for an individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "businessName": {
            "description": "A secondary business name for the applicable individual.",
            "type": "string"
          },
          "comment": {
            "description": "A comment about the inspection contact.",
            "type": "string"
          },
          "deceasedDate": {
            "description": "The deceased date.",
            "format": "date-time",
            "type": "string"
          },
          "driverLicenseNumber": {
            "description": "The driver's license number of the contact. This field is active only when the Contact Type selected is Individual.",
            "type": "string"
          },
          "driverLicenseState": {
            "type": "object",
            "description": "The state that issued the driver's license.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "email": {
            "description": "The contact's email address.",
            "type": "string"
          },
          "fax": {
            "description": "The fax number for the contact.",
            "type": "string"
          },
          "faxCountryCode": {
            "description": "Fax Number Country Code",
            "type": "string"
          },
          "federalEmployerId": {
            "description": "The Federal Employer Identification Number. It is used to identify a business for tax purposes.",
            "type": "string"
          },
          "firstName": {
            "description": "The contact's first name.",
            "type": "string"
          },
          "fullName": {
            "description": "The contact's full name. ",
            "type": "string"
          },
          "gender": {
            "type": "object",
            "description": "The gender (male or female) of the individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The contact system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "individualOrOrganization": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name (surname).",
            "type": "string"
          },
          "middleName": {
            "description": "The middle name.\t",
            "type": "string"
          },
          "organizationName": {
            "description": "The organization to which the contact belongs. This field is only active when the Contact Type selected is Organization.",
            "type": "string"
          },
          "passportNumber": {
            "description": "The contact's passport number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "phone1": {
            "description": "The primary telephone number of the contact.",
            "type": "string"
          },
          "phone1CountryCode": {
            "description": "Phone Number 1 Country Code",
            "type": "string"
          },
          "phone2": {
            "description": "The secondary telephone number of the contact.",
            "type": "string"
          },
          "phone2CountryCode": {
            "description": "Phone Number 2 Country Code",
            "type": "string"
          },
          "phone3": {
            "description": "The tertiary telephone number for the contact.",
            "type": "string"
          },
          "phone3CountryCode": {
            "description": "Phone Number 3 Country Code",
            "type": "string"
          },
          "postOfficeBox": {
            "description": "The post office box number.",
            "type": "string"
          },
          "preferredChannel": {
            "type": "object",
            "description": "The method by which the contact prefers to be notified, by phone for example. See [Get All Contact Preferred Channels](./api-settings.html#operation/v4.get.settings.contacts.preferredChannels).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "race": {
            "type": "object",
            "description": "The contact's race or ethnicity. See [Get All Contact Races](./api-settings.html#operation/v4.get.settings.contacts.races).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "relation": {
            "type": "object",
            "description": "The contact's relationship to the application or service request.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "salutation": {
            "type": "object",
            "description": "The salutation to be used when addressing the contact; for example Mr. oar Ms. This field is active only when Contact Type = Individual. See [Get All Contact Salutations](./api-settings.html#operation/v4.get.settings.contacts.salutations).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier",
            "type": "string"
          },
          "socialSecurityNumber": {
            "description": "The individual's social security number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "stateIdNumber": {
            "description": "The contact's state ID number. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The contact status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "suffix": {
            "description": "The contact name suffix.",
            "type": "string"
          },
          "title": {
            "description": "The individual's business title.",
            "type": "string"
          },
          "tradeName": {
            "description": "The contact's preferred business or trade name. This field is active only when the Contact Type selected is Organization.",
            "type": "string"
          },
          "type": {
            "type": "object",
            "description": "The contact type. See [Get All Contact Types](./api-settings.html#operation/v4.get.settings.contacts.types).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "inspectionRestrictionModel": {
        "type": "object",
        "properties": {
          "beforeScheduledTime": {
            "$ref": "#/components/schemas/inspectionBeforeScheduledTime"
          }
        }
      },
      "inspectionTypeAssociationsModel": {
        "type": "object",
        "properties": {
          "standardCommentGroup": {
            "type": "object",
            "description": "The name of the standard comment group associated with the inspection type.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          }
        }
      },
      "inspectionTypeSimpleModel": {
        "type": "object",
        "properties": {
          "group": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "ivrNumber": {
            "format": "int64",
            "type": "integer",
            "description": "The IVR (Interactive Voice Response) number assigned to the inspection type. \n\nAdded in Civic Platform 9.3.0"
          },
          "text": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "inspectionTypeModel": {
        "type": "object",
        "properties": {
          "allowFailChecklistItems": {
            "description": "Indicates whether or not to allow inspection to pass with failed checklist items for the current inspection type or from previous inspections.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "allowMultiInspections": {
            "description": "Indicates whether or not to allow the scheduling of multiple inspections for this inspection type.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "associations": {
            "$ref": "#/components/schemas/inspectionTypeAssociationsModel"
          },
          "cancelRestriction": {
            "$ref": "#/components/schemas/inspectionRestrictionModel"
          },
          "carryoverFlag": {
            "description": "Indicates how failed guidesheet items for an inspection type are carried over to the next inspection guidesheet. \n\nNULL or empty string : Guidesheet items are not carried over. \n\n\"A\" : Automatic carry-over of failed guidesheet items to the next inspection guidesheet item.",
            "enum": [
              null,
              "A"
            ],
            "type": "string"
          },
          "defaultDepartment": {
            "$ref": "#/components/schemas/departmentModel"
          },
          "disciplines": {
            "description": "The inspection disciplines assigned to the inspection type.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "flowEnabledFlag": {
            "description": "Indicates whether or not to include the inspection in the inspection flow process.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "grade": {
            "description": "The name of the inspection grade.",
            "type": "string"
          },
          "group": {
            "description": "The name of a group of inspection types.\t",
            "type": "string"
          },
          "groupName": {
            "type": "object",
            "description": "The descriptive name associated to an inspection group code.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "guideGroup": {
            "$ref": "#/components/schemas/rGuideSheetGroupModel"
          },
          "hasCancelPermission": {
            "description": "Indicates whether or not the user can reschedule the inspection.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "hasFlowFlag": {
            "description": "Indicates whether or not to include the inspection in the inspection flow process.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "hasNextInspectionAdvance": {
            "description": "Indicates whether or not the next inspection can be scheduled in advance.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "hasReschdulePermission": {
            "description": "Indicates whether or not the user can reschedule the inspection.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "hasSchdulePermission": {
            "description": "Indicates whether or not the user can schedule the inspection. Note that hasSchdulePermission returns \"Y\" if result.inspectionTypes.schdulePermission is either \"REQUEST_ONLY_PENDING\", \"REQUEST_SAME_DAY_NEXT_DAY\", or \"SCHEDULE_USING_CALENDAR\". If result.inspectionTypes.schdulePermission is \"NONE\" or null, hasSchdulePermission returns \"N\".",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "id": {
            "description": "The inspection type system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "inspectionEditable": {
            "description": "Indicates whether or not inspection result, grade or checklist can be edited.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "isAutoAssign": {
            "description": "Indicates whether or not you want to automatically reschedule the inspection when the previous inspection status attains Approved status.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "isRequired": {
            "description": "Indicates whether or not the information is required.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "ivrNumber": {
            "format": "int64",
            "type": "integer",
            "description": "The IVR (Interactive Voice Response) number assigned to the inspection type. \n\nAdded in Civic Platform 9.3.0"
          },
          "maxPoints": {
            "description": "The number of points allowed for an inspection, after which the inspection fails.",
            "format": "double",
            "type": "number"
          },
          "priority": {
            "description": "The priority level assigned to the inspection type.",
            "type": "string"
          },
          "publicVisible": {
            "description": "Indicates whether or not Accela Citizen Access users can view comment about the inspection results.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "refereceNumber": {
            "description": "The reference number associated with an inspection.",
            "type": "string"
          },
          "rescheduleRestriction": {
            "$ref": "#/components/schemas/inspectionRestrictionModel"
          },
          "resultGroup": {
            "description": "The name of a grouping of Inspection results, usually indicative of a range of inspection scores.",
            "type": "string"
          },
          "schdulePermission": {
            "description": "Returns one of the scheduling permissions in Citizen Access: \n\nNONE - Does not allow public users to schedule this inspection type online. \n\nREQUEST_ONLY_PENDING - Only allows public users to request for an inspection online. The agency coordinates the appointment for the inspection date and time. \n\nREQUEST_SAME_DAY_NEXT_DAY - Allows public users to request an inspection for the same day, next day, or next available day, based on the inspection type calendar parameters defined on the inspection type. \n\nSCHEDULE_USING_CALENDAR - Allows public users to schedule inspections based on the availability on the inspection type calendar.",
            "type": "string"
          },
          "text": {
            "description": "The localized display text.",
            "type": "string"
          },
          "totalScore": {
            "description": "The overall score of the inspection that includes the inspection result, inspection grade, checklist total score and checklist major violation option.",
            "format": "int64",
            "type": "integer"
          },
          "totalScoreOption": {
            "description": "Indicates the method for calculating total scores of checklist items. There are four options:  \n\nTOTAL - Gets the total score of all checklists as the inspection score. \n\nMAX - Gets the max score of all checklists as the inspection score. \n\nMIN - Gets the min score of all checklists as the inspection score. \n\nAVG - Gets the average score of all checklists as the inspection score. \n\nSUBTRACT - Subtracts the total score of all the checklist items from the Total Score defined for the inspection type.",
            "enum": [
              "TOTAL",
              "MAX",
              "MIN",
              "AVG",
              "SUBTRACT"
            ],
            "type": "string"
          },
          "unitNumber": {
            "description": "The number of time units (see timeUnitDuration) comprising an inspection.",
            "type": "string"
          },
          "units": {
            "description": "The amount of time comprising the smallest time unit for conducting an inspection.",
            "format": "double",
            "type": "number"
          },
          "value": {
            "description": "The value for the specified parameter.",
            "type": "string"
          }
        }
      },
      "response_invoiceModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/invoiceModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "invoiceModel": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "The invoice fee amount.",
            "format": "double",
            "type": "number"
          },
          "auditStatus": {
            "description": "The audit status of the invoice fee item.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "dueDate": {
            "description": "The invoice due date.",
            "format": "date-time",
            "type": "string"
          },
          "fees": {
            "items": {
              "$ref": "#/components/schemas/feeItemModel"
            },
            "type": "array"
          },
          "id": {
            "description": "The unique id of the invoice.",
            "format": "int64",
            "type": "integer"
          },
          "invBatchDate": {
            "description": "The invoice batch date.",
            "format": "date-time",
            "type": "string"
          },
          "invComment": {
            "description": "A comment related to the invoice.",
            "type": "string"
          },
          "invStatus": {
            "description": "The invoice status.",
            "type": "string"
          },
          "invoiceDate": {
            "description": "The invoice date.",
            "format": "date-time",
            "type": "string"
          },
          "invoiceNumber": {
            "description": "The invoice number string.",
            "type": "string"
          },
          "printed": {
            "description": "Indicates whether or not the invoice is printed.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "udf1": {
            "description": "Invoice user defined field 1.",
            "type": "string"
          },
          "udf2": {
            "description": "Invoice user defined field 2.",
            "type": "string"
          },
          "udf3": {
            "description": "Invoice user defined field 3.",
            "type": "string"
          },
          "udf4": {
            "description": "Invoice user defined field 4.",
            "type": "string"
          }
        }
      },
      "response_licenseProfessionalModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "response_licenseProfessionalModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/licenseProfessionalModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "licenseProfessionalModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "description": "The first line of the address.",
            "type": "string"
          },
          "addressLine2": {
            "description": "The second line of the address.",
            "type": "string"
          },
          "addressLine3": {
            "description": "The third line of the address.",
            "type": "string"
          },
          "birthDate": {
            "description": "The birth date of an individual.",
            "format": "date-time",
            "type": "string"
          },
          "businessLicense": {
            "description": "The official business license number issued by an agency. A licensed professional can have the same license number assigned to multiple license types.",
            "type": "string"
          },
          "businessName": {
            "description": "A business name for the applicable individual.",
            "type": "string"
          },
          "businessName2": {
            "description": "A secondary business name for the applicable individual.",
            "type": "string"
          },
          "city": {
            "description": "The name of the city.",
            "type": "string"
          },
          "comment": {
            "description": "Comments or notes about the current context.",
            "type": "string"
          },
          "country": {
            "type": "object",
            "description": "The name of the country.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "email": {
            "description": "The contact's email address.",
            "type": "string"
          },
          "expirationDate": {
            "description": "The license expiration date.",
            "format": "date-time",
            "type": "string"
          },
          "fax": {
            "description": "The fax number for the contact.",
            "type": "string"
          },
          "federalEmployerId": {
            "description": "The Federal Employer Identification Number. It is used to identify a business for tax purposes.",
            "type": "string"
          },
          "firstName": {
            "description": "The licensed professional's first name. ",
            "type": "string"
          },
          "fullName": {
            "description": "The licensed professional's full name. ",
            "type": "string"
          },
          "gender": {
            "type": "object",
            "description": "The gender (male or female) of the individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "The licensed professional system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the professional as the primary professional.",
            "type": "string"
          },
          "lastName": {
            "description": "The licensed professional's last name. ",
            "type": "string"
          },
          "lastRenewalDate": {
            "description": "The last date for a professionals renewal license.",
            "format": "date-time",
            "type": "string"
          },
          "licenseNumber": {
            "description": "The licensed professional's license number.",
            "type": "string"
          },
          "licenseType": {
            "type": "object",
            "description": "The type of license held by the professional.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "licensingBoard": {
            "type": "object",
            "description": "The name of the licensing board that issued the license.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "middleName": {
            "description": "The licensed professional's middle name. ",
            "type": "string"
          },
          "originalIssueDate": {
            "description": "The original issuance date of license.",
            "format": "date-time",
            "type": "string"
          },
          "phone1": {
            "description": "The primary phone number of the contact.",
            "type": "string"
          },
          "phone2": {
            "description": "The secondary phone number of the contact.",
            "type": "string"
          },
          "phone3": {
            "description": "The tertiary phone number for the contact.\t",
            "type": "string"
          },
          "postOfficeBox": {
            "description": "The post office box number.",
            "type": "string"
          },
          "postalCode": {
            "description": "The postal ZIP code for the address.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "referenceLicenseId": {
            "description": "The unique Id generated for a professional stored in the system.",
            "type": "string"
          },
          "salutation": {
            "type": "object",
            "description": "The salutation to be used when addressing the contact; for example Mr. or Ms. This field is active only when Contact Type = Individual.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "state": {
            "type": "object",
            "description": "The state corresponding to the address on record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "suffix": {
            "description": "The licensed professional's name suffix.",
            "type": "string"
          },
          "title": {
            "description": "The individual's professional title.",
            "type": "string"
          }
        }
      },
      "noticeConditionModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "actionbyUser": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "activeStatus": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "additionalInformation": {
            "type": "string"
          },
          "additionalInformationPlainText": {
            "type": "string"
          },
          "agencyListSQL": {
            "type": "string"
          },
          "appliedDate": {
            "format": "date-time",
            "type": "string"
          },
          "appliedbyDepartment": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "appliedbyUser": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "dispAdditionalInformationPlainText": {
            "type": "string"
          },
          "displayNoticeInAgency": {
            "type": "boolean"
          },
          "displayNoticeInCitizens": {
            "type": "boolean"
          },
          "displayNoticeInCitizensFee": {
            "type": "boolean"
          },
          "displayOrder": {
            "format": "int64",
            "type": "integer"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "format": "date-time",
            "type": "string"
          },
          "group": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "inheritable": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "isIncludeNameInNotice": {
            "type": "boolean"
          },
          "isIncludeShortCommentsInNotice": {
            "type": "boolean"
          },
          "longComments": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "priority": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "publicDisplayMessage": {
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/capIDModel"
          },
          "resAdditionalInformationPlainText": {
            "type": "string"
          },
          "resolutionAction": {
            "type": "string"
          },
          "serviceProviderCode": {
            "type": "string"
          },
          "serviceProviderCodes": {
            "items": {},
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "shortComments": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "statusDate": {
            "format": "date-time",
            "type": "string"
          },
          "statusType": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/identifierModel"
          }
        }
      },
      "ownerAddressModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "addressLine3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "postalCode": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/identifierModel"
          }
        }
      },
      "parcelModel_1": {
        "type": "object",
        "properties": {
          "block": {
            "type": "string"
          },
          "book": {
            "type": "string"
          },
          "censusTract": {
            "type": "string"
          },
          "councilDistrict": {
            "type": "string"
          },
          "exemptionValue": {
            "format": "double",
            "type": "number"
          },
          "gisSequenceNumber": {
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "improvedValue": {
            "format": "double",
            "type": "number"
          },
          "isPrimary": {
            "type": "string"
          },
          "landValue": {
            "format": "double",
            "type": "number"
          },
          "legalDescription": {
            "type": "string"
          },
          "lot": {
            "type": "string"
          },
          "mapNumber": {
            "type": "string"
          },
          "mapReferenceInfo": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "parcel": {
            "type": "string"
          },
          "parcelArea": {
            "format": "double",
            "type": "number"
          },
          "parcelNumber": {
            "type": "string"
          },
          "planArea": {
            "type": "string"
          },
          "range": {
            "type": "string"
          },
          "section": {
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "subdivision": {
            "$ref": "#/components/schemas/identifierModel"
          },
          "supervisorDistrict": {
            "type": "string"
          },
          "township": {
            "type": "string"
          },
          "tract": {
            "type": "string"
          }
        }
      },
      "response_partTransactionModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/partTransactionModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "partTransactionModel": {
        "type": "object",
        "properties": {
          "accountName": {
            "description": "The budget account name associated with the part transaction.",
            "type": "string"
          },
          "accountNumber": {
            "description": "The budget account number associated with the part transaction.",
            "type": "string"
          },
          "comments": {
            "description": "Comments or notes about the current context.",
            "type": "string"
          },
          "costTotal": {
            "description": "The total cost of the part transaction.",
            "format": "double",
            "type": "number"
          },
          "hardReservation": {
            "description": "Indicates whether or not the part transaction is a hard reservation. \"Y\": A hard reservation which guarantees the reservation, and subtract the order from the quantity on hand. \"N\" : A soft reservation which alerts the warehouse that houses the part that someone may request the part. The quantity on hand of the part does not change.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "id": {
            "description": "The part transaction system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "locationId": {
            "description": "The location ID associated with the part transaction.",
            "format": "int64",
            "type": "integer"
          },
          "partBin": {
            "description": "The name of the part bin.",
            "type": "string"
          },
          "partBrand": {
            "description": "The name of the part brand.",
            "type": "string"
          },
          "partDescription": {
            "description": "The description of the part.",
            "type": "string"
          },
          "partId": {
            "description": "The part ID.",
            "format": "int64",
            "type": "integer"
          },
          "partLocation": {
            "description": "The location of the part.",
            "type": "string"
          },
          "partNumber": {
            "description": "The number of the part.",
            "type": "string"
          },
          "quantity": {
            "description": "The number of units for which the same fee applies.",
            "format": "double",
            "type": "number"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "resToPartLocation": {
            "description": "",
            "type": "string"
          },
          "reservationNumber": {
            "description": "The part reservation number.",
            "format": "int64",
            "type": "integer"
          },
          "reservationStatus": {
            "description": "The status of the part reservation.",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The part transaction status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "taxable": {
            "description": "Indicates whether or not the part is taxable.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "transactionCost": {
            "description": "The part transaction cost.",
            "format": "double",
            "type": "number"
          },
          "transactionDate": {
            "description": "The part transaction date.",
            "format": "date-time",
            "type": "string"
          },
          "transactionType": {
            "description": "The part transaction type. Possible values: \n\n\"Issue\" : occurs either when someone requests and receives a part on the spot, or when someone receives a reserved part. \n\n\"Receive\" : occurs when someone purchases a part or returns a part to a location. \n\n\"Transfer\" : occurs when someone moves a part from one location to another. \n\n\"Adjust\" : occurs when someone makes quantity adjustments for cycle counts. \n\n\"Reserve\" : occurs when someone sets aside parts so they can issue them at a later date.",
            "type": "string",
            "enum": [
              "Issue",
              "Receive",
              "Transfer",
              "Adjust",
              "Reserve"
            ]
          },
          "type": {
            "type": "object",
            "description": "",
            "properties": {
              "text": {
                "description": "The part transaction type.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "unitCost": {
            "description": "The unit cost per part.",
            "format": "double",
            "type": "number"
          },
          "unitMeasurement": {
            "type": "object",
            "description": "The unit of measurement for quantifying the part.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "updatedBy": {
            "description": "The user who last updated the checklist or checklist item.",
            "type": "string"
          },
          "workOrderTaskCode": {
            "description": "The work order task code associated with the part transactionmodel.",
            "type": "string"
          },
          "workOrderTaskCodeIndex": {
            "description": "The work order task code index associated with the part transactionmodel.",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "response_paymentModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/paymentModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "paymentModel": {
        "type": "object",
        "properties": {
          "amount": {
            "description": "The amount of a payment transaction or account balance.",
            "format": "double",
            "type": "number"
          },
          "amountNotAllocated": {
            "description": "The payment amount which has not been allocated.",
            "format": "double",
            "type": "number"
          },
          "cashierId": {
            "description": "The unique ID associated with the cashier.",
            "type": "string"
          },
          "id": {
            "description": "The payment system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "paymentDate": {
            "description": "The date a payment was entered into the system.",
            "format": "date-time",
            "type": "string"
          },
          "paymentMethod": {
            "description": "Describes the method of payment, for example; credit card, cash, debit card, and so forth.",
            "type": "string"
          },
          "paymentStatus": {
            "description": "Indicates whether or not a payment has been made in full.",
            "type": "string"
          },
          "receiptId": {
            "description": "The unique ID generated for the recipient.",
            "format": "int64",
            "type": "integer"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "transactionCode": {
            "description": "An industry standard code that identifies the type of transaction.",
            "type": "string"
          },
          "transactionId": {
            "description": "A unique number, assigned by the system, that indentifies the transaction.",
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "rGuideSheetGroupModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The inspection checklist sytem id assigned by the Civic Platform server.",
            "type": "string"
          },
          "text": {
            "description": "The localized display text.",
            "type": "string"
          },
          "value": {
            "description": "The stored value.",
            "type": "string"
          }
        }
      },
      "response_recordAdditionalModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordAdditionalModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordAdditionalModel": {
        "type": "object",
        "properties": {
          "buildingCount": {
            "description": "The number of buildings associated with the record.",
            "format": "int64",
            "type": "integer"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "estimatedValue": {
            "description": "The application's estimated value.",
            "format": "double",
            "type": "number"
          },
          "houseUnit": {
            "description": "The house unit associated with the application.",
            "format": "int64",
            "type": "integer"
          },
          "publicOwned": {
            "description": "A flag that indicates whether or not the public owns the item.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdSimpleModel"
          }
        }
      },
      "response_recordModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordAPOCustomFormsModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordAPOCustomFormsModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/recordAddressCustomFormsModel"
            },
            "type": "array"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/assetMasterModel"
            },
            "type": "array"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "conditionOfApprovals": {
            "items": {
              "$ref": "#/components/schemas/capConditionModel_2"
            },
            "type": "array"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/noticeConditionModel"
            },
            "type": "array"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "contact": {
            "items": {
              "$ref": "#/components/schemas/recordContactSimpleModel"
            },
            "type": "array"
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdByCloning": {
            "description": "Indictes whether or not the record was cloned.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "customTables": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "initiatedProduct": {
            "description": "The Civic Platform product  where the application is submitted: \"AA\" : Classic Accela Automation. \"ACA\" : Accela Citizen Access. \"AIVR\" : Accela Integrated Voice Response. \"AMO\" : Accela Mobile Office. \"AV360\" : Accela Asset Management, Accela Land Management.",
            "type": "string"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "openedDate": {
            "description": "The date the application was opened.",
            "format": "date-time",
            "type": "string"
          },
          "overallApplicationTime": {
            "description": "The amount of elapsed time from the time tracking start date to the completion of the application.",
            "format": "double",
            "type": "number"
          },
          "owner": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "parcel": {
            "items": {
              "$ref": "#/components/schemas/parcelModel_1"
            },
            "type": "array"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "professional": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedDate": {
            "description": "The date the complaint was reported.",
            "format": "date-time",
            "type": "string"
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.\t",
            "format": "date-time",
            "type": "string"
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusType": {
            "description": "The record status type.",
            "enum": [
              "APPROVED",
              "CLOSED",
              "COMPLETE",
              "DENIED",
              "INCOMPLETE",
              "OPEN",
              "PENDING",
              "UNASSIGNED",
              "VOID"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "totalFee": {
            "description": "The total amount of the fees invoiced to the record.",
            "format": "double",
            "type": "number"
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The total amount of pay.",
            "format": "double",
            "type": "number"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          },
          "updateDate": {
            "description": "The last update date.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "The record value.",
            "type": "string"
          }
        }
      },
      "recordModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/recordAddressModel"
            },
            "type": "array"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assets": {
            "items": {
              "$ref": "#/components/schemas/assetMasterModel"
            },
            "type": "array"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "conditionOfApprovals": {
            "items": {
              "$ref": "#/components/schemas/capConditionModel_2"
            },
            "type": "array"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/noticeConditionModel"
            },
            "type": "array"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "contact": {
            "items": {
              "$ref": "#/components/schemas/recordContactSimpleModel"
            },
            "type": "array"
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdByCloning": {
            "description": "Indictes whether or not the record was cloned.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "customTables": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "initiatedProduct": {
            "description": "The Civic Platform product  where the application is submitted: \"AA\" : Classic Accela Automation. \"ACA\" : Accela Citizen Access. \"AIVR\" : Accela Integrated Voice Response. \"AMO\" : Accela Mobile Office. \"AV360\" : Accela Asset Management, Accela Land Management.",
            "type": "string"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "openedDate": {
            "description": "The date the application was opened.",
            "format": "date-time",
            "type": "string"
          },
          "overallApplicationTime": {
            "description": "The amount of elapsed time from the time tracking start date to the completion of the application.",
            "format": "double",
            "type": "number"
          },
          "owner": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "parcel": {
            "items": {
              "$ref": "#/components/schemas/parcelModel_1"
            },
            "type": "array"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "professional": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedDate": {
            "description": "The date the complaint was reported.",
            "format": "date-time",
            "type": "string"
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.\t",
            "format": "date-time",
            "type": "string"
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusType": {
            "description": "The record status type.",
            "enum": [
              "APPROVED",
              "CLOSED",
              "COMPLETE",
              "DENIED",
              "INCOMPLETE",
              "OPEN",
              "PENDING",
              "UNASSIGNED",
              "VOID"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "totalFee": {
            "description": "The total amount of the fees invoiced to the record.",
            "format": "double",
            "type": "number"
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The total amount of pay.",
            "format": "double",
            "type": "number"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          },
          "updateDate": {
            "description": "The last update date.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "The record value.",
            "type": "string"
          }
        }
      },
      "request_createRecordModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/recordAddressModel"
            },
            "type": "array"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "conditionOfApprovals": {
            "items": {
              "$ref": "#/components/schemas/capConditionModel_2"
            },
            "type": "array"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/noticeConditionModel"
            },
            "type": "array"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/recordContactSimpleModel"
            },
            "type": "array"
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdByCloning": {
            "description": "Indictes whether or not the record was cloned.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "customTables": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "initiatedProduct": {
            "description": "The product or app that created the record. If initiatedProduct is null or not specified in the request, the default is \"AV360\" (Civic Platform application).\n\nAdded in Civic Platform version: 9.2.0",
            "type": "string"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "openedDate": {
            "description": "The date the application was opened.",
            "format": "date-time",
            "type": "string"
          },
          "overallApplicationTime": {
            "description": "The amount of elapsed time from the time tracking start date to the completion of the application.",
            "format": "double",
            "type": "number"
          },
          "owners": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "parcels": {
            "items": {
              "$ref": "#/components/schemas/parcelModel_1"
            },
            "type": "array"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "professionals": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusType": {
            "description": "The record status type.",
            "enum": [
              "APPROVED",
              "CLOSED",
              "COMPLETE",
              "DENIED",
              "INCOMPLETE",
              "OPEN",
              "PENDING",
              "UNASSIGNED",
              "VOID"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "trackingId": {
            "description": "The total amount of pay.",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          },
          "updateDate": {
            "description": "The last update date.",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "response_recordExtModel_1Array": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordExtModel_1"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordExtModel_1": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/recordAddressCustomFormsModel"
            },
            "type": "array"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "conditionOfApprovals": {
            "items": {
              "$ref": "#/components/schemas/capConditionModel_2"
            },
            "type": "array"
          },
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/noticeConditionModel"
            },
            "type": "array"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/recordContactSimpleModel"
            },
            "type": "array"
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "customTables": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "initiatedProduct": {
            "description": "The Civic Platform product  where the application is submitted: \"AA\" : Classic Accela Automation. \"ACA\" : Accela Citizen Access. \"AIVR\" : Accela Integrated Voice Response. \"AMO\" : Accela Mobile Office. \"AV360\" : Accela Asset Management, Accela Land Management.",
            "type": "string"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "openedDate": {
            "description": "The date the application was opened.",
            "format": "date-time",
            "type": "string"
          },
          "overallApplicationTime": {
            "description": "The amount of elapsed time from the time tracking start date to the completion of the application.",
            "format": "double",
            "type": "number"
          },
          "owners": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "parcels": {
            "items": {
              "$ref": "#/components/schemas/parcelModel_1"
            },
            "type": "array"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "professionals": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusType": {
            "description": "The record status type.",
            "enum": [
              "APPROVED",
              "CLOSED",
              "COMPLETE",
              "DENIED",
              "INCOMPLETE",
              "OPEN",
              "PENDING",
              "UNASSIGNED",
              "VOID"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "trackingId": {
            "description": "The total amount of pay.",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          },
          "updateDate": {
            "description": "The last update date.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "request_recordModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/recordAddressModel"
            },
            "type": "array"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "contact": {
            "$ref": "#/components/schemas/recordContactModel"
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdByCloning": {
            "description": "Indictes whether or not the record was cloned.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "customForms": {
            "items": {
              "$ref": "#/components/schemas/customAttributeModel"
            },
            "type": "array"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "customTables": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "initiatedProduct": {
            "description": "The product or app that created the record. If initiatedProduct is null or not specified in the request, the default is \"AV360\" (Civic Platform application).\n\nAdded in Civic Platform version: 9.2.0",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "owner": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "parcel": {
            "items": {
              "$ref": "#/components/schemas/parcelModel_1"
            },
            "type": "array"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "professional": {
            "items": {
              "$ref": "#/components/schemas/licenseProfessionalModel"
            },
            "type": "array"
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedDate": {
            "description": "The date the complaint was reported.",
            "format": "date-time",
            "type": "string"
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "response_simpleRecordModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/simpleRecordModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "response_simpleRecordModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/simpleRecordModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "simpleRecordModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "assignedUser": {
            "description": "The staff member responsible for the action.",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedByUser": {
            "description": "The staff member responsible for closure.",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "completedByUser": {
            "description": "The staff member responsible for completion.",
            "type": "string"
          },
          "constructionType": {
            "type": "object",
            "description": "The US Census Bureau construction type code. See [Get All Record Construction Types](./api-settings.html#operation/v4.get.settings.records.constructionTypes).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "costPerUnit": {
            "description": "The cost for one unit associated to the record.",
            "format": "double",
            "type": "number"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdByCloning": {
            "description": "Indictes whether or not the record was cloned.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Civic Platform auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "enforceUser": {
            "description": "Name of the enforcement officer.",
            "type": "string"
          },
          "enforceUserId": {
            "description": "ID number of the enforcement officer.",
            "type": "string"
          },
          "estimatedCostPerUnit": {
            "description": "The estimated cost per unit.",
            "format": "double",
            "type": "number"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "housingUnits": {
            "description": "The number of housing units.",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "initiatedProduct": {
            "description": "The Civic Platform product  where the application is submitted: \"AA\" : Classic Accela Automation. \"ACA\" : Accela Citizen Access. \"AIVR\" : Accela Integrated Voice Response. \"AMO\" : Accela Mobile Office. \"AV360\" : Accela Asset Management, Accela Land Management.",
            "type": "string"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "module": {
            "description": "The module the record belongs to. See [Get All Modules](./api-settings.html#operation/v4.get.settings.modules).",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "numberOfBuildings": {
            "description": "The number of buildings.",
            "format": "int64",
            "type": "integer"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "openedDate": {
            "description": "The date the application was opened.",
            "format": "date-time",
            "type": "string"
          },
          "overallApplicationTime": {
            "description": "The amount of elapsed time from the time tracking start date to the completion of the application.",
            "format": "double",
            "type": "number"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "recordClass": {
            "description": "General information about the record.",
            "type": "string"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedDate": {
            "description": "The date the complaint was reported.",
            "format": "date-time",
            "type": "string"
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier,",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.\t",
            "format": "date-time",
            "type": "string"
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "totalFee": {
            "description": "The total amount of the fees invoiced to the record.",
            "format": "double",
            "type": "number"
          },
          "totalJobCost": {
            "description": "The combination of work order assignments (labor) and costs.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The total amount of pay.",
            "format": "double",
            "type": "number"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeModel"
          },
          "undistributedCost": {
            "description": "The undistributed costs for this work order.",
            "format": "double",
            "type": "number"
          },
          "value": {
            "description": "The record value.",
            "type": "string"
          }
        }
      },
      "request_simpleRecordModel": {
        "type": "object",
        "properties": {
          "actualProductionUnit": {
            "description": "Estimated cost per production unit.",
            "format": "double",
            "type": "number"
          },
          "appearanceDate": {
            "description": "The date for a hearing appearance.",
            "format": "date-time",
            "type": "string"
          },
          "appearanceDayOfWeek": {
            "description": "The day for a hearing appearance.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date the application was assigned.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "description": "The department responsible for the action. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "balance": {
            "description": "The amount due.",
            "format": "double",
            "type": "number"
          },
          "booking": {
            "description": "Indicates whether or not there was a booking in addition to a citation.",
            "type": "boolean"
          },
          "closedByDepartment": {
            "description": "The department responsible for closing the record. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "closedDate": {
            "description": "The date the application was closed.",
            "format": "date-time",
            "type": "string"
          },
          "completeDate": {
            "description": "The date the application was completed.",
            "format": "date-time",
            "type": "string"
          },
          "completedByDepartment": {
            "description": "The department responsible for completion. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "defendantSignature": {
            "description": "Indicates whether or not a defendant's signature has been obtained.",
            "type": "boolean"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "enforceDepartment": {
            "description": "The name of the department responsible for enforcement. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "estimatedProductionUnit": {
            "description": "The estimated number of production units.",
            "format": "double",
            "type": "number"
          },
          "estimatedTotalJobCost": {
            "description": "The estimated cost of the job.",
            "format": "double",
            "type": "number"
          },
          "firstIssuedDate": {
            "description": "The first issued date for license",
            "format": "date-time",
            "type": "string"
          },
          "infraction": {
            "description": "Indicates whether or not an infraction occurred.",
            "type": "boolean"
          },
          "inspectorDepartment": {
            "description": "The name of the department where the inspector works. See [Get All Departments](./api-settings.html#operation/v4.get.settings.departments).",
            "type": "string"
          },
          "inspectorId": {
            "description": "The ID number of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "inspectorName": {
            "description": "The name of the inspector. See [Get All Inspectors](./api-inspections.html#operation/v4.get.inspectors).",
            "type": "string"
          },
          "jobValue": {
            "description": "The value of the job.",
            "format": "double",
            "type": "number"
          },
          "misdemeanor": {
            "description": "Indicates whether or not a misdemeanor occurred.",
            "type": "boolean"
          },
          "name": {
            "description": "The name associated to the record.",
            "type": "string"
          },
          "offenseWitnessed": {
            "description": "Indicates whether or not  there was a witness to the alleged offense.",
            "type": "boolean"
          },
          "priority": {
            "type": "object",
            "description": "The priority level assigned to the record. See [Get All Priorities](./api-settings.html#operation/v4.get.settings.priorities).",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "publicOwned": {
            "description": "Indicates whether or not the record is for the public.",
            "type": "boolean"
          },
          "renewalInfo": {
            "$ref": "#/components/schemas/recordExpirationModel"
          },
          "reportedChannel": {
            "type": "object",
            "description": "The incoming channel through which the applicant submitted the application.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "reportedDate": {
            "description": "The date the complaint was reported.",
            "format": "date-time",
            "type": "string"
          },
          "reportedType": {
            "type": "object",
            "description": "The type of complaint or incident being reported.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "scheduledDate": {
            "description": "The date when the inspection gets scheduled.",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "type": "object",
            "description": "Indicates the severity of the condition.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "shortNotes": {
            "description": "A brief note about the record subject.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The record status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusReason": {
            "type": "object",
            "description": "\tThe reason for the status setting on the record.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "totalFee": {
            "description": "The total amount of the fees invoiced to the record.",
            "format": "double",
            "type": "number"
          },
          "totalPay": {
            "description": "The total amount of pay.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "response_resultModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/resultModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "response_resultModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/resultModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "resultModel": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The error code, if an error is encountered.",
            "type": "string"
          },
          "id": {
            "description": "The system id of the object in this operation.",
            "format": "int64",
            "type": "integer"
          },
          "isSuccess": {
            "description": "Indicates whether or not the operation on the object is successful.",
            "type": "boolean"
          },
          "message": {
            "description": "The error message, if an error is encountered",
            "type": "string"
          }
        }
      },
      "response_recordInspectionTypeModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordInspectionTypeModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordInspectionTypeModel": {
        "type": "object",
        "properties": {
          "inspectionTypes": {
            "items": {
              "$ref": "#/components/schemas/inspectionTypeModel"
            },
            "type": "array"
          },
          "recordId": {
            "description": "The unique ID associated with a record.",
            "type": "string"
          }
        }
      },
      "response_recordRelatedModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/recordRelatedModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "recordRelatedModel": {
        "type": "object",
        "properties": {
          "customId": {
            "description": "An ID based on a different numbering convention from the numbering convention used by the record ID (xxxxx-xx-xxxxx). Accela Automation auto-generates and applies an alternate ID value when you submit a new application.",
            "type": "string"
          },
          "id": {
            "description": "The record system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "relationship": {
            "description": "The type of relationship of a related record.",
            "enum": [
              "parent",
              "child",
              "renewal"
            ],
            "type": "string"
          },
          "serviceProveCode": {
            "description": "The unique agency id.",
            "type": "string"
          },
          "trackingId": {
            "description": "The application tracking number (IVR tracking number).",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/recordTypeNoAliasModel"
          }
        }
      },
      "response_refOwnerModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/refOwnerModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "response_refOwnerModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/refOwnerModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "refOwnerModel": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The contact's email address.",
            "type": "string"
          },
          "fax": {
            "description": "The fax number for the contact.",
            "type": "string"
          },
          "firstName": {
            "description": "The contact's first name. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "fullName": {
            "description": "The contact's full name. This field is only active when the Contact Type selected is Individual.",
            "type": "string"
          },
          "id": {
            "description": "The owner system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the owner as the primary owner.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name (surname).",
            "type": "string"
          },
          "mailAddress": {
            "$ref": "#/components/schemas/ownerAddressModel"
          },
          "middleName": {
            "description": "The contact's middle name.",
            "type": "string"
          },
          "parcelId": {
            "description": "The unique Id generated for a parcel.",
            "type": "string"
          },
          "phone": {
            "description": "The telephone number of the owner.",
            "type": "string"
          },
          "phoneCountryCode": {
            "description": "The country code for the assoicated phone number.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "refOwnerId": {
            "description": "The reference owner id.",
            "format": "double",
            "type": "number"
          },
          "status": {
            "type": "object",
            "description": "The owner status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "taxId": {
            "description": "The owner's tax ID number.",
            "type": "string"
          },
          "title": {
            "description": "The individual's business title.",
            "type": "string"
          },
          "type": {
            "description": "The owner type.",
            "type": "string"
          }
        }
      },
      "rowModel": {
        "type": "object",
        "properties": {
          "action": {
            "description": "The requested operation on the row.",
            "enum": [
              "add",
              "update",
              "delete"
            ],
            "type": "string"
          },
          "fields": {
            "$ref": "#/components/schemas/customAttributeModel"
          },
          "id": {
            "description": "The row id.",
            "type": "string"
          }
        }
      },
      "response_tableModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/tableModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "tableModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The custom table id.",
            "type": "string"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/rowModel"
            },
            "description": "A table row containing custom fields.",
            "type": "array"
          }
        }
      },
      "response_taskItemModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/taskItemModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "response_taskItemModel": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/taskItemModel"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "taskItemModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "approval": {
            "description": "Used to indicate supervisory approval of an adhoc task.",
            "type": "string"
          },
          "assignEmailDisplay": {
            "description": "Indicates whether or not to display the agency employeeâ€™s email address in ACA. Public users can then click the e-mail hyperlink and send an e-mail to the agency employee. â€œYâ€ : display the email address. â€œNâ€ : hide the email address.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date of the assigned action.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedUser": {
            "type": "object",
            "description": "The staff member responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "billable": {
            "description": "Indicates whether or not the item is billable.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "comment": {
            "description": "Comments or notes about the current context.",
            "type": "string"
          },
          "commentDisplay": {
            "description": "Indicates whether or not Accela Citizen Access users can view the inspection results comments.\t",
            "type": "string"
          },
          "commentPublicVisible": {
            "description": "Specifies the type of user who can view the inspection result comments. <br/>\"All ACA Users\" - Both registered and anonymous Accela Citizen Access users can view the comments for inspection results. <br/>\"Record Creator Only\" - the user who created the record can see the comments for the inspection results. <br/>\"Record Creator and Licensed Professional\" - The user who created the record and the licensed professional associated with the record can see the comments for the inspection results.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "currentTaskId": {
            "description": "The ID of the current workflow task.",
            "type": "string"
          },
          "daysDue": {
            "description": "The amount of time to complete a task (measured in days).",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "dispositionNote": {
            "description": "A note describing the disposition of the current task.",
            "type": "string"
          },
          "dueDate": {
            "description": "The desired completion date of the task.",
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "description": "The time the workflow task was completed.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedHours": {
            "description": "The estimated hours necessary to complete this task.",
            "format": "double",
            "type": "number"
          },
          "hoursSpent": {
            "description": "Number of hours used for a workflow or workflow task.",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "The workflow task system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "isActive": {
            "description": "Indicates whether or not the workflow task is active.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "isCompleted": {
            "description": "Indicates whether or not the workflow task is completed.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "The date when the task item was last changed.",
            "format": "date-time",
            "type": "string"
          },
          "lastModifiedDateString": {
            "description": "A string represents the date when the task item was last changed.",
            "type": "string"
          },
          "nextTaskId": {
            "description": "The id of the next task in a workflow.",
            "type": "string"
          },
          "overTime": {
            "description": "A labor cost factor that indicates time worked beyond a worker's regular working hours.",
            "type": "string"
          },
          "processCode": {
            "description": "The process code for the next task in a workflow.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "startTime": {
            "description": "The time the workflow task started.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The workflow task status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "trackStartDate": {
            "description": "The date that time tracking is set to begin.",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "response_taskItemActionModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/taskItemActionModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "taskItemActionModel": {
        "type": "object",
        "properties": {
          "action": {
            "description": "Audit trail action type like \"payment allocation\"",
            "type": "string"
          },
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "approval": {
            "description": "Used to indicate supervisory approval of an adhoc task.",
            "type": "string"
          },
          "assignEmailDisplay": {
            "description": "Indicates whether or not to display the agency employeeâ€™s email address in ACA. Public users can then click the e-mail hyperlink and send an e-mail to the agency employee. â€œYâ€ : display the email address. â€œNâ€ : hide the email address.",
            "type": "string"
          },
          "assignedDate": {
            "description": "The date of the assigned action.",
            "format": "date-time",
            "type": "string"
          },
          "assignedToDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "assignedUser": {
            "type": "object",
            "description": "The staff member responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "billable": {
            "description": "Indicates whether or not the item is billable.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "comment": {
            "description": "Comments or notes about the current context.",
            "type": "string"
          },
          "commentDisplay": {
            "description": "Indicates whether or not Accela Citizen Access users can view the inspection results comments.\t",
            "type": "string"
          },
          "commentPublicVisible": {
            "description": "Specifies the type of user who can view the inspection result comments. <br/>\"All ACA Users\" - Both registered and anonymous Accela Citizen Access users can view the comments for inspection results. <br/>\"Record Creator Only\" - the user who created the record can see the comments for the inspection results. <br/>\"Record Creator and Licensed Professional\" - The user who created the record and the licensed professional associated with the record can see the comments for the inspection results.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "currentTaskId": {
            "description": "The ID of the current workflow task.",
            "type": "string"
          },
          "daysDue": {
            "description": "The amount of time to complete a task (measured in days).",
            "format": "int64",
            "type": "integer"
          },
          "description": {
            "description": "The description of the record or item.",
            "type": "string"
          },
          "dispositionNote": {
            "description": "A note describing the disposition of the current task.",
            "type": "string"
          },
          "dueDate": {
            "description": "The desired completion date of the task.",
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "description": "The time the workflow task was completed.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedDueDate": {
            "description": "The estimated date of completion.",
            "format": "date-time",
            "type": "string"
          },
          "estimatedHours": {
            "description": "The estimated hours necessary to complete this task.",
            "format": "double",
            "type": "number"
          },
          "hoursSpent": {
            "description": "Number of hours used for a workflow or workflow task.",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "The workflow task system id assigned by the Civic Platform server.",
            "type": "string"
          },
          "inPossessionTime": {
            "description": "The application level in possession time of the time tracking feature.",
            "format": "double",
            "type": "number"
          },
          "isActive": {
            "description": "Indicates whether or not the workflow task is active.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "isCompleted": {
            "description": "Indicates whether or not the workflow task is completed.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "lastModifiedDate": {
            "description": "The date when the task item was last changed.",
            "format": "date-time",
            "type": "string"
          },
          "lastModifiedDateString": {
            "description": "A string represents the date when the task item was last changed.",
            "type": "string"
          },
          "nextTaskId": {
            "description": "The id of the next task in a workflow.",
            "type": "string"
          },
          "overTime": {
            "description": "A labor cost factor that indicates time worked beyond a worker's regular working hours.",
            "type": "string"
          },
          "processCode": {
            "description": "The process code for the next task in a workflow.",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "startTime": {
            "description": "The time the workflow task started.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The workflow task status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          },
          "trackStartDate": {
            "description": "The date that time tracking is set to begin.",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "request_taskItemModel": {
        "type": "object",
        "properties": {
          "actionbyDepartment": {
            "type": "object",
            "description": "The department responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "actionbyUser": {
            "type": "object",
            "description": "The individual responsible for the action.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "approval": {
            "description": "Used to indicate supervisory approval of an adhoc task.",
            "type": "string"
          },
          "assignEmailDisplay": {
            "description": "Indicates whether or not to display the agency employeeâ€™s email address in ACA. Public users can then click the e-mail hyperlink and send an e-mail to the agency employee. â€œYâ€ : display the email address. â€œNâ€ : hide the email address.",
            "type": "string"
          },
          "billable": {
            "description": "Indicates whether or not the item is billable.",
            "enum": [
              "Y",
              "N"
            ],
            "type": "string"
          },
          "comment": {
            "description": "Comments or notes about the current context.",
            "type": "string"
          },
          "commentDisplay": {
            "description": "Indicates whether or not Accela Citizen Access users can view the inspection results comments.\t",
            "type": "string"
          },
          "commentPublicVisible": {
            "description": "Specifies the type of user who can view the inspection result comments. <br/>\"All ACA Users\" - Both registered and anonymous Accela Citizen Access users can view the comments for inspection results. <br/>\"Record Creator Only\" - the user who created the record can see the comments for the inspection results. <br/>\"Record Creator and Licensed Professional\" - The user who created the record and the licensed professional associated with the record can see the comments for the inspection results.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dueDate": {
            "description": "The desired completion date of the task.",
            "format": "date-time",
            "type": "string"
          },
          "endTime": {
            "description": "The time the workflow task was completed.",
            "format": "date-time",
            "type": "string"
          },
          "hoursSpent": {
            "description": "Number of hours used for a workflow or workflow task.",
            "format": "double",
            "type": "number"
          },
          "overTime": {
            "description": "A labor cost factor that indicates time worked beyond a worker's regular working hours.",
            "type": "string"
          },
          "startTime": {
            "description": "The time the workflow task started.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The workflow task status.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "statusDate": {
            "description": "The date when the current status changed.",
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "response_trustAccountModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/trustAccountModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "trustAccountModel": {
        "type": "object",
        "properties": {
          "account": {
            "description": "The account ID number for the trust account.",
            "type": "string"
          },
          "associations": {
            "type": "object",
            "description": "The trust account associations.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "balance": {
            "description": "The balance of the trust account in dollars.",
            "format": "double",
            "type": "number"
          },
          "description": {
            "description": "The description of the trust account.",
            "type": "string"
          },
          "id": {
            "description": "The trust account system id assigned by the Civic Platform server.",
            "format": "int64",
            "type": "integer"
          },
          "isPrimary": {
            "description": "Indicates whether or not to designate the trust account as the primary source.",
            "type": "string",
            "enum": [
              "Y",
              "N"
            ]
          },
          "ledgerAccount": {
            "description": "The ledger account of the trust account.",
            "type": "string"
          },
          "overdraft": {
            "type": "object",
            "description": "Indicates whether or not the trust account can use the overdraft option.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            }
          },
          "overdraftLimit": {
            "description": "The overdraft limit amount, in dollars, for the trust account.",
            "format": "double",
            "type": "number"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "serviceProviderCode": {
            "description": "The unique agency identifier.",
            "type": "string"
          },
          "status": {
            "type": "object",
            "description": "The status of the trust account.",
            "properties": {
              "text": {
                "description": "The localized display value.",
                "type": "string"
              },
              "value": {
                "description": "The data value.",
                "type": "string"
              }
            },
            "enum": [
              "Active",
              "Closed"
            ]
          },
          "thresholdAmount": {
            "description": "The minimum amount required in a trust account.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "userRolePrivilegeModel": {
        "type": "object",
        "properties": {
          "contactAllowed": {
            "description": "Indicates whether or not the permission is given to a contact.",
            "type": "boolean"
          },
          "deleteAllowed": {
            "description": "Indicates whether or not the permission to delete a document is allowed.\t",
            "type": "boolean"
          },
          "downloadAllowed": {
            "description": "Indicates whether or not the permission to download a document is allowed.",
            "type": "boolean"
          },
          "licenseTypeRules": {
            "items": {
              "type": "string",
              "description": "A string array containing the types of licensed professionals who are given the permission.\t"
            },
            "type": "array"
          },
          "licensendProfessionalAllowed": {
            "description": "Indicates whether or not the permission is given to a licensed professional.",
            "type": "boolean"
          },
          "ownerAllowed": {
            "description": "Indicates whether or not the permission is given to an owner.",
            "type": "boolean"
          },
          "recordCreatorAllowed": {
            "description": "Indicates whether or not the permission is given to a record creator.",
            "type": "boolean"
          },
          "registeredUserAllowed": {
            "description": "Indicates whether or not the permission is given to a registered public user.",
            "type": "boolean"
          },
          "titleViewAllowed": {
            "description": "Indicates whether or not the permission to view a document name is allowed.",
            "type": "boolean"
          },
          "uploadAllowed": {
            "description": "Indicates whether or not the permission to upload a document is allowed.",
            "type": "boolean"
          }
        }
      },
      "voteRequest": {
        "type": "object",
        "properties": {
          "vote": {
            "description": "The vote on a record (agenda item in a hearing, for example). A value of true is a \"yea\" vote and a value of false indicates a \"nay\" vote.",
            "type": "boolean"
          }
        },
        "required": [
          "vote"
        ]
      },
      "response_voteResult": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/voteResult"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "voteResult": {
        "type": "object",
        "properties": {
          "vote": {
            "description": "The result of a vote on a record (agenda item in a hearing, for example). A value of true is a \"yea\" vote and a value of false indicates a \"nay\" vote.",
            "type": "boolean"
          }
        }
      },
      "response_voteSummary": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/voteSummary"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "voteSummary": {
        "type": "object",
        "properties": {
          "downCount": {
            "description": "The number of votes that disapprove the specified record.",
            "type": "integer"
          },
          "upCount": {
            "description": "The number of votes that approve the specified record.",
            "type": "integer"
          }
        }
      },
      "response_workflowTaskCommentModelArray": {
        "type": "object",
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/workflowTaskCommentModel"
            },
            "type": "array"
          },
          "status": {
            "type": "integer",
            "description": "The HTTP return status."
          }
        }
      },
      "workflowTaskCommentModel": {
        "type": "object",
        "properties": {
          "action": {
            "description": "Audit trail action type like 'payment allocation'",
            "type": "string"
          },
          "createdBy": {
            "description": "The unique user id of the individual that created the entry.",
            "type": "string"
          },
          "createdDate": {
            "description": "The date the entry was created.",
            "format": "date-time",
            "type": "string"
          },
          "recordId": {
            "$ref": "#/components/schemas/recordIdModel"
          },
          "text": {
            "description": "The comment text.",
            "type": "string"
          },
          "workflowTaskId": {
            "description": "The id of the workflow task.",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    }
  },
  "servers": [],
  "security": []
}